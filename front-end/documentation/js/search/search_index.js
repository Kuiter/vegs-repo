var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.041,1,0.663]],["body/components/AdminComponent.html",[0,0.079,1,1.215,2,0.902,3,0.179,4,0.124,5,0.951,6,0.985,7,0.985,8,1.112,9,0.124,10,4.348,11,0.528,12,5.538,13,1.429,14,2.523,15,0.918,16,1.525,17,1.47,18,1.211,19,6.992,20,1.211,21,6.354,22,0.213,23,0.013,24,0.195,25,0.141,26,0.213,27,1.019,28,0.654,29,0.764,30,1.254,31,1.128,32,0.823,33,1.453,34,0.985,35,0.55,36,0.985,37,0.854,38,1.254,39,0.823,40,1.38,41,0.823,42,0.985,43,0.854,44,0.885,45,1.254,46,0.854,47,0.736,48,1.286,49,1.559,50,0.823,51,0.985,52,0.854,53,1.128,54,0.985,55,0.823,56,0.985,57,0.794,58,0.823,59,0.885,60,0.854,61,0.854,62,0.926,63,0.854,64,1.534,65,0.854,66,0.985,67,0.823,68,1.38,69,0.854,70,1.088,71,0.823,72,0.823,73,0.854,74,0.985,75,0.823,76,0.985,77,0.854,78,0.985,79,0.823,80,0.854,81,0.823,82,1.049,83,0.985,84,0.854,85,0.985,86,0.823,87,1.011,88,0.854,89,1.254,90,0.854,91,1.169,92,0.854,93,0.918,94,0.823,95,0.885,96,0.823,97,0.833,98,0.854,99,0.854,100,0.823,101,0.823,102,0.823,103,0.844,104,0.985,105,0.823,106,0.823,107,0.951,108,0.885,109,0.823,110,0.985,111,0.823,112,0.951,113,0.985,114,0.008,115,0.01,116,0.008]],["title/components/AdminHeaderComponent.html",[0,0.041,37,0.688]],["body/components/AdminHeaderComponent.html",[0,0.066,1,0.691,2,0.804,3,0.16,4,0.104,5,1.223,6,0.826,7,0.826,8,1.021,9,0.104,11,0.443,13,1.464,14,2.248,15,0.77,16,1.513,17,1.458,18,1.079,20,1.079,22,0.307,23,0.014,24,0.163,25,0.118,26,0.179,27,0.855,29,0.641,30,1.118,31,1.005,32,0.691,33,1.357,34,0.826,35,0.505,36,0.826,37,1.177,38,1.118,39,0.691,40,1.266,41,0.691,42,0.826,43,0.717,44,0.743,45,1.118,46,0.717,47,0.618,48,1.18,49,1.494,50,0.691,51,0.826,52,0.717,53,1.005,54,0.826,55,0.691,56,0.826,57,0.666,58,0.691,59,0.743,60,0.717,61,0.717,62,0.865,63,0.717,64,1.461,65,0.717,66,0.826,67,0.691,68,1.266,69,0.717,70,0.969,71,0.691,72,0.691,73,0.717,74,0.826,75,0.691,76,0.826,77,0.717,78,0.826,79,0.691,80,0.717,81,0.691,82,0.935,83,0.826,84,0.717,85,0.826,86,0.691,87,0.901,88,0.717,89,1.118,90,0.717,91,1.042,92,0.717,93,0.77,94,0.691,95,0.743,96,0.691,97,0.742,98,0.717,99,0.717,100,0.691,101,0.691,102,0.691,103,0.775,104,0.826,105,0.691,106,0.691,107,0.798,108,0.743,109,0.691,110,0.826,111,0.691,112,0.798,113,0.826,114,0.007,115,0.009,116,0.007,117,5.199,118,5.653,119,3.649,120,3.371,121,4.174,122,2.337,123,1.198,124,1.417,125,5.593,126,4.936,127,0.26,128,0.742,129,2.872,130,3.419,131,0.655,132,7.404,133,1.667,134,0.632,135,4.187,136,2.085,137,1.807,138,5.663,139,2.892,140,3.371,141,5.663,142,0.627,143,0.835,144,4.187,145,3.575,146,3.193,147,4.936,148,3.575,149,1.314,150,0.743,151,0.743,152,1.373,153,4.187,154,1.807,155,4.936,156,3.813,157,2.534,158,0.424,159,4.187,160,2.164,161,2.534,162,3.193,163,4.645,164,4.187,165,4.187,166,2.085,167,1.486,168,1.087,169,4.187,170,1.977,171,1.015,172,1.434,173,1.157,174,1.542,175,4.187,176,4.187,177,4.187,178,1.954,179,0.948,180,1.383,181,2.819,182,1.873,183,4.187,184,3.295,185,3.813,186,4.936,187,3.371,188,5.663,189,4.936,190,5.663,191,5.663,192,2.819,193,3.649,194,1.798,195,1.807,196,1.798]],["title/components/AdminLandingComponent.html",[0,0.041,39,0.663]],["body/components/AdminLandingComponent.html",[0,0.067,1,0.531,2,0.668,3,0.133,4,0.08,5,1.241,6,0.635,7,0.635,8,1.117,9,0.08,11,0.69,13,1.392,15,0.592,16,1.492,17,1.436,18,0.897,20,0.897,22,0.238,23,0.014,24,0.126,25,0.091,26,0.138,27,0.658,28,0.422,29,0.493,30,0.929,31,1.247,32,0.531,33,1.208,34,0.635,35,0.588,36,0.635,37,0.551,38,0.929,39,1.01,40,1.098,41,0.531,42,0.635,43,0.551,44,0.571,45,0.929,46,0.551,47,1.084,48,1.023,49,1.386,50,0.531,51,0.635,52,0.551,53,0.835,54,0.635,55,0.531,56,0.635,57,0.512,58,0.531,59,0.571,60,0.551,61,0.551,62,0.856,63,0.551,64,1.342,65,0.551,66,0.635,67,0.531,68,1.098,69,0.551,70,1.233,71,0.531,72,0.531,73,0.551,74,0.635,75,0.531,76,0.635,77,0.551,78,0.635,79,0.531,80,1.203,81,0.531,82,1.01,83,0.635,84,0.551,85,0.635,86,0.531,87,0.974,88,0.551,89,0.929,90,0.551,91,0.866,92,0.551,93,0.592,94,0.531,95,1.304,96,0.531,97,0.944,98,0.551,99,0.551,100,0.531,101,0.531,102,0.531,103,0.672,104,0.635,105,0.531,106,0.531,107,0.613,108,0.571,109,0.531,110,0.635,111,0.531,112,0.613,113,0.635,114,0.005,115,0.007,116,0.005,117,5.317,120,4.049,123,0.995,124,1.098,127,0.2,128,0.617,130,2.629,131,0.545,133,1.484,134,0.662,136,1.733,137,1.501,142,0.721,143,0.96,145,2.971,146,2.654,149,1.086,150,0.835,151,0.835,152,1.141,154,1.501,158,0.476,160,1.799,162,3.451,170,1.885,171,0.781,173,0.962,179,1.066,197,5.317,198,2.533,199,4.43,200,4.102,201,4.707,202,4.102,203,2.971,204,4.707,205,4.707,206,4.378,207,3.704,208,3.176,209,4.026,210,4.026,211,4.707,212,4.707,213,4.707,214,6.12,215,4.707,216,3.219,217,1.589,218,2.403,219,4.102,220,2.197,221,0.7,222,0.7,223,4.707,224,3.219,225,4.707,226,3.219,227,4.102,228,1.942,229,4.233,230,3.219,231,5.334,232,4.816,233,3.219,234,4.707,235,3.219,236,2.329,237,3.587,238,1.03,239,2.022,240,4.707,241,3.219,242,1.799,243,4.707,244,3.219,245,4.707,246,2.296,247,1.916,248,1.34,249,3.704,250,4.707,251,3.219,252,1.775,253,1.644,254,1.916,255,3.406,256,3.219,257,3.219,258,3.279,259,3.219,260,3.219,261,3.219,262,3.219,263,5.563,264,3.219,265,2.806,266,2.167,267,4.43,268,4.102,269,4.754,270,2.985,271,2.611,272,4.816,273,4.707,274,6.12,275,2.654,276,4.707,277,4.049,278,3.864,279,4.707,280,3.175,281,4.849,282,4.707,283,4.102,284,4.707,285,6.12,286,4.816,287,6.12,288,3.406,289,4.707,290,3.169,291,1.733,292,4.707,293,4.707,294,3.704,295,3.704,296,4.102,297,4.707,298,3.704,299,3.406,300,7.202,301,4.707,302,2.971,303,2.802,304,2.971,305,2.654,306,4.707,307,2.802,308,4.707,309,0.777,310,0.992,311,1.45,312,1.57,313,1.733,314,2.533,315,1.942,316,1.942,317,1.396,318,1.44,319,3.219,320,2.032,321,1.503,322,2.654,323,2.33,324,1.278]],["title/modules/AdminModule.html",[325,1.595,326,2.705]],["body/modules/AdminModule.html",[1,1.227,3,0.12,4,0.105,8,0.91,9,0.105,13,1.189,22,0.364,23,0.014,24,0.166,25,0.12,26,0.182,29,0.651,37,1.273,39,1.227,46,1.323,47,0.627,48,1.368,58,1.067,61,1.323,62,0.814,63,1.273,67,1.227,69,1.323,70,0.979,71,1.227,79,1.227,80,0.728,86,1.227,87,0.676,94,1.227,95,0.754,96,1.227,97,0.557,99,1.273,100,1.227,114,0.007,115,0.009,116,0.007,118,3.344,139,2.17,197,3.076,246,2.79,247,2.53,325,1.687,326,5.738,327,1.984,328,2.277,329,3.849,330,2.396,331,3.849,332,2.17,333,3.704,334,3.704,335,3.704,336,3.704,337,5.007,338,4.193,339,4.427,340,3.405,341,2.17,342,4.25,343,4.986,344,3.065,345,3.065,346,3.852,347,2.53,348,3.344,349,3.704,350,4.986,351,3.704,352,3.852,353,2.861,354,4.986,355,3.704,356,5.721,357,4.25,358,5.636,359,1.687,360,4.986,361,3.704,362,4.502,363,3.344,364,2.17,365,4.14,366,3.076,367,4.502,368,3.344,369,4.986,370,3.704,371,4.502,372,3.344,373,4.986,374,2.861,375,4.986,376,3.704,377,5.721,378,2.683,379,4.14,380,3.076,381,4.986,382,3.076,383,3.344,384,6.481,385,4.14,386,4.986,387,1.754,388,3.076,389,5.636,390,3.852,391,3.704,392,3.704,393,3.344,394,4.25,395,2.683,396,3.533,397,3.076,398,3.344,399,3.344,400,3.076,401,3.076,402,3.076,403,3.076,404,3.076,405,3.076,406,3.344,407,3.076,408,4.25,409,3.076]],["title/modules/AdminRoutingModule.html",[325,1.595,337,2.705]],["body/modules/AdminRoutingModule.html",[0,0.086,1,1.045,3,0.14,4,0.123,8,1.007,9,0.123,13,1.165,22,0.357,23,0.014,24,0.194,25,0.14,26,0.212,39,1.045,62,0.797,63,1.258,67,1.045,70,0.849,71,1.045,79,1.045,80,0.849,86,1.045,87,0.789,94,1.045,95,0.881,96,1.151,97,0.83,99,1.258,100,1.045,114,0.008,115,0.01,116,0.008,117,3.591,171,1.203,197,3.591,246,3.089,247,2.953,271,1.639,299,5.317,309,0.819,327,2.316,332,2.534,337,4.263,344,2.658,345,3.393,349,4.324,383,3.904,384,6.764,388,3.591,389,6.078,390,4.263,391,4.324,392,4.324,397,3.591,398,3.904,401,3.591,402,3.591,403,3.591,404,3.591,407,3.591,409,3.591,410,3.904,411,3.561,412,3.997,413,5.98,414,4.961,415,1.203,416,5.271,417,4.324,418,7.13,419,4.961,420,4.961,421,4.961,422,3.997,423,4.961,424,7.59,425,5.519,426,4.961,427,4.961,428,4.961,429,4.961,430,6.078,431,4.961,432,4.961,433,4.961,434,4.961,435,4.961,436,3.591]],["title/injectables/AdminUserService.html",[163,2.907,437,0.821]],["body/injectables/AdminUserService.html",[3,0.215,4,0.149,9,0.149,11,0.639,22,0.325,23,0.014,24,0.235,25,0.17,26,0.258,27,1.233,28,0.791,114,0.01,115,0.011,116,0.01,127,0.375,130,3.53,131,0.826,134,0.555,142,0.791,149,1.267,162,4.026,163,5.168,166,2.63,167,2.142,168,1.566,173,1.233,174,2.222,182,2.7,437,1.459,438,2.395,439,6.224,440,5.258,441,2.729,442,7.141,443,7.864,444,6.033,445,3.195,446,1.795,447,2.142,448,1.994,449,2.142,450,0.89]],["title/components/AppComponent.html",[0,0.041,41,0.663]],["body/components/AppComponent.html",[0,0.078,1,0.802,2,0.887,3,0.176,4,0.12,5,0.926,6,0.959,7,0.959,8,1.098,9,0.12,11,0.515,13,1.149,15,0.893,16,1.524,17,1.47,18,1.19,20,1.19,22,0.295,23,0.013,24,0.19,25,0.137,26,0.208,28,0.905,29,0.744,30,1.233,31,1.109,32,0.802,33,1.438,34,0.959,35,0.544,36,0.959,37,0.832,38,1.233,39,0.802,40,1.363,41,1.203,42,0.959,43,0.832,44,0.862,45,1.233,46,0.832,47,0.717,48,1.27,49,1.549,50,0.802,51,0.959,52,0.832,53,1.109,54,0.959,55,0.802,56,0.959,57,0.773,58,0.802,59,0.862,60,0.832,61,0.832,62,0.917,63,0.832,64,1.523,65,0.832,66,0.959,67,0.802,68,1.363,69,0.832,70,1.069,71,0.802,72,0.802,73,0.832,74,0.959,75,0.802,76,0.959,77,0.832,78,0.959,79,0.802,80,0.832,81,0.802,82,1.031,83,0.959,84,0.832,85,0.959,86,0.802,87,0.994,88,0.832,89,1.233,90,0.832,91,1.149,92,0.832,93,0.893,94,0.802,95,0.862,96,0.802,97,0.819,98,0.832,99,0.832,100,0.802,101,0.802,102,0.802,103,0.834,104,0.959,105,0.802,106,0.802,107,0.926,108,0.862,109,0.802,110,0.959,111,0.802,112,0.926,113,0.959,114,0.008,115,0.01,116,0.008,124,0.959,127,0.302,128,0.819,134,0.574,150,0.862,151,0.862,158,0.492,168,1.261,238,1.063,446,1.446,448,2.064,451,4.234,452,6.905,453,6.247,454,6.018,455,4.858,456,6.247,457,4.858,458,2.892,459,4.858]],["title/modules/AppModule.html",[325,1.595,460,2.907]],["body/modules/AppModule.html",[3,0.15,4,0.132,9,0.132,17,0.91,22,0.36,23,0.014,24,0.207,25,0.15,26,0.227,29,0.814,41,1.37,57,1.052,72,1.304,75,1.304,114,0.008,115,0.01,116,0.008,139,2.714,167,1.887,325,2.11,326,5.318,327,2.481,328,2.848,329,4.285,330,4.059,331,3.937,332,2.714,340,3.937,341,2.714,344,3.543,345,3.543,348,4.183,352,4.452,353,3.579,365,4.786,366,3.847,371,5.204,372,4.183,379,4.786,380,3.847,385,4.786,387,2.194,460,6.123,461,4.633,462,4.633,463,4.633,464,4.633,465,5.318,466,4.986,467,5.318,468,5.316,469,6.613,470,5.764,471,3.847,472,6.613,473,5.316,474,4.633,475,4.633,476,4.633,477,6.613,478,5.316,479,4.633,480,5.316,481,5.316,482,4.633]],["title/modules/AppRoutingModule.html",[325,1.595,465,2.705]],["body/modules/AppRoutingModule.html",[0,0.075,3,0.174,4,0.152,9,0.152,22,0.345,23,0.014,24,0.24,25,0.174,26,0.263,41,1.016,72,1.193,75,1.193,114,0.01,115,0.011,116,0.01,171,1.493,327,2.875,332,3.145,344,3.299,345,3.873,410,4.846,411,3.918,412,4.563,415,1.493,416,4.843,465,4.866,474,5.367,475,5.367,476,5.367,483,6.158,484,3.666,485,5.367,486,6.158,487,6.158]],["title/guards/AuthGuard.html",[413,2.907,488,2.536]],["body/guards/AuthGuard.html",[3,0.141,4,0.123,9,0.123,11,0.527,14,3.134,22,0.314,23,0.014,24,0.194,25,0.141,26,0.213,28,0.832,35,0.579,114,0.008,115,0.01,116,0.008,123,1.052,127,0.309,130,2.724,131,0.734,134,0.676,142,0.86,158,0.744,170,2.432,171,1.206,173,1.296,180,1.644,185,4.271,217,1.909,221,0.926,222,0.926,238,1.663,248,1.663,252,2.023,253,2.541,309,0.821,413,4.591,415,1.206,417,6.879,418,6.879,437,1.296,447,1.766,448,1.644,449,2.887,450,1.085,458,4.623,484,3.776,488,4.004,489,3.35,490,4.336,491,6.343,492,6.343,493,4.975,494,4.975,495,4.975,496,6.964,497,7.032,498,6.964,499,4.975,500,7.354,501,3.158,502,6.983,503,4.975,504,4.975,505,6.343,506,4.975,507,2.096,508,6.343,509,6.343,510,5.528,511,4.591,512,6.343,513,5.054,514,4.975,515,1.975,516,3.915,517,4.975,518,4.975,519,3.776,520,4.975,521,4.975,522,4.975,523,4.975,524,4.975,525,2.427,526,4.975,527,4.975,528,3.601,529,4.975,530,4.975,531,4.336]],["title/modules/AuthModule.html",[325,1.595,532,2.907]],["body/modules/AuthModule.html",[0,0.071,3,0.16,4,0.14,9,0.14,22,0.352,23,0.014,24,0.221,25,0.16,26,0.242,29,0.868,73,1.437,77,1.437,114,0.009,115,0.011,116,0.009,139,2.892,171,1.373,325,2.248,327,2.644,328,3.035,329,4.407,330,3.193,331,3.371,332,3.781,340,4.093,341,2.892,344,3.035,345,3.684,346,4.629,347,3.371,352,4.629,353,3.813,362,5.411,363,4.457,364,2.892,367,5.411,368,4.457,385,4.976,387,2.337,411,3.781,412,4.34,415,1.373,416,4.34,436,4.099,532,6.004,533,4.936,534,4.936,535,4.936,536,5.664,537,5.664,538,5.664,539,3.371,540,3.371]],["title/injectables/AuthService.html",[437,0.821,458,2.391]],["body/injectables/AuthService.html",[3,0.145,4,0.127,9,0.127,11,0.543,22,0.327,23,0.014,24,0.2,25,0.145,26,0.219,27,1.047,35,0.509,114,0.008,115,0.01,116,0.008,124,1.011,127,0.318,128,0.847,130,3.04,131,0.748,134,0.705,142,0.867,150,0.909,151,0.909,152,1.567,158,0.716,160,2.47,166,2.379,167,1.818,168,1.33,172,1.754,174,2.379,180,1.693,181,3.449,182,2.292,217,1.929,221,0.813,222,0.813,238,1.414,248,1.549,252,1.634,309,0.845,437,1.519,438,2.034,441,2.47,445,2.891,446,1.524,447,1.818,448,1.693,449,2.778,450,1.044,458,3.846,484,3.846,507,2.456,510,6.169,515,2.034,525,2.499,531,4.465,539,4.214,540,4.893,541,4.465,542,5.849,543,6.158,544,7.078,545,7.078,546,7.433,547,6.462,548,5.123,549,4.676,550,6.462,551,6.462,552,4.191,553,5.123,554,6.462,555,5.849,556,6.462,557,4.191,558,5.123,559,5.085,560,5.123,561,5.632,562,1.677,563,5.123,564,4.031,565,5.123,566,5.123,567,3.643]],["title/components/EndTrialComponent.html",[0,0.041,43,0.688]],["body/components/EndTrialComponent.html",[0,0.071,1,0.793,2,0.88,3,0.175,4,0.119,5,0.916,6,0.948,7,0.948,8,1.093,9,0.119,13,1.141,15,0.884,16,1.523,17,1.467,18,1.182,20,1.182,22,0.205,23,0.013,24,0.188,25,0.136,26,0.205,28,0.901,29,0.736,30,1.224,31,1.101,32,0.793,33,1.433,34,0.948,35,0.541,36,0.948,37,0.823,38,1.224,39,0.793,40,1.356,41,0.793,42,0.948,43,1.243,44,1.408,45,1.224,46,0.823,47,0.709,48,1.263,49,1.545,50,0.793,51,0.948,52,0.823,53,1.101,54,0.948,55,0.793,56,0.948,57,0.764,58,0.793,59,0.853,60,0.823,61,0.823,62,0.914,63,0.823,64,1.519,65,0.823,66,0.948,67,0.793,68,1.356,69,0.823,70,1.062,71,0.793,72,0.793,73,0.823,74,0.948,75,0.793,76,0.948,77,0.823,78,0.948,79,0.793,80,0.823,81,0.793,82,1.024,83,0.948,84,0.823,85,0.948,86,0.793,87,0.987,88,0.823,89,1.224,90,0.823,91,1.141,92,0.823,93,0.884,94,0.793,95,0.853,96,0.793,97,0.813,98,0.823,99,0.823,100,0.793,101,0.793,102,0.793,103,0.907,104,0.948,105,0.793,106,0.793,107,0.916,108,0.853,109,0.793,110,0.948,111,0.793,112,0.916,113,0.948,114,0.008,115,0.01,116,0.008,123,1.312,124,1.356,127,0.298,131,0.718,133,1.76,134,0.57,142,0.532,143,0.709,471,4.49,568,5.406,569,4.972,570,4.188,571,5.987,572,5.407,573,4.806,574,4.806,575,5.407,576,4.882,577,4.882,578,6.204,579,3.693,580,4.882,581,6.204,582,6.204,583,6.204]],["title/modules/EndTrialModule.html",[325,1.595,584,2.907]],["body/modules/EndTrialModule.html",[0,0.063,3,0.171,4,0.15,9,0.15,22,0.336,23,0.014,24,0.236,25,0.171,26,0.259,29,0.927,43,1.408,44,1.074,114,0.01,115,0.011,116,0.01,139,3.091,171,1.468,325,2.403,327,2.826,328,3.244,329,4.535,330,3.413,331,3.603,332,3.654,340,4.26,341,3.091,344,3.244,345,3.834,346,4.818,347,3.603,411,3.89,412,4.517,415,1.468,416,3.821,436,4.381,568,4.764,569,4.381,584,5.894,585,5.276,586,5.276,587,6.054,588,4.764]],["title/injectables/EventsService.html",[437,0.821,589,2.051]],["body/injectables/EventsService.html",[0,0.048,2,0.655,3,0.13,4,0.078,9,0.078,11,0.332,22,0.288,23,0.014,24,0.122,25,0.088,26,0.134,28,0.605,35,0.563,47,1.054,82,0.997,87,0.961,91,1.239,103,0.881,114,0.005,115,0.007,116,0.005,127,0.194,128,0.605,129,2.064,131,0.534,134,0.707,142,0.822,143,0.891,149,1.376,150,0.819,151,0.819,158,0.554,166,2.224,167,1.112,168,0.813,173,1.119,174,1.699,180,2.128,181,3.687,217,1.197,221,0.899,222,0.899,238,1.01,239,1.81,248,1.475,266,3.106,268,4.021,275,2.601,291,1.699,309,1.224,317,1.69,415,1.947,437,0.943,438,1.244,445,1.402,446,0.932,447,1.112,448,1.035,449,1.944,450,1.076,497,4.021,507,1.524,515,1.244,525,2.671,555,4.754,589,2.356,590,3.331,591,2.73,592,2.912,593,4.021,594,4.875,595,4.613,596,6.041,597,4.875,598,2.912,599,5.068,600,6.44,601,4.754,602,5.476,603,4.613,604,4.613,605,5.265,606,4.309,607,4.613,608,4.613,609,4.613,610,4.613,611,1.978,612,5.476,613,2.947,614,3.397,615,4.613,616,4.613,617,3.133,618,3.339,619,4.613,620,3.339,621,2.831,622,3.339,623,2.601,624,2.893,625,2.912,626,4.613,627,3.133,628,6.041,629,4.021,630,4.021,631,4.613,632,6.736,633,4.613,634,4.613,635,3.44,636,3.133,637,4.613,638,6.041,639,3.339,640,6.041,641,4.613,642,4.252,643,2.912,644,2.472,645,4.613,646,3.133,647,3.26,648,4.613,649,3.133,650,1.875,651,4.613,652,3.133,653,4.613,654,4.613,655,3.63,656,4.754,657,4.613,658,4.613,659,4.754,660,4.613,661,4.613,662,3.133,663,4.613,664,3.133,665,4.613,666,4.021,667,3.63,668,5.476,669,3.406,670,3.133,671,4.309,672,4.613,673,4.021,674,6.041,675,3.237,676,4.372,677,3.133,678,2.356,679,2.912,680,3.133,681,4.613,682,1.766,683,2.73,684,6.466,685,4.512,686,5.172,687,3.133,688,3.133,689,3.133,690,1.345,691,1.112,692,3.133,693,4.156,694,3.553,695,6.041,696,4.309,697,3.133,698,3.141,699,3.963,700,5.068,701,6.041,702,2.267,703,4.613,704,6.736,705,6.041,706,6.041,707,6.041,708,2.267,709,3.133,710,2.465,711,4.613,712,3.596,713,3.133,714,3.963,715,2.25,716,2.73,717,5.476,718,2.73,719,3.133,720,3.339,721,4.613,722,4.613,723,4.613,724,4.613,725,3.133,726,3.133,727,1.679,728,3.133,729,3.133,730,3.63,731,3.106,732,3.133,733,2.73,734,3.133,735,2.267,736,3.133,737,3.133,738,2.465,739,3.133,740,3.133]],["title/interfaces/ExampleFlatNode.html",[501,1.725,741,2.907]],["body/interfaces/ExampleFlatNode.html",[0,0.064,3,0.111,4,0.097,5,1.034,8,1.207,9,0.097,11,0.416,16,0.698,17,0.673,18,0.749,20,0.749,22,0.3,23,0.014,24,0.153,25,0.111,26,0.168,27,0.803,35,0.553,47,1.15,50,0.649,62,0.495,97,0.711,103,0.655,114,0.006,115,0.009,116,0.006,120,3.698,122,1.623,123,0.832,124,1.226,127,0.244,128,0.711,133,0.953,136,1.998,137,2.136,140,2.341,143,0.8,148,2.482,149,0.963,152,1.762,154,1.731,157,1.759,158,0.629,172,1.346,173,0.803,179,1.719,195,1.254,208,3.03,228,2.764,236,2.127,238,1.466,248,1.59,252,1.731,270,3.03,271,1.793,277,2.341,291,1.998,298,3.094,309,1.025,317,1.763,382,2.846,415,0.953,445,1.759,450,1.036,501,1.689,507,2.213,519,2.341,562,1.021,614,3.267,621,1.998,639,2.846,669,1.836,675,2.107,691,2.205,715,2.646,741,3.927,742,2.482,743,3.094,744,4.729,745,6.195,746,6.332,747,6.711,748,2.659,749,2.482,750,2.846,751,2.647,752,2.846,753,2.647,754,2.647,755,3.427,756,3.427,757,4.729,758,3.267,759,2.482,760,3.427,761,3.094,762,2.341,763,3.094,764,2.647,765,1.759,766,3.427,767,3.427,768,4.509,769,3.23,770,1.918,771,3.094,772,3.921,773,3.059,774,3.094,775,3.427,776,5.27,777,2.846,778,2.647,779,3.094,780,1.448,781,3.427,782,3.427,783,3.427,784,4.729,785,5.414,786,3.427,787,2.107,788,3.094,789,3.427,790,3.427,791,3.427,792,3.094,793,4.496,794,2.428,795,3.094,796,3.427,797,4.729,798,2.846,799,3.427,800,1.918,801,3.427,802,2.217,803,3.427,804,3.927,805,3.427,806,3.427,807,4.269,808,3.427,809,4.729,810,3.094,811,3.094,812,3.427,813,3.427,814,3.427,815,3.094,816,3.427,817,3.427,818,4.729,819,3.427,820,3.427,821,3.427,822,3.427,823,3.094,824,3.094,825,4.269,826,4.269,827,3.427,828,3.427,829,3.23,830,3.427,831,3.094,832,2.846,833,3.427,834,2.846,835,6.332,836,4.729,837,3.427,838,3.427,839,4.729,840,4.729,841,3.427,842,4.729,843,3.927,844,3.427,845,5.414,846,2.846,847,3.427,848,4.729,849,3.427,850,3.427,851,3.427,852,3.427,853,3.427,854,3.427,855,2.482,856,2.008,857,3.427,858,4.729,859,4.729,860,3.427,861,2.647,862,3.427,863,3.427,864,3.427,865,3.927,866,3.427,867,2.647,868,3.427,869,3.427,870,3.427,871,3.427,872,3.427,873,2.008,874,3.427,875,3.427,876,2.647,877,2.647,878,3.427,879,3.427,880,3.427,881,3.427,882,3.927,883,3.427]],["title/components/FilterAllocateDialogComponent.html",[0,0.041,46,0.688]],["body/components/FilterAllocateDialogComponent.html",[0,0.06,1,0.575,2,0.707,3,0.141,4,0.086,5,0.664,6,0.688,7,0.688,8,0.926,9,0.086,11,0.528,13,0.917,15,0.641,16,1.499,17,1.443,18,0.95,20,0.95,22,0.287,23,0.014,24,0.136,25,0.098,26,0.149,28,0.653,29,0.534,30,0.984,31,0.885,32,0.575,33,1.253,34,0.688,35,0.59,36,0.688,37,0.597,38,0.984,39,0.575,40,1.148,41,0.575,42,0.688,43,0.597,44,0.618,45,0.984,46,1.087,47,1.085,48,1.553,49,1.42,50,0.575,51,0.688,52,0.597,53,0.885,54,0.688,55,0.575,56,0.688,57,0.554,58,0.575,59,0.618,60,0.597,61,0.597,62,0.799,63,0.597,64,1.379,65,0.597,66,0.688,67,0.575,68,1.148,69,0.597,70,1.087,71,0.575,72,0.575,73,0.597,74,0.688,75,0.575,76,0.688,77,0.597,78,0.688,79,0.575,80,0.597,81,0.575,82,0.823,83,0.688,84,0.597,85,0.688,86,0.575,87,0.793,88,0.597,89,0.984,90,0.597,91,0.917,92,0.597,93,0.641,94,0.575,95,0.618,96,0.575,97,0.653,98,0.597,99,0.597,100,0.575,101,0.575,102,0.575,103,0.702,104,0.688,105,0.575,106,0.575,107,0.664,108,0.618,109,0.575,110,0.688,111,0.575,112,0.664,113,0.688,114,0.005,115,0.008,116,0.005,123,1.054,124,1.148,127,0.216,128,0.653,129,2.604,131,0.577,133,1.54,134,0.731,142,0.797,143,1.031,149,1.192,150,1.127,151,1.127,152,1.209,158,0.707,173,0.712,178,1.627,179,0.789,195,1.112,208,2.838,209,4.211,221,0.627,222,0.627,228,2.621,237,1.78,238,1.39,239,2.098,252,1.112,253,1.78,258,2.671,302,3.146,303,2.967,309,1.048,310,1.535,311,1.074,317,0.874,318,3.127,339,4.283,359,1.383,378,2.2,399,2.742,405,5.785,415,1.209,450,0.858,691,1.237,748,2.521,762,2.967,769,3.464,794,3.006,877,3.356,884,6.967,885,1.965,886,2.141,887,3.464,888,2.967,889,4.16,890,2.842,891,3.922,892,4.997,893,4.997,894,4.009,895,3.78,896,4.009,897,2.346,898,4,899,3.356,900,3.922,901,3.485,902,3.922,903,2.346,904,3.485,905,3.922,906,3.922,907,3.922,908,3.403,909,3.485,910,3.922,911,3.922,912,3.922,913,3.485,914,3.485,915,3.485,916,3.485,917,1.965,918,2.967,919,2.742,920,3.918,921,2.742,922,3.037,923,3.58,924,3.037,925,3.922,926,3.037,927,3.037,928,1.965,929,2.074,930,2.742,931,2.742,932,3.037,933,3.485,934,3.922,935,2.346,936,3.485,937,2.742,938,3.485,939,3.485,940,3.485,941,3.922,942,3.485,943,3.485,944,3.037,945,3.485,946,3.922,947,3.922,948,2.742,949,3.922,950,2.346,951,3.922,952,2.742,953,2.742,954,3.922,955,2.742,956,2.742,957,2.2,958,2.742,959,2.346,960,3.037,961,4.344,962,2.671,963,2.81,964,2.346,965,1.332,966,2.2,967,2.671,968,1.7,969,1.383,970,2.074,971,1.965,972,1.867,973,1.965,974,1.7,975,1.7]],["title/components/FilterComponent.html",[0,0.041,50,0.663]],["body/components/FilterComponent.html",[0,0.062,1,0.443,2,0.583,3,0.116,4,0.067,5,1.149,6,0.53,7,0.53,8,1.276,9,0.067,11,0.285,13,0.756,15,0.494,16,1.473,17,1.418,18,0.783,20,0.783,22,0.258,23,0.014,24,0.105,25,0.076,26,0.115,27,0.549,28,0.352,29,0.412,30,0.811,31,0.73,32,0.443,33,1.104,34,0.53,35,0.562,36,0.53,37,0.46,38,0.811,39,0.443,40,0.985,41,0.443,42,0.53,43,0.46,44,0.477,45,0.811,46,0.46,47,1.17,48,0.918,49,1.306,50,0.923,51,0.53,52,0.46,53,0.73,54,0.53,55,0.443,56,0.53,57,0.427,58,0.443,59,0.477,60,0.46,61,0.46,62,0.833,63,0.46,64,1.255,65,0.46,66,0.53,67,0.443,68,0.985,69,0.46,70,0.704,71,0.443,72,0.443,73,0.46,74,0.53,75,0.443,76,0.53,77,0.46,78,0.53,79,0.443,80,0.46,81,0.443,82,0.679,83,0.53,84,0.46,85,0.53,86,0.443,87,0.654,88,0.46,89,0.811,90,0.46,91,0.756,92,0.46,93,0.494,94,0.443,95,0.477,96,0.443,97,0.833,98,0.46,99,0.46,100,0.443,101,0.443,102,0.443,103,0.728,104,0.53,105,0.443,106,0.443,107,0.512,108,0.477,109,0.443,110,0.53,111,0.443,112,0.512,113,0.53,114,0.004,115,0.006,116,0.004,120,3.785,122,1.697,123,0.87,124,1.19,127,0.167,128,0.539,131,0.476,133,1.356,134,0.699,136,2.06,137,2.177,140,2.447,142,0.704,143,0.976,148,2.595,149,0.886,150,1.128,151,1.128,152,1.655,154,1.784,157,1.84,158,0.643,172,0.92,173,0.549,179,1.585,192,3.362,195,0.857,208,2.436,221,0.759,222,0.759,228,2.731,236,2.395,238,0.9,248,1.392,252,1.311,270,3.101,271,1.848,277,2.447,291,0.989,298,3.235,309,0.923,313,1.514,315,1.109,316,1.109,317,1.755,322,1.515,324,1.982,382,1.945,415,0.652,445,1.84,450,0.889,501,1.154,507,2.255,519,2.447,562,1.296,614,3.227,621,2.06,639,2.975,669,1.254,675,2.203,691,0.954,715,2.005,741,1.945,743,2.114,744,2.342,745,6.118,746,3.583,747,5.948,748,1.632,749,1.696,750,1.945,751,1.809,752,1.945,753,1.809,754,1.809,755,2.342,756,2.342,757,3.583,758,3.329,759,1.696,760,3.583,761,3.235,762,2.447,763,3.235,764,2.768,765,1.84,766,3.583,767,4.352,768,4.594,769,3.589,770,2.005,771,3.235,772,4.013,773,3.154,774,3.235,775,4.352,776,5.37,777,2.975,778,2.768,779,3.235,780,1.839,781,4.352,782,3.583,783,4.352,784,4.352,785,4.875,786,4.352,787,2.203,788,3.235,789,4.352,790,2.342,791,3.583,792,3.235,793,4.363,794,2.503,795,3.93,796,3.583,797,4.875,798,2.975,799,3.583,800,2.005,801,3.583,802,2.318,803,3.583,804,3.614,805,2.342,806,2.342,807,4.402,808,2.342,809,3.583,810,2.114,811,2.114,812,2.342,813,2.342,814,2.342,815,3.93,816,2.342,817,2.342,818,3.583,819,2.342,820,2.342,821,2.342,822,2.342,823,2.114,824,2.114,825,4.402,826,3.235,827,2.342,828,2.342,829,2.447,830,2.342,831,2.114,832,1.945,833,2.342,834,1.945,835,5.541,836,3.583,837,2.342,838,2.342,839,3.583,840,3.583,841,2.342,842,4.875,843,3.614,844,3.583,845,4.352,846,1.945,847,2.342,848,3.583,849,2.342,850,2.342,851,2.342,852,4.352,853,2.342,854,2.342,855,2.595,856,2.099,857,3.583,858,3.583,859,4.352,860,2.342,861,2.768,862,3.583,863,2.342,864,2.342,865,2.975,866,2.342,867,1.809,868,3.583,869,3.583,870,3.583,871,3.583,872,4.875,873,2.099,874,3.583,875,3.583,876,2.768,877,2.768,878,3.583,879,2.342,880,2.342,881,2.342,882,2.975,883,2.342,965,1.027,967,3.23,968,2.005,969,1.067,970,1.599,971,1.515,972,1.44,973,1.515,974,2.005,975,2.005,976,4.111,977,4.111,978,2.687,979,4.111,980,2.687,981,2.687,982,2.687,983,2.687,984,2.687,985,2.687,986,2.687,987,2.687,988,2.687,989,2.687,990,2.687,991,2.687,992,2.687,993,4.111,994,6.824,995,4.875,996,4.402,997,3.235,998,4.111,999,4.111,1000,2.687,1001,2.342,1002,2.005,1003,2.687,1004,3.235,1005,2.342,1006,2.005,1007,3.583,1008,2.342,1009,1.311,1010,1.515,1011,2.342,1012,1.311,1013,1.44,1014,1.696,1015,2.342,1016,1.372,1017,1.809,1018,2.114,1019,1.372,1020,2.114,1021,2.687,1022,2.687,1023,2.687,1024,2.687,1025,2.687,1026,3.235,1027,3.235]],["title/injectables/FilterService.html",[437,0.821,614,1.959]],["body/injectables/FilterService.html",[2,0.766,3,0.189,4,0.097,8,0.859,9,0.097,11,0.414,22,0.264,23,0.014,24,0.152,25,0.11,26,0.167,28,0.512,35,0.552,47,1.236,97,0.95,103,0.652,114,0.006,115,0.009,116,0.006,120,4.316,127,0.242,128,0.708,131,0.625,134,0.739,140,3.215,142,0.852,143,1.034,149,0.693,150,1.099,151,1.099,158,0.818,160,2.553,161,3.389,166,2.459,167,1.387,172,1.338,173,1.365,174,1.989,220,2.521,221,0.882,222,0.882,228,2.229,248,1.535,271,1.785,275,3.49,291,2.67,309,1.227,341,2.758,437,1.104,438,1.551,441,2.553,445,2.417,447,1.387,448,1.291,449,1.387,450,0.797,507,2.207,515,1.551,525,1.905,543,4.25,590,3.471,592,3.409,594,3.909,597,3.909,598,3.409,611,2.466,614,2.634,618,3.909,621,2.67,650,1.849,656,5.706,669,3.834,690,3.114,691,1.387,696,3.074,715,1.905,720,3.909,727,2.894,731,2.63,768,4.497,769,3.976,772,4.425,776,4.25,780,1.989,804,5.247,865,2.827,867,4.168,873,2.758,876,3.636,1028,3.404,1029,6.679,1030,4.059,1031,3.976,1032,4.707,1033,5.401,1034,5.401,1035,6.191,1036,6.319,1037,6.191,1038,6.679,1039,5.401,1040,5.401,1041,5.401,1042,6.679,1043,6.679,1044,5.401,1045,5.401,1046,3.906,1047,4.25,1048,5.256,1049,5.401,1050,3.906,1051,3.976,1052,7.01,1053,5.401,1054,3.906,1055,3.636,1056,5.401,1057,3.906,1058,3.906,1059,3.906,1060,5.401,1061,3.906,1062,4.168,1063,3.906,1064,3.906,1065,3.909,1066,4.707,1067,3.906,1068,2.894,1069,3.906,1070,3.909,1071,4.707,1072,3.909,1073,3.909,1074,5.401,1075,3.906,1076,4.25,1077,3.404,1078,5.401,1079,3.906,1080,2.827,1081,3.906,1082,6.679,1083,3.404,1084,5.401,1085,3.906,1086,3.906,1087,5.401,1088,3.906,1089,3.906]],["title/directives/FixedNavDirective.html",[32,0.663,109,0.663]],["body/directives/FixedNavDirective.html",[3,0.144,4,0.126,9,0.126,11,0.54,15,0.937,16,1.143,17,1.27,22,0.218,23,0.014,24,0.199,25,0.144,26,0.218,28,0.668,31,1.143,32,1.224,35,0.401,47,1.094,103,0.777,108,0.904,109,1.063,114,0.008,115,0.01,116,0.008,127,0.316,128,0.844,134,0.718,150,0.904,151,0.904,152,1.561,154,1.625,158,0.714,179,1.599,221,0.641,222,0.641,272,5.067,309,0.841,310,2.357,317,1.615,445,2.279,562,1.671,590,3.408,621,2.877,623,3.98,669,3.296,690,2.188,749,3.215,750,5.655,753,4.753,802,3.63,843,5.537,1026,5.556,1031,3.833,1090,6.244,1091,4.439,1092,6.423,1093,6.438,1094,5.611,1095,6.438,1096,5.611,1097,6.438,1098,6.438,1099,6.438,1100,3.63,1101,6.438,1102,6.438,1103,5.067,1104,6.438,1105,6.438,1106,7.06,1107,5.067,1108,5.067,1109,6.438,1110,5.611,1111,6.438,1112,5.093,1113,2.601,1114,5.093,1115,5.093,1116,4.008,1117,5.093,1118,5.093,1119,4.008,1120,5.093,1121,5.093,1122,6.438,1123,5.093,1124,5.093,1125,5.093,1126,5.093,1127,6.438,1128,5.093,1129,7.418,1130,7.06,1131,6.438,1132,5.093,1133,5.093,1134,4.008,1135,4.439,1136,7.06,1137,5.093,1138,5.093,1139,5.093]],["title/components/FoodCardComponent.html",[0,0.041,52,0.688]],["body/components/FoodCardComponent.html",[0,0.044,1,0.348,2,0.482,3,0.121,4,0.052,5,1.406,6,0.416,7,0.416,8,0.679,9,0.052,11,0.608,13,0.625,14,2.131,15,0.388,16,1.444,17,1.388,18,0.648,20,0.648,22,0.284,23,0.014,24,0.082,25,0.06,26,0.09,28,0.446,29,0.323,30,0.671,31,0.603,32,0.348,33,0.966,34,0.416,35,0.423,36,0.416,37,0.361,38,0.671,39,0.348,40,0.842,41,0.348,42,0.416,43,0.361,44,0.603,45,0.671,46,0.361,47,0.311,48,0.785,49,1.191,50,0.348,51,0.416,52,0.838,53,1.207,54,0.416,55,0.348,56,0.416,57,0.335,58,0.348,59,0.603,60,0.361,61,0.361,62,0.886,63,0.361,64,1.132,65,0.361,66,0.416,67,0.348,68,0.842,69,0.361,70,1.033,71,0.348,72,0.348,73,0.361,74,0.416,75,0.348,76,0.416,77,0.361,78,0.416,79,0.348,80,0.919,81,0.348,82,0.886,83,0.416,84,0.361,85,0.416,86,0.348,87,0.541,88,0.361,89,0.671,90,0.582,91,0.9,92,0.582,93,0.785,94,0.348,95,1.114,96,0.348,97,0.446,98,0.361,99,0.361,100,0.348,101,0.348,102,0.348,103,0.648,104,0.416,105,0.348,106,0.348,107,0.402,108,0.374,109,0.348,110,0.416,111,0.348,112,0.402,113,0.416,114,0.005,115,0.005,116,0.003,122,1.403,123,0.719,124,1.059,127,0.131,128,0.446,131,0.393,133,1.187,134,0.685,137,1.83,142,0.801,143,0.792,149,0.953,150,0.603,151,0.869,152,1.187,154,1.562,158,0.432,168,1.393,170,1.859,171,0.511,173,1.172,179,1.109,194,2.464,195,2.278,196,1.833,217,1.489,221,0.428,222,0.428,238,1.542,239,0.697,242,0.806,271,0.697,278,2.145,280,1.587,290,2.288,291,1.803,309,0.348,310,2.329,311,2.252,312,2.619,313,2.387,316,1.762,317,1.792,321,1.993,322,1.189,323,4.153,324,3.038,359,0.837,396,1.736,415,1.522,446,0.628,449,0.749,450,1.003,515,0.837,525,1.029,562,1.854,589,3.082,593,2.962,597,1.526,599,1.66,621,1.572,624,2.592,625,2.145,635,1.736,650,0.722,690,0.906,698,1.658,702,1.526,708,2.46,730,2.674,731,2.288,748,1.943,764,2.288,765,1.521,826,2.674,855,2.145,861,2.288,886,1.833,890,1.521,965,2.052,967,2.623,968,1.658,969,2.278,970,2.023,971,1.189,972,1.821,973,1.189,974,1.029,975,1.029,1002,3.161,1006,2.082,1009,2.799,1010,1.916,1012,2.082,1013,3.233,1014,1.331,1016,3.86,1017,3.296,1019,2.741,1065,4.153,1068,1.821,1100,3.027,1113,3.206,1140,5.432,1141,5.906,1142,1.838,1143,4.269,1144,3.399,1145,4.544,1146,4.679,1147,3.539,1148,4.267,1149,4.267,1150,5.738,1151,5.471,1152,5.738,1153,5.738,1154,3.863,1155,3.399,1156,4.267,1157,2.145,1158,1.821,1159,4.267,1160,5.259,1161,1.66,1162,2.799,1163,2.76,1164,2.914,1165,2.396,1166,3.399,1167,2.109,1168,2.962,1169,2.109,1170,4.153,1171,2.109,1172,2.109,1173,2.109,1174,3.543,1175,3.399,1176,2.109,1177,2.674,1178,2.876,1179,2.109,1180,4.895,1181,3.296,1182,2.109,1183,2.109,1184,3.399,1185,2.109,1186,3.399,1187,2.109,1188,3.399,1189,2.674,1190,2.145,1191,2.109,1192,2.109,1193,2.46,1194,3.399,1195,1.838,1196,2.109,1197,2.109,1198,2.109,1199,1.838,1200,2.109,1201,1.736,1202,1.077,1203,1.255,1204,1.916,1205,1.255,1206,0.777,1207,0.944,1208,2.109,1209,2.109,1210,1.838,1211,1.838,1212,5.738,1213,1.66,1214,2.109,1215,4.895,1216,2.109,1217,3.399,1218,2.109,1219,3.852,1220,3.399,1221,2.109,1222,1.331,1223,5.928,1224,1.838,1225,1.838,1226,1.838,1227,1.838,1228,1.838,1229,2.109,1230,1.42,1231,1.526,1232,5.368,1233,2.962,1234,3.72,1235,4.269,1236,2.541,1237,1.838,1238,2.109,1239,1.838,1240,3.089,1241,3.543,1242,3.543,1243,2.874,1244,1.42,1245,2.962,1246,1.66,1247,3.089,1248,1.66,1249,1.838,1250,1.526,1251,1.838,1252,2.288,1253,2.287,1254,1.526,1255,1.838,1256,4.267,1257,4.679,1258,3.359,1259,2.46,1260,3.72,1261,1.66,1262,1.66,1263,2.962,1264,1.66,1265,1.66,1266,1.66,1267,2.674,1268,2.674,1269,2.288,1270,1.66,1271,2.674,1272,1.66,1273,3.399,1274,2.962,1275,3.399,1276,4.895,1277,2.962,1278,2.962,1279,2.962,1280,2.674,1281,2.962,1282,2.46,1283,2.623,1284,1.13,1285,1.255,1286,1.526,1287,2.109,1288,2.109,1289,2.695,1290,4.515,1291,3.852,1292,4.269,1293,2.5,1294,3.863,1295,1.838,1296,3.089,1297,2.109,1298,1.189,1299,1.526,1300,3.614,1301,3.614,1302,3.614,1303,4.48,1304,3.614,1305,3.614,1306,3.614,1307,3.614,1308,4.269,1309,2.388,1310,2.109,1311,3.645,1312,3.399,1313,3.399,1314,2.962,1315,1.66,1316,2.962,1317,2.541,1318,3.399,1319,2.109,1320,3.614,1321,2.109,1322,2.109,1323,1.331,1324,3.399,1325,2.93,1326,1.526,1327,2.741,1328,2.109,1329,1.838,1330,3.296,1331,3.543,1332,1.526,1333,1.255,1334,2.109,1335,2.46,1336,1.916,1337,1.255,1338,2.145,1339,2.145,1340,1.526,1341,1.526,1342,1.838,1343,2.109,1344,2.109,1345,1.838,1346,2.109,1347,2.109,1348,1.66,1349,1.526,1350,3.359,1351,2.46,1352,2.874,1353,2.46,1354,1.838,1355,1.838,1356,1.66,1357,1.838,1358,1.838,1359,1.838,1360,1.331,1361,1.526,1362,1.838,1363,1.526,1364,1.66,1365,1.66,1366,1.66,1367,2.109,1368,2.109,1369,1.838,1370,1.838]],["title/components/FoodDetailsComponent.html",[0,0.041,55,0.663]],["body/components/FoodDetailsComponent.html",[0,0.055,1,0.347,2,0.481,3,0.183,4,0.052,5,1.405,6,0.414,7,0.414,8,0.677,9,0.052,11,0.222,13,0.623,14,1.345,15,0.386,16,1.444,17,1.388,18,0.645,20,0.645,22,0.301,23,0.014,24,0.082,25,0.059,26,0.09,27,0.429,28,0.444,29,0.322,30,0.668,31,0.601,32,0.347,33,0.964,34,0.414,35,0.422,36,0.414,37,0.359,38,0.668,39,0.347,40,0.84,41,0.347,42,0.414,43,0.359,44,0.601,45,0.668,46,0.359,47,0.31,48,0.783,49,1.189,50,0.347,51,0.414,52,0.359,53,1.228,54,0.414,55,0.806,56,0.414,57,0.334,58,0.347,59,0.867,60,0.58,61,0.359,62,0.855,63,0.359,64,1.13,65,0.359,66,0.414,67,0.347,68,0.84,69,0.359,70,0.836,71,0.347,72,0.347,73,0.359,74,0.414,75,0.347,76,0.414,77,0.359,78,0.414,79,0.347,80,1.137,81,0.347,82,0.884,83,0.414,84,0.359,85,0.414,86,0.347,87,0.539,88,0.359,89,0.668,90,0.58,91,0.898,92,0.58,93,0.783,94,0.347,95,0.951,96,0.347,97,0.444,98,0.359,99,0.359,100,0.347,101,0.347,102,0.347,103,0.727,104,0.414,105,0.347,106,0.347,107,0.4,108,0.373,109,0.347,110,0.414,111,0.347,112,0.4,113,0.414,114,0.005,115,0.005,116,0.003,122,1.398,123,0.716,124,0.84,127,0.13,128,0.444,129,2.397,131,0.392,133,1.184,134,0.684,137,1.827,142,0.767,143,0.924,149,1.149,150,0.755,151,0.755,152,1.389,158,0.494,168,1.105,170,1.856,171,0.509,173,1.281,178,0.98,179,1.213,180,0.694,194,2.918,195,2.12,196,1.455,221,0.426,222,0.426,236,1.672,238,0.741,242,0.803,248,1.069,266,2.28,271,0.694,278,3.083,283,2.952,286,2.665,290,3.288,291,2.109,309,0.806,310,1.994,311,1.65,312,1.024,313,2.308,315,0.867,316,2.587,317,1.895,318,1.905,321,2.28,322,1.184,324,2.638,359,0.834,396,2.174,415,1.611,446,0.625,449,0.745,450,0.889,515,0.834,525,1.652,562,1.797,589,3.076,599,2.665,601,1.652,621,1.972,624,2.587,625,2.138,635,1.73,650,0.719,666,1.83,675,1.125,676,1.52,690,1.455,698,2.613,699,2.451,700,1.652,702,1.52,708,2.451,716,1.83,718,1.83,730,2.665,731,2.28,735,1.52,748,1.939,752,3.08,758,2.938,759,1.326,764,2.28,856,1.072,861,3.856,886,2.587,890,2.185,964,2.28,965,1.294,967,1.815,968,1.024,969,1.69,970,1.25,971,1.909,972,1.125,973,1.184,1002,3.157,1006,1.652,1009,2.793,1010,3.02,1012,1.652,1013,2.87,1014,1.326,1016,3.076,1019,2.924,1062,1.414,1065,4.36,1100,3.02,1103,1.652,1113,2.494,1116,1.652,1140,5.427,1145,4.36,1146,3.71,1147,3.534,1148,4.256,1149,4.256,1151,4.991,1154,3.856,1156,4.256,1158,1.815,1159,4.256,1160,4.668,1162,2.938,1163,2.753,1164,2.907,1165,2.391,1170,4.144,1177,2.665,1178,2.281,1189,4.74,1195,1.83,1199,1.83,1201,1.072,1202,1.072,1203,1.25,1204,1.909,1205,1.25,1206,1.247,1207,0.94,1210,1.83,1211,1.83,1213,4.932,1219,1.652,1223,5.921,1224,1.83,1225,1.83,1226,1.83,1227,1.83,1228,1.83,1233,2.952,1234,1.83,1236,2.907,1240,3.08,1241,3.534,1242,3.534,1243,2.866,1244,1.414,1245,2.952,1246,1.652,1247,3.08,1248,1.652,1249,1.83,1250,1.52,1251,2.952,1252,3.288,1253,3.228,1254,1.52,1255,2.952,1256,4.256,1257,4.668,1258,4.215,1259,2.451,1260,3.71,1261,1.652,1262,1.652,1263,2.952,1264,1.652,1265,3.349,1266,1.652,1267,2.665,1268,2.665,1269,2.28,1270,1.652,1271,2.665,1272,1.652,1274,2.952,1277,4.256,1278,2.952,1279,2.952,1280,2.665,1282,2.451,1283,2.87,1284,1.125,1285,1.25,1289,1.326,1290,2.665,1291,4.215,1293,2.174,1296,1.52,1298,2.753,1300,2.28,1301,1.414,1302,1.414,1303,2.28,1304,1.414,1305,1.414,1306,1.414,1307,1.414,1309,2.382,1311,3.068,1317,1.25,1320,2.28,1323,1.326,1325,2.735,1326,1.52,1327,2.735,1329,1.83,1330,3.288,1331,2.451,1332,1.52,1333,2.016,1336,1.184,1337,1.25,1338,2.138,1339,2.138,1340,1.52,1341,1.52,1348,1.652,1350,1.652,1351,2.451,1352,2.866,1353,1.52,1356,1.652,1357,1.83,1358,1.83,1359,1.83,1360,1.326,1361,2.451,1362,1.83,1363,1.52,1364,1.652,1371,5.427,1372,1.83,1373,2.451,1374,3.387,1375,4.256,1376,4.256,1377,3.387,1378,4.256,1379,3.387,1380,4.883,1381,2.1,1382,4.36,1383,3.387,1384,2.1,1385,2.1,1386,2.1,1387,3.387,1388,2.1,1389,2.1,1390,3.387,1391,2.451,1392,3.387,1393,2.1,1394,2.1,1395,3.387,1396,2.1,1397,3.843,1398,3.387,1399,3.843,1400,2.1,1401,2.1,1402,2.1,1403,2.1,1404,2.1,1405,2.1,1406,2.1,1407,2.1,1408,1.52,1409,2.1,1410,2.665,1411,2.1,1412,2.1,1413,2.1,1414,2.1,1415,2.1,1416,2.1,1417,1.25,1418,2.952,1419,2.1,1420,2.1,1421,3.349,1422,2.1,1423,2.1,1424,2.1,1425,3.387,1426,3.387,1427,2.1,1428,2.1,1429,3.387,1430,1.52,1431,2.952,1432,1.83,1433,2.1,1434,2.1,1435,1.83,1436,3.387,1437,3.387,1438,3.387,1439,3.387,1440,3.387,1441,3.387,1442,2.952,1443,4.256,1444,3.387,1445,3.387,1446,2.952,1447,3.534,1448,4.883,1449,3.387,1450,2.665,1451,2.665,1452,3.387,1453,3.387,1454,3.387,1455,3.387,1456,3.387,1457,3.387,1458,3.387,1459,3.387,1460,3.387,1461,3.387,1462,3.387,1463,2.1,1464,3.387,1465,2.1,1466,3.387,1467,2.1,1468,4.883,1469,2.1,1470,3.387,1471,2.1,1472,3.387,1473,2.1,1474,1.83,1475,2.1,1476,5.093,1477,4.256,1478,2.1,1479,2.1,1480,2.1,1481,2.952,1482,4.256,1483,1.83,1484,3.387,1485,2.1,1486,5.357,1487,2.1,1488,2.1,1489,1.83,1490,3.387,1491,2.1,1492,2.1,1493,2.1,1494,2.1,1495,2.1,1496,2.1,1497,2.1,1498,2.1,1499,2.1]],["title/components/HeaderComponent.html",[0,0.041,57,0.639]],["body/components/HeaderComponent.html",[0,0.068,1,0.724,2,0.83,3,0.165,4,0.109,5,0.836,6,0.866,7,0.866,8,1.045,9,0.109,11,0.465,13,1.075,15,0.807,16,1.517,17,1.461,18,1.114,20,1.114,22,0.299,23,0.014,24,0.171,25,0.124,26,0.188,27,0.897,28,0.575,29,0.672,30,1.383,31,1.037,32,0.724,33,1.383,34,0.866,35,0.574,36,0.866,37,0.751,38,1.153,39,0.724,40,1.297,41,0.724,42,0.866,43,0.751,44,0.779,45,1.153,46,0.751,47,0.647,48,1.209,49,1.512,50,0.724,51,0.866,52,0.751,53,1.037,54,0.866,55,0.724,56,0.866,57,1.115,58,0.724,59,0.779,60,0.751,61,0.751,62,0.882,63,0.751,64,1.481,65,0.751,66,0.866,67,0.724,68,1.297,69,0.751,70,1.001,71,0.724,72,0.724,73,0.751,74,0.866,75,0.724,76,0.866,77,0.751,78,0.866,79,0.724,80,0.751,81,0.724,82,0.965,83,0.866,84,0.751,85,0.866,86,0.724,87,0.93,88,0.751,89,1.153,90,0.751,91,1.075,92,0.751,93,0.807,94,0.724,95,0.779,96,0.724,97,0.766,98,0.751,99,0.751,100,0.724,101,0.724,102,0.724,103,0.793,104,0.866,105,0.724,106,0.724,107,1.46,108,0.779,109,0.724,110,0.866,111,0.724,112,0.836,113,0.866,114,0.007,115,0.009,116,0.007,121,3.951,122,2.412,124,0.866,125,5.728,126,5.094,127,0.272,128,0.766,134,0.537,150,0.779,151,0.779,158,0.444,170,1.352,171,1.064,173,1.194,186,6.542,192,3.935,193,3.825,194,1.885,195,1.865,196,1.885,236,1.503,238,0.961,246,2.141,307,2.613,312,2.141,316,2.713,317,1.466,324,2.609,450,0.647,562,1.517,590,2.511,613,2.851,624,1.885,682,2.474,969,1.742,1001,3.825,1002,2.141,1006,2.141,1012,2.851,1134,5.172,1158,3.132,1165,2.321,1206,2.152,1207,1.964,1281,5.094,1282,4.23,1293,2.985,1300,2.955,1309,2.851,1314,6.361,1315,3.454,1349,3.176,1500,3.825,1501,6.572,1502,4.389,1503,5.845,1504,4.389,1505,4.389,1506,4.389,1507,4.389,1508,3.69,1509,4.6,1510,5.845,1511,5.094,1512,3.454,1513,2.771,1514,4.389,1515,4.389,1516,4.389,1517,2.955]],["title/components/ImageDialogComponent.html",[0,0.041,58,0.663]],["body/components/ImageDialogComponent.html",[0,0.049,1,0.407,2,0.546,3,0.109,4,0.061,5,1.019,6,0.487,7,0.487,8,0.753,9,0.144,11,0.261,13,0.708,15,0.454,16,1.464,17,1.408,18,0.734,20,0.734,22,0.228,23,0.014,24,0.096,25,0.07,26,0.105,27,0.787,28,0.701,29,0.378,30,0.76,31,0.683,32,0.407,33,1.055,34,0.487,35,0.505,36,0.487,37,0.422,38,0.76,39,0.407,40,0.934,41,0.407,42,0.487,43,0.422,44,0.438,45,0.76,46,0.422,47,0.364,48,0.871,49,1.266,50,0.407,51,0.487,52,0.422,53,0.683,54,0.487,55,0.407,56,0.487,57,0.393,58,0.883,59,1.438,60,0.422,61,0.422,62,0.908,63,0.422,64,1.212,65,0.422,66,0.487,67,0.407,68,0.934,69,0.422,70,1.216,71,0.407,72,0.407,73,0.422,74,0.487,75,0.407,76,0.487,77,0.422,78,0.487,79,0.407,80,0.422,81,0.407,82,0.635,83,0.487,84,0.422,85,0.487,86,0.407,87,0.612,88,0.422,89,0.76,90,0.422,91,0.708,92,0.422,93,0.454,94,0.407,95,0.438,96,0.407,97,0.505,98,0.422,99,0.422,100,0.407,101,0.407,102,0.407,103,0.571,104,0.487,105,0.407,106,0.407,107,0.47,108,0.438,109,0.407,110,0.487,111,0.407,112,0.47,113,0.487,114,0.004,115,0.006,116,0.004,123,0.814,124,1.144,127,0.239,128,0.505,129,2.393,130,2.296,131,0.445,133,1.49,134,0.694,142,0.592,143,0.855,145,2.43,146,2.171,149,1.238,150,1.029,151,1.029,152,1.556,154,1.96,157,2.749,158,0.719,160,2.044,168,1.229,173,0.504,178,1.797,179,1.313,180,1.767,194,2.033,195,1.706,196,2.033,217,1.388,221,0.673,222,0.673,236,1.831,238,0.843,248,1.345,252,0.787,253,1.26,265,2.151,271,0.816,309,0.635,310,2.254,311,1.647,312,1.204,313,2.135,315,1.589,316,1.954,317,1.923,318,1.104,321,1.797,322,1.391,324,2.865,359,0.98,395,4.803,415,1.148,416,2.43,446,0.734,450,0.855,507,1.272,562,1.921,580,3.03,621,1.418,624,1.654,647,1.469,650,1.318,678,1.966,691,2.181,715,1.204,765,2.118,773,2.171,780,0.909,787,2.063,788,1.942,861,1.662,885,1.391,886,2.638,887,2.818,888,2.292,889,4.06,890,2.594,894,1.558,897,1.662,898,3.451,903,2.592,917,1.391,918,2.292,919,1.942,921,1.942,923,3.015,928,1.391,929,1.469,932,2.151,957,1.558,965,1.809,966,1.558,967,2.865,968,2.309,969,1.879,971,2.171,972,1.322,973,1.391,974,2.608,975,2.608,1002,2.996,1006,2.996,1009,1.204,1010,1.391,1012,1.878,1013,2.536,1019,2.417,1027,1.942,1100,3.463,1201,1.26,1283,3.292,1284,2.536,1285,1.469,1289,3.375,1290,1.942,1293,2.417,1298,1.391,1309,1.878,1325,2.73,1326,1.786,1327,1.26,1332,5.047,1335,2.786,1336,2.171,1337,1.469,1338,2.43,1339,1.558,1345,3.355,1348,1.942,1349,1.786,1350,1.942,1351,3.426,1352,3.187,1355,3.355,1360,2.43,1363,1.786,1366,4.208,1399,1.942,1417,1.469,1509,1.942,1513,3.375,1518,5.507,1519,3.355,1520,3.85,1521,4.733,1522,6.637,1523,4.733,1524,4.733,1525,5.798,1526,5.053,1527,4.733,1528,4.733,1529,5.347,1530,3.85,1531,5.223,1532,4.19,1533,3.85,1534,2.43,1535,2.151,1536,3.85,1537,3.85,1538,3.85,1539,2.468,1540,3.85,1541,2.468,1542,3.85,1543,2.468,1544,3.85,1545,2.468,1546,3.87,1547,2.468,1548,2.468,1549,2.151,1550,3.85,1551,1.966,1552,3.85,1553,1.786,1554,2.468,1555,3.355,1556,1.786,1557,2.786,1558,3.355,1559,1.786,1560,3.85,1561,2.151,1562,2.151,1563,4.66,1564,2.468,1565,3.85,1566,5.347,1567,3.85,1568,3.85,1569,2.468,1570,2.468,1571,2.468,1572,2.468,1573,4.66,1574,3.355,1575,2.468,1576,2.468,1577,2.468,1578,2.468,1579,2.468,1580,2.468,1581,2.468,1582,2.468,1583,2.151,1584,2.151,1585,2.468,1586,2.468,1587,2.468,1588,2.468,1589,2.468,1590,2.468,1591,2.468,1592,4.733,1593,3.355,1594,2.468,1595,2.468,1596,4.733,1597,2.468,1598,2.468,1599,3.85,1600,5.798,1601,2.468,1602,2.151,1603,4.733,1604,2.468,1605,2.468,1606,2.468,1607,2.468,1608,2.468,1609,2.468,1610,2.468,1611,4.125,1612,2.468,1613,2.468,1614,3.85,1615,3.85,1616,1.662,1617,2.468,1618,3.85,1619,2.468,1620,1.786,1621,2.151,1622,2.43,1623,2.468,1624,2.468,1625,2.468,1626,3.187,1627,3.85,1628,3.85,1629,3.85,1630,3.85,1631,3.85,1632,3.85,1633,3.355,1634,3.85,1635,3.85,1636,4.733,1637,2.151,1638,1.786,1639,2.468,1640,2.468,1641,1.662,1642,2.468,1643,2.151,1644,3.85,1645,2.786,1646,2.468,1647,2.592,1648,3.355,1649,2.468,1650,2.468,1651,2.468,1652,2.468,1653,1.942,1654,2.468,1655,1.469,1656,2.151,1657,1.786,1658,1.558,1659,2.151,1660,2.468,1661,2.468,1662,2.468,1663,2.151,1664,3.725,1665,2.468,1666,3.725,1667,2.468,1668,3.85,1669,2.468,1670,2.468,1671,2.468,1672,2.468,1673,2.468,1674,2.468,1675,2.468,1676,1.786,1677,2.468,1678,1.942,1679,2.468,1680,3.355,1681,2.468,1682,3.03,1683,2.468,1684,2.468,1685,1.942,1686,2.468,1687,2.468,1688,2.468,1689,2.468,1690,2.468,1691,2.468,1692,2.468]],["title/injectables/ImageService.html",[437,0.821,1532,2.536]],["body/injectables/ImageService.html",[2,0.986,3,0.163,4,0.143,9,0.143,11,0.61,22,0.319,23,0.014,24,0.225,25,0.163,26,0.246,27,1.177,35,0.547,59,1.429,62,0.874,114,0.009,115,0.011,116,0.009,127,0.358,131,0.804,134,0.639,142,0.769,166,2.558,167,2.045,168,1.495,172,1.973,174,2.121,217,2.01,221,0.874,222,0.874,248,1.521,437,1.419,438,2.287,441,2.655,446,1.714,447,2.045,448,1.904,450,1.025,567,3.917,647,4.793,1077,5.021,1531,6.337,1532,4.385,1551,3.548,1693,5.021,1694,6.055,1695,6.947,1696,6.947,1697,6.947,1698,6.947,1699,5.761,1700,6.947,1701,5.761,1702,6.947,1703,5.761,1704,5.761,1705,5.761]],["title/components/InfoDialogComponent.html",[0,0.041,60,0.688]],["body/components/InfoDialogComponent.html",[0,0.065,1,0.661,2,0.779,3,0.218,4,0.099,5,0.763,6,0.79,7,0.79,8,0.997,9,0.099,11,0.424,13,1.01,15,0.736,16,1.51,17,1.454,18,1.046,20,1.046,22,0.268,23,0.014,24,0.156,25,0.113,26,0.171,27,1.122,28,0.72,29,0.613,30,1.084,31,0.975,32,0.661,33,1.332,34,0.79,35,0.531,36,0.79,37,0.685,38,1.084,39,0.661,40,1.237,41,0.661,42,0.79,43,0.685,44,0.71,45,1.084,46,0.685,47,0.59,48,1.153,49,1.476,50,0.661,51,0.79,52,0.685,53,0.975,54,0.79,55,0.661,56,0.79,57,0.637,58,0.661,59,1.255,60,1.155,61,0.685,62,0.849,63,0.685,64,1.441,65,0.685,66,0.79,67,0.661,68,1.237,69,0.685,70,1.304,71,0.661,72,0.661,73,0.685,74,0.79,75,0.661,76,0.79,77,0.685,78,0.79,79,0.661,80,1.211,81,0.661,82,0.906,83,0.79,84,0.685,85,0.79,86,0.661,87,0.874,88,0.685,89,1.084,90,0.685,91,1.01,92,0.685,93,0.736,94,0.661,95,1.113,96,0.661,97,0.72,98,0.685,99,0.685,100,0.661,101,0.661,102,0.661,103,0.757,104,0.79,105,0.661,106,0.661,107,0.763,108,0.71,109,0.661,110,0.79,111,0.661,112,0.763,113,0.79,114,0.006,115,0.009,116,0.006,122,2.785,123,1.162,124,1.237,127,0.248,128,0.72,131,0.635,133,1.636,134,0.65,142,0.443,143,0.81,149,1.372,150,0.71,151,0.71,152,1.636,154,1.752,157,2.458,158,0.683,161,2.458,168,1.627,179,0.907,196,2.359,221,0.504,222,0.504,236,1.881,290,4.543,291,2.69,309,0.906,313,2.022,321,1.868,359,1.589,446,1.191,450,0.59,562,1.039,856,2.805,885,2.257,886,2.898,887,3.732,888,3.269,889,4.348,890,3.019,894,2.527,897,2.695,898,4.209,899,2.695,917,2.257,918,3.269,924,4.787,928,2.257,929,2.383,957,2.527,962,2.943,1174,3.975,1178,2.943,1236,3.269,1289,2.527,1293,2.044,1327,2.044,1408,5.287,1421,4.322,1442,4.787,1443,4.787,1555,4.787,1556,2.897,1583,3.488,1584,3.488,1593,3.488,1706,6.366,1707,3.698,1708,4.787,1709,3.698,1710,6.27,1711,3.15,1712,4.322,1713,4.787,1714,5.492,1715,5.492,1716,4.787,1717,5.492,1718,5.492,1719,4.002,1720,4.002,1721,5.492,1722,4.002,1723,4.002,1724,4.002,1725,4.002,1726,4.002,1727,4.002,1728,4.002,1729,4.002,1730,5.492,1731,5.492,1732,5.492,1733,4.002,1734,4.002]],["title/components/ItemAllocateDialogComponent.html",[0,0.041,61,0.688]],["body/components/ItemAllocateDialogComponent.html",[0,0.054,1,0.485,2,0.831,3,0.124,4,0.073,5,1.195,6,0.58,7,1.041,8,1.047,9,0.073,11,0.311,13,0.809,15,0.54,16,1.483,17,1.427,18,0.838,20,0.838,22,0.291,23,0.014,24,0.115,25,0.083,26,0.126,27,0.899,28,0.385,29,0.45,30,0.868,31,0.781,32,0.485,33,1.155,34,0.58,35,0.575,36,0.58,37,0.503,38,0.868,39,0.485,40,1.041,41,0.485,42,0.58,43,0.503,44,0.936,45,0.868,46,0.503,47,0.778,48,1.533,49,1.346,50,0.485,51,0.58,52,0.503,53,0.781,54,0.58,55,0.485,56,0.58,57,0.467,58,0.485,59,0.522,60,0.503,61,1.002,62,0.973,63,0.503,64,1.299,65,0.503,66,0.58,67,0.485,68,1.041,69,0.503,70,1.126,71,0.485,72,0.485,73,0.503,74,0.58,75,0.485,76,0.58,77,0.503,78,0.58,79,0.485,80,0.503,81,0.485,82,0.726,83,0.58,84,0.503,85,0.58,86,0.485,87,0.7,88,0.503,89,0.868,90,0.503,91,1.255,92,0.503,93,0.54,94,0.485,95,0.522,96,0.485,97,0.768,98,0.503,99,0.503,100,0.485,101,0.485,102,0.485,103,0.637,104,0.58,105,0.485,106,0.485,107,0.56,108,0.522,109,0.485,110,0.58,111,0.485,112,0.56,113,0.58,114,0.008,115,0.007,116,0.005,123,0.931,124,1.237,127,0.182,128,0.577,129,2.36,131,0.509,133,1.42,134,0.705,136,1.62,137,1.868,142,0.777,143,1.006,146,2.48,149,0.936,150,0.936,151,1.113,152,1.42,154,1.403,158,0.634,160,2.515,173,0.899,178,2.733,179,1.42,195,1.403,208,3.328,209,3.817,217,1.52,221,0.664,222,0.664,228,2.416,236,2.501,237,3.663,238,1.282,239,1.935,242,1.682,246,2.146,247,1.749,249,2.313,252,1.403,254,1.749,258,2.357,271,2.072,302,2.777,309,0.87,310,1.355,311,0.905,312,1.433,317,0.737,318,2.805,324,1.747,338,2.973,359,1.167,374,1.979,378,1.855,393,2.313,400,5.594,415,1.654,450,0.925,507,1.454,621,1.082,678,2.247,690,1.89,691,1.043,748,2.324,751,1.979,762,2.619,780,1.082,794,3.21,877,2.962,885,1.657,886,2.826,887,3.139,888,2.619,889,2.619,890,1.315,891,3.462,892,4.607,893,4.607,894,1.855,895,3.485,896,3.696,898,2.619,900,3.462,902,3.462,903,1.979,905,3.462,906,3.462,907,3.462,908,3.137,910,3.462,911,3.462,912,3.462,917,1.657,918,1.749,920,2.962,921,2.313,922,2.561,923,3.301,925,3.462,928,1.657,929,1.749,930,2.313,931,2.313,935,3.55,937,2.313,941,2.313,944,2.561,946,4.607,947,3.462,948,2.313,949,3.462,950,2.962,951,3.462,952,2.313,953,2.313,954,3.462,955,2.313,956,2.313,957,1.855,958,2.313,959,1.979,962,2.357,963,2.48,964,1.979,965,2.015,966,1.855,967,3.359,968,2.146,969,1.167,970,1.749,971,1.657,972,1.575,973,1.657,974,1.433,975,1.433,1026,3.462,1070,4.237,1072,4.537,1181,2.962,1253,1.575,1299,3.184,1549,2.561,1563,3.834,1711,2.313,1735,6.083,1736,5.52,1737,3.462,1738,4.607,1739,2.939,1740,4.4,1741,2.939,1742,2.939,1743,4.4,1744,5.368,1745,2.939,1746,3.462,1747,3.834,1748,3.485,1749,2.939,1750,2.939,1751,4.4,1752,4.4,1753,4.4,1754,4.4,1755,2.939,1756,4.4,1757,4.4,1758,2.939,1759,3.462,1760,2.777,1761,2.777,1762,2.939,1763,4.4,1764,4.15,1765,3.462,1766,3.462,1767,3.462,1768,2.939,1769,2.777,1770,3.834,1771,4.4,1772,2.619,1773,4.4,1774,4.4,1775,4.237,1776,2.939,1777,4.596,1778,2.939,1779,2.939,1780,2.939,1781,2.939,1782,2.939,1783,2.939,1784,2.939,1785,2.313,1786,2.313,1787,2.313,1788,2.939,1789,2.939,1790,2.561,1791,2.561,1792,2.939,1793,3.184,1794,2.313,1795,2.313,1796,3.834,1797,3.834,1798,4.4]],["title/components/ItemGridComponent.html",[0,0.041,65,0.688]],["body/components/ItemGridComponent.html",[0,0.06,1,0.403,2,0.754,3,0.108,4,0.06,5,1.26,6,0.482,7,0.482,8,0.748,9,0.06,11,0.259,13,0.702,15,0.449,16,1.463,17,1.411,18,0.728,20,0.728,22,0.297,23,0.014,24,0.095,25,0.069,26,0.104,28,0.501,29,0.374,30,0.754,31,0.678,32,0.403,33,1.049,34,0.482,35,0.481,36,0.482,37,0.418,38,0.754,39,0.403,40,0.928,41,0.403,42,0.482,43,0.418,44,0.834,45,0.754,46,0.418,47,1.101,48,0.865,49,1.261,50,0.403,51,0.482,52,0.418,53,0.944,54,0.482,55,0.403,56,0.482,57,0.388,58,0.403,59,0.433,60,0.418,61,0.418,62,0.998,63,0.418,64,1.207,65,0.91,66,0.482,67,0.403,68,0.928,69,0.418,70,0.654,71,0.403,72,0.403,73,0.418,74,0.482,75,0.403,76,0.482,77,0.418,78,0.482,79,0.403,80,0.418,81,0.403,82,0.63,83,0.482,84,0.418,85,0.482,86,0.403,87,0.607,88,0.418,89,0.754,90,0.418,91,0.702,92,0.418,93,0.865,94,0.403,95,0.433,96,0.403,97,0.501,98,0.418,99,0.418,100,0.403,101,0.403,102,0.403,103,0.798,104,0.482,105,0.403,106,0.403,107,0.465,108,0.433,109,0.403,110,0.482,111,0.403,112,0.465,113,0.482,114,0.004,115,0.006,116,0.004,122,1.576,123,0.808,124,0.928,127,0.152,128,0.501,129,1.093,130,1.64,131,0.442,133,1.289,134,0.693,137,1.696,140,2.273,142,0.677,143,0.902,148,2.41,149,0.678,150,1.085,151,1.085,152,1.289,154,1.218,157,1.709,158,0.717,161,2.737,170,0.752,171,0.592,173,1.179,178,1.783,179,1.385,189,4.634,194,2.478,195,0.779,208,2.293,217,1.717,221,0.592,222,0.592,228,2.194,236,1.975,248,0.836,252,0.779,254,1.454,271,1.262,275,2.153,309,0.403,310,2.142,311,1.638,313,2.252,315,1.576,316,1.008,317,1.659,318,1.093,321,1.783,323,2.764,324,2.111,341,3.123,364,1.247,374,1.644,378,1.542,415,1.483,441,1.459,450,0.693,507,1.262,562,1.869,589,3.264,592,4.175,597,1.768,614,3.117,621,2.353,667,4.54,678,1.95,690,1.049,700,1.922,748,1.867,751,3.165,754,1.644,758,2.983,759,1.542,763,3.005,765,3.548,772,2.41,780,0.899,787,3.277,794,2.379,800,1.191,802,3.729,804,4.175,807,1.922,823,1.922,824,1.922,834,1.768,873,1.95,882,1.768,917,1.377,920,2.571,923,2.153,950,2.571,959,2.571,960,2.129,965,0.933,969,0.97,972,1.309,974,1.191,975,1.191,996,3.005,1006,1.863,1009,1.863,1010,2.153,1012,1.863,1013,3.424,1030,3.726,1031,2.273,1036,4.098,1051,2.273,1070,4.175,1071,3.328,1072,4.92,1165,2.537,1181,3.579,1205,1.454,1206,0.899,1207,1.093,1222,2.41,1298,1.377,1309,1.863,1311,2.046,1323,3.356,1325,1.95,1327,2.401,1331,3.403,1333,1.454,1335,1.768,1338,2.41,1339,2.41,1373,2.764,1417,2.273,1435,2.129,1474,3.328,1483,2.129,1512,1.922,1513,2.41,1626,3.579,1641,4.303,1655,3.804,1656,2.129,1657,4.625,1658,1.542,1659,4.098,1709,2.571,1712,4.184,1713,3.328,1737,3.005,1738,5.205,1744,4.813,1746,4.813,1761,2.41,1764,3.7,1765,3.005,1766,3.005,1770,3.328,1785,1.922,1786,1.922,1787,1.922,1793,3.403,1794,1.922,1795,1.922,1799,6.619,1800,5.977,1801,2.129,1802,3.005,1803,3.819,1804,4.702,1805,3.819,1806,4.702,1807,4.702,1808,4.702,1809,4.175,1810,5.028,1811,3.819,1812,2.442,1813,4.702,1814,3.848,1815,3.819,1816,3.819,1817,2.442,1818,5.331,1819,3.819,1820,2.442,1821,2.442,1822,2.442,1823,3.819,1824,3.328,1825,2.442,1826,3.819,1827,3.328,1828,3.819,1829,3.819,1830,3.819,1831,3.819,1832,2.442,1833,3.819,1834,3.819,1835,3.819,1836,4.702,1837,3.819,1838,2.442,1839,3.328,1840,3.819,1841,6.116,1842,4.702,1843,4.702,1844,2.442,1845,4.634,1846,2.442,1847,3.819,1848,3.819,1849,2.442,1850,3.819,1851,3.819,1852,3.328,1853,3.005,1854,2.442,1855,2.442,1856,2.442,1857,3.328,1858,2.442,1859,3.328,1860,2.442,1861,2.129,1862,1.922,1863,2.442,1864,3.819,1865,3.819,1866,5.57,1867,5.764,1868,2.442,1869,2.442,1870,2.442,1871,2.442,1872,5.331,1873,2.442,1874,2.442,1875,4.634,1876,2.442,1877,2.442,1878,2.442,1879,2.442,1880,2.442,1881,2.129,1882,3.328,1883,2.442,1884,3.7,1885,2.442,1886,2.442,1887,2.442,1888,2.442,1889,1.768,1890,5.028,1891,3.005,1892,2.442,1893,2.442,1894,2.442,1895,2.442,1896,2.442,1897,2.442,1898,2.442,1899,5.769,1900,3.328,1901,3.819,1902,3.819,1903,3.819,1904,1.922,1905,2.442,1906,3.819,1907,3.819,1908,3.819,1909,3.819,1910,4.634,1911,2.442,1912,3.005,1913,2.442,1914,1.922,1915,2.442,1916,1.377,1917,4.118,1918,4.813,1919,2.442,1920,3.819,1921,2.442,1922,2.442,1923,2.442,1924,2.442,1925,2.442,1926,2.442,1927,2.442,1928,2.442,1929,2.442]],["title/components/ItemManageComponent.html",[0,0.041,67,0.663]],["body/components/ItemManageComponent.html",[0,0.068,1,0.437,2,0.577,3,0.115,4,0.066,5,0.943,6,0.523,7,0.977,8,0.787,9,0.066,11,0.281,13,0.748,14,1.052,15,0.487,16,1.472,17,1.416,18,0.775,20,0.775,22,0.29,23,0.014,24,0.103,25,0.075,26,0.113,27,0.831,28,0.347,29,0.406,30,0.803,31,0.986,32,0.437,33,1.096,34,0.523,35,0.578,36,0.523,37,0.454,38,0.803,39,0.437,40,0.977,41,0.437,42,0.523,43,0.454,44,0.879,45,0.803,46,0.454,47,0.391,48,0.91,49,1.299,50,0.437,51,0.523,52,0.454,53,0.722,54,0.523,55,0.437,56,0.523,57,0.421,58,0.671,59,0.879,60,0.454,61,0.454,62,1.051,63,0.454,64,1.248,65,0.454,66,0.523,67,0.917,68,0.977,69,0.454,70,0.696,71,0.437,72,0.437,73,0.454,74,0.523,75,0.437,76,0.523,77,0.454,78,0.523,79,0.437,80,0.454,81,0.437,82,0.671,83,0.523,84,0.454,85,0.523,86,0.437,87,0.647,88,0.454,89,0.803,90,0.454,91,0.748,92,0.454,93,0.487,94,0.437,95,0.47,96,0.437,97,1.06,98,0.454,99,0.454,100,0.437,101,0.437,102,0.437,103,0.598,104,0.523,105,0.437,106,0.437,107,0.505,108,0.47,109,0.437,110,0.523,111,0.437,112,0.505,113,0.523,114,0.004,115,0.006,116,0.004,123,0.86,124,0.977,127,0.164,128,0.533,129,2.215,131,0.471,133,1.347,134,0.721,136,2.045,137,1.771,142,0.752,143,1.028,149,1.063,150,1.122,151,1.122,152,1.453,154,2.017,157,1.82,158,0.72,160,2.597,161,2.485,170,1.525,171,0.643,173,1.224,178,2.311,179,1.491,180,0.876,184,3.896,185,2.739,194,1.138,195,1.298,208,3.211,217,1.056,218,2.077,220,2.311,221,0.754,222,0.754,229,4.204,232,3.201,236,2.435,237,3.362,239,1.835,242,1.555,246,2.415,247,1.577,248,1.216,252,0.845,253,1.353,254,1.577,258,2.653,266,2.739,267,4.576,270,3.665,271,2.426,275,2.293,277,2.421,280,2.952,302,2.568,304,2.568,305,3.131,309,0.437,310,1.525,311,0.816,317,1.02,318,1.82,338,2.791,359,1.052,374,1.784,378,1.673,388,5.706,393,2.085,395,1.673,396,1.353,415,1.453,425,4.315,450,0.73,562,0.688,592,2.568,621,1.498,623,1.494,624,1.747,669,1.237,678,2.077,679,3.505,715,1.293,748,1.965,751,1.784,780,0.976,787,2.179,873,2.077,886,2.126,890,1.186,917,1.494,920,2.739,950,1.784,959,1.784,964,1.784,965,1.013,966,1.673,967,2.179,968,1.293,969,1.052,970,1.577,971,1.494,972,1.42,973,1.494,974,1.293,975,1.293,1030,2.179,1070,3.583,1072,4.917,1113,3.059,1154,2.739,1157,2.568,1158,2.179,1163,2.293,1164,2.421,1201,2.836,1230,3.333,1231,3.583,1253,1.42,1294,1.784,1299,2.944,1365,3.201,1391,2.944,1397,3.201,1430,1.918,1518,1.918,1534,2.568,1611,3.545,1622,1.673,1712,4.37,1735,6.204,1737,3.201,1738,4.976,1744,4.714,1746,4.37,1747,3.545,1748,3.306,1761,2.568,1764,3.896,1765,3.201,1766,3.201,1767,3.201,1772,2.421,1775,4.019,1785,2.085,1786,2.085,1787,2.085,1790,2.309,1791,2.309,1793,2.944,1794,2.085,1795,2.085,1796,3.545,1797,3.545,1866,4.315,1867,4.315,1875,2.309,1890,3.545,1930,1.918,1931,3.739,1932,3.896,1933,3.201,1934,4.95,1935,3.333,1936,4.95,1937,4.315,1938,3.545,1939,3.545,1940,4.95,1941,3.545,1942,4.068,1943,2.65,1944,3.545,1945,4.068,1946,2.65,1947,4.068,1948,2.65,1949,2.739,1950,4.068,1951,2.65,1952,4.068,1953,2.65,1954,2.65,1955,2.65,1956,2.65,1957,3.201,1958,3.545,1959,2.65,1960,2.65,1961,2.739,1962,2.65,1963,2.65,1964,4.068,1965,2.309,1966,2.65,1967,4.068,1968,2.65,1969,2.65,1970,3.545,1971,2.944,1972,2.65,1973,2.65,1974,4.068,1975,2.65,1976,2.65,1977,1.494,1978,2.65,1979,2.65,1980,2.65,1981,4.95,1982,2.65,1983,2.309,1984,4.95,1985,2.65,1986,2.65,1987,4.315,1988,4.068,1989,4.068,1990,2.65,1991,2.309,1992,1.784,1993,2.65,1994,2.65,1995,1.784,1996,2.65,1997,2.085,1998,2.309,1999,2.309,2000,1.577,2001,1.494,2002,4.068,2003,4.068,2004,2.293,2005,3.545,2006,3.545,2007,2.944,2008,2.944,2009,3.545,2010,4.068,2011,4.068,2012,4.068,2013,4.068,2014,4.068]],["title/guards/ItemResolverService.html",[390,2.705,488,2.536]],["body/guards/ItemResolverService.html",[3,0.171,4,0.15,9,0.15,11,0.64,22,0.336,23,0.014,24,0.236,25,0.171,26,0.258,27,1.234,62,0.899,114,0.01,115,0.011,116,0.01,123,1.277,127,0.375,131,0.827,134,0.555,142,0.792,170,2.201,171,1.465,172,2.068,217,1.855,338,4.291,390,4.811,422,5.138,437,1.46,441,3.007,447,2.144,448,1.996,449,2.537,450,0.891,489,4.066,515,2.398,2015,6.228,2016,5.264,2017,5.693,2018,6.04,2019,6.04,2020,6.04]],["title/injectables/ItemService.html",[338,2.265,437,0.821]],["body/injectables/ItemService.html",[3,0.138,4,0.121,9,0.121,22,0.323,23,0.014,24,0.191,25,0.138,26,0.209,27,0.999,35,0.575,62,1.046,114,0.008,115,0.01,116,0.008,127,0.304,128,0.822,131,0.726,134,0.723,142,0.904,143,0.721,150,0.868,151,0.868,158,0.495,162,3.536,166,2.31,167,1.736,168,1.269,172,1.674,174,1.8,182,2.188,217,2.007,221,0.92,222,0.92,229,3.915,248,1.599,252,1.56,270,3.564,271,2.679,305,3.536,309,1.206,338,3.536,437,1.282,438,1.941,445,2.807,446,1.455,447,1.736,448,1.616,449,2.744,450,1.114,515,1.941,567,3.536,669,3.67,712,2.91,727,3.361,1068,3.361,1190,3.96,1616,5.087,1626,4.223,1861,4.261,1891,4.936,1957,4.936,1992,4.223,2021,4.261,2022,6.036,2023,6.273,2024,6.368,2025,7.307,2026,6.273,2027,6.273,2028,6.273,2029,6.273,2030,4.889,2031,6.273,2032,4.889,2033,6.273,2034,4.889,2035,4.349,2036,6.273,2037,6.273,2038,4.889,2039,6.273,2040,4.889,2041,3.734,2042,6.273,2043,4.889,2044,3.203,2045,4.889,2046,4.889,2047,4.261,2048,4.889,2049,4.889,2050,4.889,2051,4.889,2052,3.292]],["title/components/LabelAllocateDialogComponent.html",[0,0.041,69,0.688]],["body/components/LabelAllocateDialogComponent.html",[0,0.069,1,0.558,2,0.889,3,0.138,4,0.084,5,1.265,6,0.667,7,0.667,8,0.91,9,0.084,11,0.703,12,4.251,13,0.897,15,0.622,16,1.496,17,1.44,18,0.929,20,0.929,22,0.284,23,0.014,24,0.132,25,0.096,26,0.144,27,0.997,28,0.443,29,0.518,30,0.963,31,0.866,32,0.558,33,1.236,34,0.667,35,0.545,36,0.667,37,0.579,38,0.963,39,0.558,40,1.129,41,0.558,42,0.667,43,0.579,44,0.6,45,0.963,46,0.579,47,0.499,48,1.537,49,1.407,50,0.558,51,0.667,52,0.579,53,0.866,54,0.667,55,0.558,56,0.667,57,0.538,58,0.558,59,0.6,60,0.579,61,0.579,62,0.95,63,0.579,64,1.365,65,0.579,66,0.667,67,0.558,68,1.129,69,1.072,70,1.376,71,0.558,72,0.558,73,0.579,74,0.667,75,0.558,76,0.667,77,0.579,78,0.667,79,0.558,80,0.579,81,0.558,82,0.805,83,0.667,84,0.579,85,0.667,86,0.558,87,0.776,88,0.579,89,0.963,90,0.579,91,0.897,92,0.579,93,0.622,94,0.558,95,0.6,96,0.558,97,0.907,98,0.579,99,0.579,100,0.558,101,0.558,102,0.558,103,0.691,104,0.667,105,0.558,106,0.558,107,0.644,108,0.6,109,0.558,110,0.667,111,0.558,112,0.644,113,0.667,114,0.005,115,0.008,116,0.005,121,2.75,123,1.032,124,1.129,127,0.21,128,0.639,129,2.56,131,0.564,133,1.519,134,0.703,136,1.796,137,1.556,142,0.766,143,0.979,149,1.266,150,1.112,151,1.112,152,1.183,154,1.556,158,0.579,160,1.864,173,0.691,178,1.579,179,0.766,195,1.079,208,3.239,209,4.141,217,1.266,220,2.277,221,0.426,222,0.426,228,2.585,236,2.646,237,3.856,238,1.371,239,2.07,242,1.864,248,0.74,258,2.614,278,3.954,280,2.924,303,2.904,309,1.034,318,3.096,359,1.342,378,2.135,406,6.08,415,1.183,450,0.844,644,2.614,650,1.158,690,1.452,691,1.2,748,2.487,762,2.904,768,3.284,794,3.328,877,3.284,885,1.907,886,2.971,887,3.406,888,2.904,889,2.904,890,1.513,891,3.838,892,4.929,893,4.929,894,2.135,895,3.728,896,3.954,898,2.904,899,2.277,900,3.838,902,4.929,903,2.277,905,3.838,906,3.838,907,3.838,908,3.356,910,3.838,911,3.838,912,3.838,918,2.013,919,2.661,920,3.852,923,3.531,925,3.838,928,1.907,929,2.013,930,4.502,931,2.661,935,2.277,941,2.661,946,3.838,947,3.838,948,2.661,949,3.838,950,2.277,951,3.838,952,2.661,953,2.661,954,3.838,955,2.661,956,2.661,957,2.135,958,2.661,959,2.277,962,2.614,963,2.75,1190,3.079,1534,3.079,1535,2.947,1553,2.447,1556,2.447,1559,2.447,1708,4.251,1748,2.904,1759,3.838,1760,3.079,1761,3.079,1772,2.904,1777,2.947,1971,3.53,2007,3.53,2053,6.08,2054,3.382,2055,2.947,2056,3.382,2057,4.878,2058,2.614,2059,3.382,2060,4.878,2061,3.382,2062,4.878,2063,4.878,2064,3.852,2065,2.947,2066,4.878,2067,3.382,2068,3.382,2069,3.382,2070,3.53]],["title/components/LabelCreateComponent.html",[0,0.041,71,0.663]],["body/components/LabelCreateComponent.html",[0,0.057,1,0.524,2,0.661,3,0.132,4,0.079,5,0.605,6,0.627,7,0.627,8,0.878,9,0.079,11,0.741,13,0.857,15,0.584,16,1.49,17,1.435,18,0.888,20,0.888,22,0.289,23,0.014,24,0.124,25,0.132,26,0.136,27,1.128,28,0.416,29,0.487,30,0.919,31,1.321,32,0.524,33,1.2,34,0.627,35,0.533,36,0.627,37,0.544,38,0.919,39,0.524,40,1.089,41,0.524,42,0.627,43,0.544,44,0.564,45,0.919,46,0.544,47,0.468,48,1.015,49,1.38,50,0.524,51,0.627,52,0.544,53,0.827,54,0.627,55,0.524,56,0.627,57,0.505,58,0.769,59,1.149,60,0.544,61,0.544,62,0.88,63,0.544,64,1.336,65,0.544,66,0.627,67,0.524,68,1.089,69,0.544,70,1.424,71,1.004,72,0.524,73,0.544,74,0.627,75,0.524,76,0.627,77,0.544,78,0.627,79,0.524,80,0.544,81,0.524,82,0.769,83,0.627,84,0.544,85,0.627,86,0.524,87,0.741,88,0.544,89,0.919,90,0.544,91,0.857,92,0.544,93,0.584,94,0.524,95,0.564,96,0.524,97,0.611,98,0.544,99,0.544,100,0.524,101,0.524,102,0.524,103,0.666,104,0.627,105,0.524,106,0.524,107,0.605,108,0.564,109,0.524,110,0.627,111,0.524,112,0.605,113,0.627,114,0.005,115,0.007,116,0.005,121,3.944,123,0.986,124,1.278,127,0.197,128,0.611,130,2.001,131,0.539,133,1.474,134,0.702,136,2.239,137,1.94,142,0.775,143,1.032,145,2.941,146,2.627,149,1.368,150,0.98,151,0.98,152,1.57,154,2.159,157,2.721,158,0.558,160,1.781,162,2.627,170,1.7,171,0.77,173,1.242,179,1.467,194,1.364,208,3.159,210,3.995,217,1.862,218,2.379,221,0.695,222,0.695,229,4.165,236,2.507,237,3.572,239,1.54,242,1.781,248,1.208,254,1.89,255,2.298,258,2.497,269,2.774,270,2.273,278,2.941,303,3.286,304,2.941,305,2.627,309,1.004,310,1.873,311,1.7,313,1.169,315,1.311,317,1.385,359,1.261,364,1.622,387,1.311,395,2.004,396,1.622,401,5.578,415,0.77,501,1.364,549,3.372,561,4.061,562,1.433,622,3.372,623,1.79,650,1.595,762,2.774,800,3.302,811,2.499,846,4.401,886,2.371,890,1.421,962,2.497,963,2.627,1147,2.627,1164,2.774,1253,1.701,1294,2.138,1430,2.298,1518,2.298,1534,2.941,1551,2.379,1748,2.774,1760,2.941,1761,2.941,1772,2.774,1931,3.137,1935,3.716,1938,4.061,1944,4.061,1949,4.094,1961,3.137,1991,2.767,1992,2.138,2000,1.89,2001,1.79,2004,2.627,2035,3.62,2041,2.774,2044,2.379,2053,6.065,2064,3.716,2065,2.767,2070,3.995,2071,2.138,2072,3.995,2073,3.372,2074,6.769,2075,5.519,2076,4.66,2077,4.66,2078,6.08,2079,6.08,2080,6.08,2081,4.66,2082,3.175,2083,4.66,2084,3.175,2085,4.66,2086,3.175,2087,4.061,2088,3.175,2089,4.66,2090,2.767,2091,2.767,2092,3.137,2093,3.175,2094,3.175,2095,2.767,2096,4.66,2097,2.767,2098,2.941,2099,3.175,2100,3.175,2101,4.061,2102,2.627,2103,2.941,2104,5.519,2105,2.004,2106,5.519,2107,3.175,2108,2.941,2109,4.66,2110,5.519,2111,3.175,2112,4.66,2113,3.175,2114,3.175,2115,3.175,2116,3.175,2117,3.175,2118,3.175,2119,3.137,2120,2.499]],["title/injectables/LabelService.html",[437,0.821,2064,2.705]],["body/injectables/LabelService.html",[3,0.147,4,0.129,9,0.129,11,0.55,22,0.304,23,0.014,24,0.203,25,0.147,26,0.222,27,1.062,35,0.588,70,1.436,114,0.008,115,0.01,116,0.008,127,0.323,130,2.8,131,0.754,134,0.708,142,0.901,143,0.767,149,1.157,162,3.676,166,2.401,167,1.845,168,1.349,172,1.78,174,1.914,182,2.325,217,2.092,218,3.33,221,0.94,222,0.94,238,1.138,239,2.354,248,1.636,278,4.717,280,3.044,309,1.076,437,1.332,438,2.063,441,2.492,446,1.547,447,1.845,448,1.717,449,2.652,450,1.102,567,3.676,650,2.233,856,3.33,2035,3.881,2044,3.33,2052,3.499,2064,4.39,2121,4.529,2122,5.131,2123,6.521,2124,7.472,2125,6.521,2126,6.521,2127,6.521,2128,6.521,2129,5.197,2130,5.197,2131,4.719,2132,6.521,2133,6.521,2134,5.197,2135,5.131,2136,6.521,2137,5.197,2138,6.521,2139,5.197,2140,5.197,2141,5.197,2142,5.197,2143,5.197]],["title/components/LandingComponent.html",[0,0.041,72,0.663]],["body/components/LandingComponent.html",[0,0.078,1,0.79,2,0.878,3,0.175,4,0.119,5,0.912,6,0.945,7,0.945,8,1.091,9,0.119,11,0.507,13,1.138,14,2.457,15,0.881,16,1.523,17,1.467,18,1.179,20,1.179,22,0.205,23,0.013,24,0.187,25,0.135,26,0.205,27,0.978,28,0.628,29,0.734,30,1.221,31,1.098,32,0.79,33,1.431,34,0.945,35,0.54,36,0.945,37,0.82,38,1.221,39,0.79,40,1.353,41,0.79,42,0.945,43,0.82,44,0.85,45,1.221,46,0.82,47,0.706,48,1.261,49,1.544,50,0.79,51,0.945,52,0.82,53,1.098,54,0.945,55,0.79,56,0.945,57,0.762,58,0.79,59,0.85,60,0.82,61,0.82,62,0.912,63,0.82,64,1.517,65,0.82,66,0.945,67,0.79,68,1.353,69,0.82,70,1.06,71,0.79,72,1.197,73,0.82,74,0.945,75,0.79,76,0.945,77,0.82,78,0.945,79,0.79,80,0.82,81,0.79,82,1.022,83,0.945,84,0.82,85,0.945,86,0.79,87,0.985,88,0.82,89,1.221,90,0.82,91,1.138,92,0.82,93,0.881,94,0.79,95,0.85,96,0.79,97,0.95,98,0.82,99,0.82,100,0.79,101,0.79,102,0.79,103,0.828,104,0.945,105,0.79,106,0.79,107,1.307,108,0.85,109,0.79,110,0.945,111,0.79,112,0.912,113,0.945,114,0.008,115,0.01,116,0.008,122,2.554,124,0.945,185,4.167,199,5.247,206,5.397,207,4.871,448,2.045,579,3.684,1511,5.394,2144,4.174,2145,5.394,2146,6.189,2147,6.189,2148,6.318,2149,6.189,2150,6.189,2151,6.189,2152,6.189,2153,4.871,2154,6.189,2155,6.189,2156,6.189,2157,5.394,2158,6.189]],["title/components/LoginComponent.html",[0,0.041,73,0.688]],["body/components/LoginComponent.html",[0,0.067,1,0.698,2,0.809,3,0.161,4,0.105,5,0.806,6,0.835,7,0.835,8,1.026,9,0.105,13,1.049,15,0.778,16,1.514,17,1.459,18,1.087,20,1.087,22,0.317,23,0.014,24,0.165,25,0.119,26,0.181,28,0.554,29,0.648,30,1.125,31,1.012,32,0.698,33,1.362,34,0.835,35,0.543,36,0.835,37,0.724,38,1.125,39,0.698,40,1.273,41,0.698,42,0.835,43,0.724,44,0.751,45,1.125,46,0.724,47,0.624,48,1.186,49,1.498,50,0.698,51,0.835,52,0.724,53,1.012,54,0.835,55,0.698,56,0.835,57,0.673,58,0.698,59,0.751,60,0.724,61,0.724,62,0.869,63,0.724,64,1.465,65,0.724,66,0.835,67,0.698,68,1.273,69,0.724,70,0.976,71,0.698,72,0.698,73,1.182,74,0.835,75,0.698,76,0.835,77,0.724,78,0.835,79,0.698,80,0.724,81,0.698,82,0.941,83,0.835,84,0.724,85,0.835,86,0.698,87,0.907,88,0.724,89,1.125,90,0.724,91,1.049,92,0.724,93,0.778,94,0.698,95,0.751,96,0.698,97,0.748,98,0.724,99,0.724,100,0.698,101,0.698,102,0.698,103,0.779,104,0.835,105,0.698,106,0.698,107,0.806,108,0.751,109,0.698,110,0.835,111,0.698,112,0.806,113,0.835,114,0.007,115,0.009,116,0.007,123,1.206,124,1.273,127,0.263,128,0.748,131,0.66,133,1.674,134,0.698,142,0.765,143,1.018,150,0.751,151,0.751,152,1.383,158,0.577,168,1.098,170,2.338,171,1.026,172,1.448,173,1.165,179,1.292,180,1.398,187,3.394,194,2.449,221,0.532,222,0.532,242,1.617,310,1.303,387,1.746,415,1.026,446,1.259,458,4.518,516,3.328,540,4.421,552,3.215,562,1.098,564,3.328,856,2.912,974,2.063,975,2.063,1298,2.385,1620,3.061,1621,3.686,1622,2.67,1641,2.848,2001,2.385,2102,3.637,2103,4.358,2105,3.6,2108,2.67,2159,3.686,2160,6.451,2161,5.702,2162,6.451,2163,6.451,2164,6.904,2165,6.904,2166,3.686,2167,5.702,2168,4.23,2169,4.23,2170,4.23,2171,4.23,2172,4.23,2173,2.848,2174,3.394,2175,4.23,2176,4.23,2177,3.839,2178,3.6,2179,4.23,2180,4.23,2181,4.23,2182,4.23,2183,4.23,2184,4.23,2185,4.23,2186,5.702,2187,6.017,2188,4.97,2189,6.017,2190,5.702,2191,6.017,2192,5.702,2193,6.904,2194,4.23]],["title/interfaces/LoginData.html",[501,1.725,552,2.265]],["body/interfaces/LoginData.html",[3,0.166,4,0.146,9,0.146,11,0.624,23,0.013,25,0.22,114,0.009,115,0.011,116,0.009,127,0.365,128,0.923,149,1.249,158,0.712,187,4.817,238,1.834,320,3.716,484,3.505,501,3.35,507,1.945,539,4.19,540,4.19,552,3.968,557,3.319,643,3.716,691,2.673,742,3.716,770,2.872,1055,5.069,1508,3.716,1769,4.924,2174,3.505,2178,5.109,2195,3.964,2196,5.646,2197,5.094,2198,5.449,2199,5.094,2200,4.739,2201,4.261,2202,3.964,2203,4.261,2204,4.261,2205,3.505,2206,4.261,2207,4.261]],["title/interfaces/LoginResp.html",[501,1.725,2174,2.391]],["body/interfaces/LoginResp.html",[3,0.166,4,0.145,9,0.145,11,0.622,23,0.013,25,0.22,114,0.009,115,0.011,116,0.009,127,0.365,128,0.921,149,1.043,158,0.711,187,4.478,238,1.816,320,3.708,484,4.64,501,3.348,507,1.941,539,4.184,540,4.184,552,3.312,557,3.312,643,3.708,691,2.829,742,3.708,770,2.865,1055,5.365,1508,3.708,1769,4.921,2174,4.184,2178,4.748,2195,3.955,2196,5.641,2197,5.444,2198,5.854,2199,5.087,2200,4.732,2201,4.252,2202,3.955,2203,4.252,2204,4.252,2205,3.497,2206,4.252,2207,4.252]],["title/components/NotfoundComponent.html",[0,0.041,75,0.663]],["body/components/NotfoundComponent.html",[0,0.078,1,0.823,2,0.901,3,0.179,4,0.123,5,0.95,6,0.984,7,0.984,8,1.112,9,0.123,11,0.528,13,1.168,14,2.521,15,0.917,16,1.525,17,1.47,18,1.21,20,1.21,22,0.213,23,0.013,24,0.195,25,0.141,26,0.213,27,1.018,28,0.653,29,0.764,30,1.253,31,1.127,32,0.823,33,1.452,34,0.984,35,0.55,36,0.984,37,0.853,38,1.253,39,0.823,40,1.379,41,0.823,42,0.984,43,0.853,44,0.885,45,1.253,46,0.853,47,0.735,48,1.285,49,1.558,50,0.823,51,0.984,52,0.853,53,1.127,54,0.984,55,0.823,56,0.984,57,0.793,58,0.823,59,0.885,60,0.853,61,0.853,62,0.926,63,0.853,64,1.533,65,0.853,66,0.984,67,0.823,68,1.379,69,0.853,70,1.087,71,0.823,72,0.823,73,0.853,74,0.984,75,1.215,76,0.984,77,0.853,78,0.984,79,0.823,80,0.853,81,0.823,82,1.048,83,0.984,84,0.853,85,0.984,86,0.823,87,1.01,88,0.853,89,1.253,90,0.853,91,1.168,92,0.853,93,0.917,94,0.823,95,0.885,96,0.823,97,0.833,98,0.853,99,0.853,100,0.823,101,0.823,102,0.823,103,0.844,104,0.984,105,0.823,106,0.823,107,0.95,108,0.885,109,0.823,110,0.984,111,0.823,112,0.95,113,0.984,114,0.008,115,0.01,116,0.008,124,0.984,2208,4.344,2209,6.351,2210,4.998,2211,6.414,2212,6.989,2213,6.351,2214,6.351]],["title/injectables/ProductService.html",[437,0.821,758,1.959]],["body/injectables/ProductService.html",[0,0.047,2,0.653,3,0.088,4,0.077,9,0.077,11,0.33,22,0.258,23,0.014,24,0.122,25,0.088,26,0.133,28,0.409,35,0.547,47,1.109,62,0.579,97,0.79,103,0.555,114,0.005,115,0.01,116,0.005,122,1.898,127,0.339,128,0.603,131,0.532,134,0.681,142,0.821,143,0.46,158,0.777,161,3.01,166,2.22,167,1.108,168,0.81,172,1.068,174,1.694,180,1.031,182,2.445,195,1.923,217,1.194,220,2.147,221,0.759,222,0.759,228,1.898,238,1.523,239,2.359,248,1.32,252,1.467,270,2.941,271,2.613,280,2.815,294,4.745,295,2.455,299,3.329,302,2.904,309,1.061,317,1.513,415,1.325,437,0.94,438,1.239,441,1.758,445,3.316,446,0.928,447,1.108,448,1.805,449,1.633,450,1.093,507,1.52,515,1.239,519,2.738,525,2.244,590,3.228,598,2.904,611,1.969,644,2.465,650,1.068,656,5.293,667,3.62,685,1.969,698,1.522,715,2.244,727,4.027,758,2.244,761,4.745,765,2.058,769,2.738,772,4.246,787,2.465,792,2.455,793,3.329,794,3.01,795,4.745,798,3.329,815,4.745,825,5.059,829,2.738,831,3.62,865,4.653,867,4.328,937,2.455,969,1.239,1065,5.274,1073,2.258,1080,2.258,1103,3.62,1193,3.329,1299,2.258,1417,1.857,1418,2.719,1446,4.009,1663,4.009,1676,3.329,1709,2.101,1802,3.62,1809,5.044,1818,6.222,1824,4.009,1839,4.009,1857,5.862,1872,6.459,1889,3.329,1891,3.62,1904,3.62,1977,3.08,1995,2.101,2058,2.927,2215,2.719,2216,4.6,2217,3.62,2218,6.029,2219,6.029,2220,6.029,2221,4.6,2222,4.6,2223,6.029,2224,4.6,2225,4.6,2226,3.12,2227,4.6,2228,3.329,2229,3.12,2230,3.62,2231,4.6,2232,4.6,2233,6.029,2234,4.6,2235,4.6,2236,3.12,2237,4.009,2238,4.6,2239,4.6,2240,4.6,2241,6.029,2242,4.6,2243,4.6,2244,6.029,2245,4.6,2246,4.6,2247,3.12,2248,4.761,2249,4.6,2250,3.12,2251,4.009,2252,4.009,2253,4.6,2254,3.62,2255,3.62,2256,6.029,2257,4.6,2258,4.6,2259,3.62,2260,4.6,2261,4.6,2262,4.6,2263,4.6,2264,4.6,2265,3.12,2266,4.6,2267,3.12,2268,3.12,2269,3.62,2270,4.6,2271,7.139,2272,5.463,2273,2.719,2274,3.12,2275,3.12,2276,3.12,2277,3.12,2278,3.12,2279,3.62,2280,4.299,2281,4.6,2282,4.761,2283,3.12,2284,3.12,2285,3.12,2286,3.12,2287,3.12,2288,3.12,2289,3.12,2290,3.12,2291,3.12,2292,3.12,2293,3.12,2294,3.12,2295,3.12,2296,3.12,2297,3.12,2298,3.12,2299,3.12,2300,4.6,2301,3.12,2302,4.6,2303,3.12,2304,4.6,2305,3.12,2306,3.12,2307,3.12,2308,3.12,2309,3.12,2310,3.12,2311,2.719,2312,2.455,2313,3.12,2314,3.12,2315,3.12,2316,3.12,2317,4.6,2318,3.12,2319,3.12,2320,4.6,2321,3.12,2322,3.12,2323,3.12,2324,3.12,2325,4.6,2326,4.6,2327,3.12,2328,4.6,2329,3.12,2330,3.12,2331,2.719,2332,3.12,2333,3.12,2334,4.6,2335,3.12,2336,3.12,2337,3.12]],["title/components/RegisterComponent.html",[0,0.041,77,0.688]],["body/components/RegisterComponent.html",[0,0.065,1,0.659,2,0.778,3,0.155,4,0.099,5,0.761,6,0.788,7,0.788,8,0.996,9,0.099,13,1.009,15,0.734,16,1.51,17,1.454,18,1.045,20,1.045,22,0.288,23,0.014,24,0.156,25,0.113,26,0.171,28,0.719,29,0.612,30,1.082,31,0.973,32,0.659,33,1.33,34,0.788,35,0.531,36,0.788,37,0.684,38,1.082,39,0.659,40,1.236,41,0.659,42,0.788,43,0.684,44,0.709,45,1.082,46,0.684,47,0.589,48,1.152,49,1.475,50,0.659,51,0.788,52,0.684,53,0.973,54,0.788,55,0.659,56,0.788,57,0.635,58,0.659,59,0.709,60,0.684,61,0.684,62,0.848,63,0.684,64,1.441,65,0.684,66,0.788,67,0.659,68,1.236,69,0.684,70,0.939,71,0.659,72,0.659,73,0.684,74,0.788,75,0.659,76,0.788,77,1.154,78,0.788,79,0.659,80,0.684,81,0.659,82,0.905,83,0.788,84,0.684,85,0.788,86,0.659,87,0.872,88,0.684,89,1.082,90,0.684,91,1.009,92,0.684,93,0.734,94,0.659,95,0.709,96,0.659,97,0.719,98,0.684,99,0.684,100,0.659,101,0.659,102,0.659,103,0.756,104,0.788,105,0.659,106,0.659,107,0.761,108,0.709,109,0.659,110,0.788,111,0.659,112,0.761,113,0.788,114,0.006,115,0.009,116,0.006,123,1.16,124,1.236,127,0.248,128,0.719,130,1.715,131,0.634,133,1.635,134,0.62,142,0.607,143,0.809,158,0.555,173,1.12,179,1.242,180,2.228,187,3.264,194,2.355,217,1.037,221,0.503,222,0.503,236,1.367,242,1.526,310,1.23,320,3.462,387,1.648,415,0.968,450,0.809,458,4.451,516,3.143,539,4.345,557,3.092,562,1.037,564,3.143,579,3.264,710,5.305,715,1.948,770,1.948,1181,2.689,1193,2.89,1298,2.252,1373,2.89,1620,2.89,1641,2.689,1853,4.315,2102,3.801,2103,4.256,2105,3.462,2108,2.521,2153,4.315,2166,3.481,2173,3.692,2177,4.539,2178,3.462,2187,6.637,2188,4.779,2189,4.779,2191,6.637,2200,4.539,2205,3.264,2254,3.143,2338,3.143,2339,6.263,2340,5.484,2341,6.263,2342,5.484,2343,3.994,2344,3.994,2345,3.994,2346,3.994,2347,3.994,2348,3.994,2349,3.994,2350,3.143,2351,3.994,2352,3.994,2353,3.994,2354,3.994,2355,3.994,2356,3.994,2357,3.994,2358,3.994,2359,3.994,2360,3.994,2361,3.994,2362,3.994,2363,3.994,2364,3.994,2365,3.994,2366,3.994,2367,3.143,2368,3.994,2369,3.994,2370,3.481,2371,3.994,2372,3.994,2373,3.994,2374,3.994,2375,3.994,2376,2.689,2377,3.994,2378,3.994,2379,3.994,2380,5.484,2381,5.484,2382,5.484,2383,5.484,2384,5.484,2385,6.742,2386,5.484,2387,5.484,2388,5.484,2389,5.484,2390,5.484,2391,6.742,2392,5.484,2393,6.742,2394,5.484,2395,5.484,2396,5.484,2397,5.484,2398,5.484]],["title/interfaces/RegisterData.html",[501,1.725,557,2.265]],["body/interfaces/RegisterData.html",[3,0.163,4,0.143,9,0.143,11,0.612,23,0.013,25,0.219,114,0.009,115,0.011,116,0.009,127,0.359,128,0.912,149,1.235,158,0.756,187,4.852,238,1.842,320,4.394,484,3.44,501,3.33,507,1.91,539,4.446,540,3.44,552,3.258,557,3.924,643,3.648,691,2.652,742,3.648,770,2.819,1055,5.029,1508,3.648,1769,4.894,2174,3.44,2178,5.145,2195,3.891,2196,5.611,2197,5.038,2198,5.406,2199,5.611,2200,5.426,2201,5.038,2202,4.686,2203,5.038,2204,5.038,2205,3.44,2206,4.183,2207,4.183]],["title/interfaces/RegisterResp.html",[501,1.725,2205,2.391]],["body/interfaces/RegisterResp.html",[3,0.165,4,0.144,9,0.144,11,0.618,23,0.013,25,0.22,114,0.009,115,0.011,116,0.009,127,0.362,128,0.918,149,1.036,158,0.708,187,4.465,238,1.814,320,3.684,484,3.474,501,3.341,507,2.314,539,4.465,540,3.474,552,3.29,557,3.29,643,4.42,691,2.867,742,3.684,770,3.794,1055,5.237,1508,4.42,1769,4.91,2174,3.474,2178,4.735,2195,3.929,2196,5.629,2197,5.429,2198,5.91,2199,5.067,2200,4.714,2201,4.224,2202,3.929,2203,4.224,2204,4.224,2205,4.168,2206,5.067,2207,5.067]],["title/injectables/RoutingTrackerService.html",[437,0.821,1814,2.907]],["body/injectables/RoutingTrackerService.html",[3,0.135,4,0.118,9,0.118,11,0.505,14,2.975,22,0.328,23,0.014,24,0.186,25,0.135,26,0.204,27,1.26,28,0.809,35,0.485,103,0.927,114,0.01,115,0.01,116,0.008,127,0.296,128,0.809,131,0.714,134,0.665,142,0.528,143,0.703,149,1.406,150,0.845,151,0.845,158,0.732,166,2.664,167,1.691,168,1.236,170,2.561,171,1.155,173,1.398,174,2.519,180,2.26,221,0.776,222,0.776,238,1.681,248,1.043,291,1.754,309,0.786,415,1.496,437,1.26,438,1.891,441,2.357,446,1.417,447,1.691,448,1.574,450,0.91,590,3.219,594,5.236,613,3.812,621,1.754,655,4.854,659,3.748,671,5.383,675,2.552,679,3.007,682,2.685,685,3.894,686,4.464,693,3.665,694,3.193,698,3.009,699,3.447,712,2.835,720,4.464,727,3.305,768,4.153,856,3.15,1031,4.307,1165,1.891,1207,2.131,1551,3.695,1814,4.464,1862,5.898,2135,3.748,2399,4.151,2400,5.693,2401,6.841,2402,7.235,2403,6.841,2404,6.532,2405,6.168,2406,4.151,2407,6.168,2408,6.168,2409,4.763,2410,6.168,2411,6.168,2412,6.168,2413,6.168,2414,4.763,2415,6.168,2416,4.763,2417,4.763,2418,7.235,2419,4.763,2420,4.763,2421,4.763,2422,5.376,2423,6.168,2424,4.763,2425,4.151,2426,4.763,2427,4.763,2428,6.841,2429,4.763,2430,4.763,2431,4.763,2432,4.151,2433,4.151,2434,4.763]],["title/components/ScoreCreateComponent.html",[0,0.041,79,0.663]],["body/components/ScoreCreateComponent.html",[0,0.067,1,0.531,2,0.668,3,0.133,4,0.08,5,1.06,6,0.635,7,0.635,8,1.036,9,0.08,11,0.801,13,0.865,15,0.592,16,1.492,17,1.436,18,0.896,20,0.896,22,0.261,23,0.014,24,0.126,25,0.091,26,0.137,27,0.961,28,0.422,29,0.493,30,0.928,31,1.086,32,0.531,33,1.207,34,0.635,35,0.553,36,0.635,37,0.551,38,0.928,39,0.531,40,1.097,41,0.531,42,0.635,43,0.551,44,0.571,45,0.928,46,0.551,47,0.475,48,1.023,49,1.386,50,0.531,51,0.635,52,0.551,53,0.835,54,0.635,55,0.531,56,0.635,57,0.512,58,0.531,59,0.987,60,0.551,61,0.551,62,0.856,63,0.551,64,1.342,65,0.551,66,0.635,67,0.531,68,1.097,69,0.551,70,0.805,71,0.531,72,0.531,73,0.551,74,0.635,75,0.531,76,0.635,77,0.551,78,0.635,79,1.01,80,1.419,81,0.531,82,0.776,83,0.635,84,0.551,85,0.635,86,0.531,87,0.748,88,0.551,89,0.928,90,0.551,91,0.865,92,0.551,93,0.592,94,0.531,95,0.571,96,0.531,97,0.617,98,0.551,99,0.551,100,0.531,101,0.531,102,0.531,103,0.671,104,0.635,105,0.531,106,0.531,107,0.613,108,0.571,109,0.531,110,0.635,111,0.531,112,0.613,113,0.635,114,0.005,115,0.007,116,0.005,121,4.06,123,0.995,124,1.285,127,0.2,128,0.617,130,2.021,131,0.544,133,1.484,134,0.696,136,2.652,137,2.297,142,0.753,143,1.003,146,2.652,148,2.97,149,1.086,150,1.155,151,1.304,152,1.746,154,1.952,157,2.738,158,0.563,160,1.798,162,2.652,170,1.885,171,0.78,173,1.136,179,1.664,180,1.554,181,3.167,195,1.501,203,2.97,208,3.175,210,4.025,217,1.765,218,2.402,221,0.592,222,0.592,229,3.858,236,2.095,237,3.324,239,1.554,242,1.798,248,1.425,254,1.915,255,5.083,258,2.98,269,3.642,280,2.196,288,4.921,303,2.8,304,2.97,305,2.652,309,1.01,310,0.991,311,0.991,313,1.185,315,1.328,317,1.633,387,1.328,403,5.538,450,0.475,549,3.405,622,3.405,650,1.611,678,2.402,770,2.295,800,3.512,829,3.311,962,2.521,963,2.652,965,1.798,1013,2.521,1147,2.652,1417,1.915,1748,2.8,1931,4.119,1935,3.744,1961,3.167,1995,3.167,2000,1.915,2001,1.814,2004,2.652,2035,2.8,2044,2.402,2070,3.405,2071,2.166,2072,4.025,2073,3.405,2087,4.1,2098,2.97,2101,4.1,2103,2.97,2105,2.97,2108,2.97,2119,3.167,2120,2.532,2230,3.702,2435,6.669,2436,3.702,2437,4.847,2438,4.1,2439,4.704,2440,6.119,2441,6.119,2442,6.119,2443,4.704,2444,3.217,2445,4.704,2446,3.217,2447,3.217,2448,3.217,2449,2.804,2450,4.704,2451,3.217,2452,2.804,2453,2.804,2454,3.217,2455,3.217,2456,2.804,2457,4.428,2458,3.217,2459,3.217,2460,3.217,2461,5.561,2462,4.704,2463,3.217,2464,3.217,2465,4.704,2466,3.217,2467,4.704,2468,3.217,2469,5.333,2470,5.561,2471,3.217,2472,4.704,2473,3.217,2474,3.217,2475,4.704,2476,3.217,2477,3.217,2478,3.217,2479,3.217,2480,3.217]],["title/directives/ScoreDirective.html",[32,0.663,111,0.663]],["body/directives/ScoreDirective.html",[3,0.164,4,0.144,9,0.144,11,0.616,15,1.07,16,1.24,22,0.249,23,0.013,24,0.227,25,0.164,26,0.249,28,0.763,32,1.282,35,0.55,53,1.379,80,1.432,108,1.032,111,1.153,112,1.331,114,0.009,115,0.011,116,0.009,127,0.361,134,0.689,142,0.644,143,0.858,158,0.589,172,1.992,221,0.879,222,0.879,323,5.057,562,1.814,750,5.623,843,5.057,855,4.728,1110,5.07,1113,3.825,1135,5.07,1140,5.623,1157,4.411,1158,3.744,1168,6.528,1189,5.499,1201,2.971,1284,3.117,1300,3.916,1977,3.28,2092,4.705,2481,5.07,2482,5.817,2483,6.988,2484,5.817,2485,5.817,2486,5.817,2487,5.817,2488,5.817,2489,5.817,2490,5.817]],["title/injectables/ScoreService.html",[437,0.821,2457,2.907]],["body/injectables/ScoreService.html",[3,0.153,4,0.134,9,0.134,11,0.572,22,0.31,23,0.014,24,0.211,25,0.153,26,0.231,27,1.104,35,0.571,80,1.41,114,0.009,115,0.011,116,0.009,127,0.335,131,0.773,134,0.697,142,0.89,166,2.459,167,1.917,168,1.402,172,1.849,174,1.989,182,2.417,217,2.107,218,3.411,220,3.118,221,0.913,222,0.913,238,1.182,239,2.207,248,1.587,288,4.834,291,2.92,309,1.102,437,1.365,438,2.144,441,2.553,446,1.607,447,1.917,448,1.785,449,2.574,450,1.117,567,3.045,647,4.72,650,2.287,712,3.215,2035,3.976,2041,3.976,2044,3.411,2052,3.636,2122,5.256,2438,5.821,2457,4.834,2491,4.707,2492,7.575,2493,6.679,2494,6.679,2495,6.679,2496,5.401,2497,5.401,2498,6.679,2499,5.401,2500,6.679,2501,5.401,2502,5.401,2503,5.401]],["title/modules/SharedModule.html",[325,1.595,466,2.536]],["body/modules/SharedModule.html",[3,0.159,4,0.139,9,0.139,22,0.356,23,0.014,24,0.22,25,0.159,26,0.241,29,0.863,57,1.33,58,1.38,59,1,114,0.009,115,0.011,116,0.009,139,2.877,171,1.366,325,2.237,327,2.63,328,3.019,329,4.397,330,3.176,331,4.397,332,3.772,340,4.08,341,2.877,344,3.019,345,3.672,346,4.614,347,3.354,352,4.614,353,3.793,358,5.973,359,2.237,365,4.96,366,4.077,371,5.393,372,4.433,379,4.96,380,4.077,395,3.556,396,2.877,412,4.327,466,5.279,479,4.91,1532,5.057,1561,4.91,2504,4.91,2505,4.91,2506,4.91,2507,4.91,2508,5.634]],["title/components/ShoppingCartComponent.html",[0,0.041,81,0.663]],["body/components/ShoppingCartComponent.html",[0,0.056,1,0.502,2,0.641,3,0.128,4,0.075,5,1.492,6,0.6,7,0.6,8,0.856,9,0.075,11,0.78,13,0.83,15,0.56,16,1.486,17,1.431,18,0.86,20,0.86,22,0.254,23,0.014,24,0.119,25,0.086,26,0.13,27,0.622,28,0.592,29,0.466,30,0.891,31,0.801,32,0.502,33,1.175,34,0.6,35,0.525,36,0.6,37,0.521,38,0.891,39,0.502,40,1.062,41,0.502,42,0.6,43,0.521,44,1.183,45,0.891,46,0.521,47,0.449,48,0.99,49,1.362,50,0.502,51,0.6,52,0.521,53,0.801,54,0.6,55,0.502,56,0.6,57,0.484,58,0.502,59,1.326,60,0.521,61,0.521,62,0.892,63,0.521,64,1.315,65,0.521,66,0.6,67,0.502,68,1.062,69,0.521,70,0.773,71,0.502,72,0.502,73,0.521,74,0.6,75,0.502,76,0.6,77,0.521,78,0.6,79,0.502,80,0.521,81,0.983,82,1.216,83,0.6,84,0.521,85,0.6,86,0.502,87,0.718,88,0.521,89,0.891,90,0.521,91,0.83,92,0.521,93,0.56,94,0.502,95,0.54,96,0.502,97,0.592,98,0.521,99,0.521,100,0.502,101,0.502,102,0.502,103,0.719,104,0.6,105,0.502,106,0.502,107,0.58,108,0.54,109,0.502,110,0.6,111,0.502,112,0.58,113,0.6,114,0.005,115,0.007,116,0.005,121,2.545,123,0.955,124,1.062,127,0.189,128,0.592,131,0.522,133,1.444,134,0.613,142,0.596,143,0.666,150,0.54,151,0.54,158,0.457,168,1.397,173,0.922,179,0.689,195,2.029,196,3.384,221,0.677,222,0.677,238,0.988,242,2.815,248,1.304,271,1.779,310,2.125,311,2.053,312,3.365,313,2.193,315,2.222,316,2.222,317,1.875,321,2.107,322,1.715,324,2.924,446,0.905,450,0.666,562,1.791,579,2.687,589,3.523,624,1.307,635,3.619,650,1.042,691,1.08,698,1.484,748,2.364,765,3.73,780,2.193,908,3.571,965,2.276,969,2.137,1002,2.202,1006,2.202,1009,2.202,1012,2.202,1013,2.884,1014,1.92,1016,3.249,1017,2.048,1018,3.552,1019,1.553,1145,2.202,1147,2.545,1154,3.039,1157,2.85,1161,2.394,1162,3.251,1178,4.196,1201,2.305,1202,3.523,1203,1.811,1205,1.811,1283,3.191,1284,2.419,1285,1.811,1286,2.202,1289,2.85,1293,3.041,1296,2.202,1301,2.048,1302,2.048,1303,3.039,1304,2.048,1305,2.048,1306,2.048,1307,2.048,1309,1.484,1311,2.884,1317,1.811,1320,2.048,1323,4.207,1325,3.041,1327,2.305,1336,1.715,1337,1.811,1338,2.85,1339,2.85,1340,2.202,1341,2.202,1353,4.993,1410,2.394,1421,2.394,1450,3.552,1451,3.552,1476,2.394,1562,4.691,1647,3.039,1655,3.787,1658,3.398,1707,3.624,1914,2.394,1916,2.545,1917,3.039,2509,4.993,2510,2.651,2511,5.383,2512,4.514,2513,4.514,2514,3.934,2515,4.514,2516,3.042,2517,4.514,2518,3.042,2519,3.934,2520,5.429,2521,3.042,2522,3.042,2523,3.934,2524,3.042,2525,2.651,2526,3.042,2527,4.283,2528,3.042,2529,3.042,2530,3.042,2531,3.042,2532,3.042,2533,3.042,2534,3.042,2535,3.042,2536,3.042,2537,4.514,2538,3.934,2539,3.934,2540,3.934,2541,4.514,2542,3.934,2543,4.514,2544,4.514,2545,4.514,2546,3.934,2547,4.514,2548,3.934,2549,4.514,2550,5.809,2551,5.191,2552,2.651,2553,3.042,2554,3.042,2555,6.013,2556,5.191,2557,5.006,2558,6.867,2559,3.042,2560,3.934,2561,3.042,2562,3.042,2563,3.042,2564,3.896,2565,2.651,2566,2.651]],["title/injectables/ShoppingCartService.html",[437,0.821,1162,1.959]],["body/injectables/ShoppingCartService.html",[3,0.176,4,0.083,9,0.083,22,0.283,23,0.014,24,0.131,25,0.095,26,0.143,28,0.635,31,0.595,35,0.543,62,1.015,82,1.202,87,0.533,103,0.405,114,0.005,115,0.008,116,0.005,127,0.353,128,0.635,131,0.561,134,0.702,142,0.835,143,1.017,149,0.595,150,0.86,151,0.86,158,0.49,160,1.852,161,2.169,166,2.297,167,1.19,168,0.87,173,0.99,174,2.297,180,1.881,182,1.5,195,1.99,217,2.002,221,0.868,222,0.868,238,1.061,248,1.65,271,1.602,275,2.733,291,1.785,309,0.94,311,1.922,317,1.73,415,1.766,437,0.99,438,1.331,441,1.281,446,0.998,447,1.19,448,1.108,449,1.19,450,0.976,515,1.331,555,2.638,559,2.638,613,3.365,621,2.54,625,3.06,635,4.247,642,3.06,644,2.597,650,2.136,659,4.48,669,3.089,682,1.89,684,4.224,685,3.594,686,4.12,690,2.082,691,1.19,693,3.696,694,3.32,696,2.638,698,2.777,699,2.426,712,2.885,714,2.426,727,1.796,748,2.476,798,3.508,829,1.995,832,2.426,846,3.508,873,3.79,876,3.263,963,1.89,1030,2.597,1047,3.814,1051,2.885,1062,3.263,1162,2.364,1178,4.204,1202,3.939,1206,1.234,1219,2.638,1236,3.389,1237,2.921,1239,2.921,1551,2.475,1616,3.833,1622,3.06,1736,4.909,1970,4.224,1977,1.89,2008,2.426,2009,2.921,2035,2.885,2041,2.885,2135,2.638,2282,5.768,2433,2.921,2509,5.583,2520,5.93,2527,4.903,2567,2.921,2568,5.768,2569,4.847,2570,6.238,2571,4.847,2572,4.847,2573,6.238,2574,6.238,2575,4.847,2576,4.847,2577,2.921,2578,4.847,2579,4.847,2580,3.352,2581,3.352,2582,4.847,2583,4.847,2584,4.847,2585,3.352,2586,4.847,2587,3.352,2588,4.847,2589,4.224,2590,5.437,2591,4.847,2592,3.352,2593,3.352,2594,7.421,2595,4.847,2596,3.352,2597,4.224,2598,4.847,2599,3.352,2600,3.352,2601,4.847,2602,3.814,2603,4.224,2604,4.847,2605,3.352,2606,4.847,2607,3.352,2608,3.352,2609,3.352,2610,4.847,2611,4.847,2612,2.921,2613,3.352,2614,6.618,2615,3.352,2616,2.638,2617,2.921,2618,3.352,2619,5.693,2620,4.962,2621,3.352,2622,3.352,2623,3.814,2624,3.352,2625,3.352,2626,3.352,2627,3.352,2628,3.352,2629,3.352,2630,3.352,2631,4.847,2632,3.352,2633,2.921,2634,3.352,2635,4.224,2636,3.814,2637,3.352,2638,3.352,2639,2.426,2640,3.352,2641,3.352,2642,3.352,2643,3.352,2644,3.352,2645,3.352,2646,3.352,2647,3.352,2648,3.352,2649,3.352,2650,3.352,2651,5.693,2652,3.352,2653,3.352,2654,3.352,2655,3.352]],["title/components/ShoppingMetricsComponent.html",[0,0.041,84,0.688]],["body/components/ShoppingMetricsComponent.html",[0,0.063,1,0.453,2,0.593,3,0.118,4,0.068,5,0.796,6,0.542,7,0.542,8,0.805,9,0.068,11,0.291,13,0.769,14,1.09,15,0.505,16,1.476,17,1.42,18,0.796,20,0.796,22,0.307,23,0.014,24,0.107,25,0.078,26,0.117,28,0.548,29,0.421,30,1.201,31,0.742,32,0.453,33,1.116,34,0.542,35,0.505,36,0.542,37,0.47,38,0.825,39,0.453,40,0.999,41,0.453,42,0.542,43,0.47,44,1.004,45,0.825,46,0.47,47,0.405,48,0.931,49,1.316,50,0.453,51,0.542,52,0.47,53,0.742,54,0.542,55,0.453,56,0.542,57,0.437,58,0.453,59,0.487,60,0.47,61,0.47,62,0.839,63,0.47,64,1.265,65,0.47,66,0.542,67,0.453,68,0.999,69,0.47,70,0.716,71,0.453,72,0.453,73,0.47,74,0.542,75,0.453,76,0.542,77,0.47,78,0.542,79,0.453,80,0.47,81,0.453,82,1.27,83,0.542,84,0.968,85,0.542,86,0.453,87,1.06,88,0.47,89,0.825,90,0.716,91,1.226,92,0.716,93,1.04,94,0.453,95,0.487,96,0.453,97,0.548,98,0.47,99,0.47,100,0.453,101,0.453,102,0.453,103,0.85,104,0.542,105,0.453,106,0.453,107,0.523,108,0.487,109,0.453,110,0.542,111,0.453,112,0.523,113,0.542,114,0.007,115,0.007,116,0.004,123,0.884,124,0.999,127,0.17,128,0.548,131,0.484,133,1.372,134,0.671,136,1.539,139,2.135,140,2.488,142,0.738,143,0.617,149,1.138,150,0.742,151,0.742,152,1.741,154,1.333,157,1.87,158,0.512,161,1.87,170,2.054,171,0.666,173,1.31,179,1.453,180,1.381,196,1.795,221,0.637,222,0.637,228,1.133,238,0.601,271,2.606,290,2.814,291,1.539,309,0.69,310,1.743,311,1.559,312,1.34,313,1.539,315,1.133,316,1.133,317,1.673,318,1.229,321,1.951,324,1.09,359,1.09,396,2.135,415,1.666,422,4.337,450,0.983,515,1.09,562,1.085,589,3.404,605,4.93,606,5.246,613,3.252,621,1.864,624,2.174,625,4.443,629,3.643,635,3.275,682,1.548,685,1.734,686,1.987,693,1.471,694,1.282,702,1.987,708,3.025,715,2.969,733,2.393,738,5.246,748,1.09,765,1.87,773,2.357,802,2.357,856,2.135,886,2.174,890,1.87,908,1.471,1002,1.34,1016,2.135,1030,2.712,1066,3.643,1158,2.24,1161,2.161,1162,3.128,1164,3.368,1165,2.647,1178,2.712,1202,1.402,1203,1.635,1204,2.357,1205,1.635,1206,1.539,1207,1.229,1241,3.025,1242,3.025,1243,2.814,1244,1.849,1248,3.289,1250,3.025,1252,3.407,1253,3.262,1254,3.025,1258,3.983,1259,3.025,1261,2.161,1262,2.161,1264,2.161,1265,2.161,1266,2.161,1267,3.289,1268,3.289,1269,2.814,1270,2.161,1271,3.289,1272,2.161,1283,1.471,1284,1.471,1285,1.635,1286,1.987,1293,1.402,1301,1.849,1302,1.849,1303,2.814,1304,1.849,1305,1.849,1306,1.849,1307,1.849,1311,1.471,1317,1.635,1320,1.849,1323,1.734,1325,2.135,1326,3.025,1327,1.402,1333,1.635,1375,3.643,1431,2.393,1447,4.825,1620,3.025,1622,1.734,1657,1.987,1658,1.734,1775,1.987,1793,3.025,1916,2.357,1958,4.411,2237,3.643,2248,3.643,2254,3.289,2259,2.161,2279,5.046,2280,5.046,2331,3.643,2422,5.305,2509,5.356,2523,3.643,2525,2.393,2527,4.098,2551,5.589,2656,5.824,2657,2.393,2658,4.18,2659,4.18,2660,5.061,2661,4.18,2662,3.983,2663,5.061,2664,6.412,2665,5.657,2666,4.18,2667,4.18,2668,4.18,2669,2.746,2670,2.746,2671,3.289,2672,3.983,2673,2.746,2674,4.18,2675,2.746,2676,2.746,2677,4.18,2678,2.746,2679,2.746,2680,2.746,2681,4.18,2682,2.161,2683,2.746,2684,4.18,2685,2.746,2686,2.746,2687,2.746,2688,2.393,2689,2.393,2690,2.746,2691,5.657,2692,6.087,2693,2.746,2694,4.18,2695,5.657,2696,5.657,2697,2.746,2698,5.657,2699,4.18,2700,2.746,2701,2.746,2702,2.746,2703,2.746,2704,2.393,2705,2.746,2706,2.746,2707,2.746,2708,2.746,2709,2.746,2710,4.18,2711,2.746,2712,2.746,2713,2.746,2714,2.746,2715,2.746,2716,5.061,2717,2.746,2718,5.061,2719,4.93,2720,2.746,2721,2.746,2722,4.18,2723,3.643,2724,4.18,2725,4.18,2726,2.161]],["title/components/SubjectManageComponent.html",[0,0.041,86,0.663]],["body/components/SubjectManageComponent.html",[0,0.07,1,0.78,2,0.871,3,0.173,4,0.117,5,0.9,6,0.932,7,0.932,8,1.084,9,0.117,13,1.129,15,0.869,16,1.522,17,1.466,18,1.169,20,1.169,22,0.262,23,0.013,24,0.184,25,0.133,26,0.202,28,0.619,29,0.724,30,1.211,31,1.089,32,0.78,33,1.423,34,0.932,35,0.568,36,0.932,37,0.809,38,1.211,39,0.78,40,1.345,41,0.78,42,0.932,43,0.809,44,0.839,45,1.211,46,0.809,47,0.697,48,1.253,49,1.539,50,0.78,51,0.932,52,0.809,53,1.089,54,0.932,55,0.78,56,0.932,57,0.752,58,0.78,59,0.839,60,0.809,61,0.809,62,0.908,63,0.809,64,1.512,65,0.809,66,0.932,67,0.78,68,1.345,69,0.809,70,1.05,71,0.78,72,0.78,73,0.809,74,0.932,75,0.78,76,0.932,77,0.809,78,0.932,79,0.78,80,0.809,81,0.78,82,1.013,83,0.932,84,0.809,85,0.932,86,1.191,87,1.271,88,0.809,89,1.211,90,0.809,91,1.129,92,0.809,93,0.869,94,0.78,95,0.839,96,0.78,97,0.804,98,0.809,99,0.809,100,0.78,101,0.78,102,0.78,103,0.823,104,0.932,105,0.78,106,0.78,107,0.9,108,0.839,109,0.78,110,0.932,111,0.78,112,0.9,113,0.932,114,0.007,115,0.01,116,0.007,123,1.298,124,1.345,127,0.293,131,0.71,133,1.749,134,0.627,142,0.68,143,0.905,158,0.478,170,2.36,171,1.146,172,1.618,192,3.181,221,0.595,222,0.595,267,4.441,407,5.22,1432,4.118,1930,3.42,1932,5.363,1933,4.829,2000,4.294,2001,2.664,2004,3.46,2119,4.131,2406,4.118,2727,6.287,2728,4.725,2729,4.725,2730,4.118,2731,4.725]],["title/components/SubjectSelectComponent.html",[0,0.041,88,0.688]],["body/components/SubjectSelectComponent.html",[0,0.068,1,0.554,2,0.689,3,0.137,4,0.083,5,0.64,6,0.663,7,0.663,8,0.907,9,0.083,11,0.356,13,0.893,15,0.618,16,1.495,17,1.44,18,0.925,20,0.925,22,0.244,23,0.014,24,0.131,25,0.095,26,0.143,28,0.44,29,0.515,30,0.958,31,1.108,32,0.554,33,1.232,34,0.663,35,0.521,36,0.663,37,0.575,38,0.958,39,0.554,40,1.125,41,0.554,42,0.663,43,0.575,44,0.596,45,0.958,46,0.575,47,0.495,48,1.048,49,1.404,50,0.554,51,0.663,52,0.575,53,0.861,54,0.663,55,0.554,56,0.663,57,0.534,58,0.554,59,0.861,60,0.575,61,0.575,62,0.786,63,0.575,64,1.362,65,0.575,66,0.663,67,0.554,68,1.125,69,0.575,70,0.831,71,0.554,72,0.554,73,0.575,74,0.663,75,0.554,76,0.663,77,0.575,78,0.663,79,0.554,80,0.575,81,0.554,82,0.801,83,0.663,84,0.575,85,0.663,86,0.554,87,1.313,88,1.069,89,0.958,90,0.575,91,0.893,92,0.575,93,0.618,94,0.554,95,0.596,96,0.554,97,0.818,98,0.575,99,0.575,100,0.554,101,0.554,102,0.554,103,0.922,104,0.663,105,0.554,106,0.554,107,0.64,108,0.596,109,0.554,110,0.663,111,0.554,112,0.64,113,0.663,114,0.009,115,0.008,116,0.005,123,1.027,124,1.125,127,0.354,128,0.636,131,0.562,133,1.514,134,0.693,136,2.299,137,1.548,140,2.889,142,0.692,143,0.921,150,0.861,151,0.861,152,0.814,154,1.548,158,0.577,161,2.172,172,1.15,179,1.414,180,1.11,221,0.611,222,0.611,228,2.937,236,1.15,238,0.735,239,2.408,252,1.071,275,2.736,307,2.889,309,1.093,310,1.923,311,1.923,313,1.787,314,2.643,315,1.386,316,1.386,317,1.218,321,2.66,324,2.263,364,1.715,387,1.386,441,1.855,450,0.495,507,1.604,542,3.819,613,3.367,624,2.448,644,3.549,669,2.66,675,2.601,682,1.893,690,2.964,693,4.039,694,3.519,714,2.431,749,3.064,794,2.172,800,3.23,855,4.819,895,3.716,923,3.891,965,1.284,966,2.12,968,2.367,969,1.333,1002,1.638,1009,2.78,1019,2.478,1048,3.819,1092,3.819,1100,2.736,1107,3.819,1113,3.382,1157,3.064,1158,2.601,1201,1.715,1206,1.237,1222,2.12,1269,3.268,1283,1.799,1309,1.638,1325,1.715,1332,3.513,1336,1.893,1360,2.12,1450,3.819,1513,2.12,1517,2.261,1622,2.12,1638,3.513,1645,2.431,1653,2.643,1977,1.893,2058,2.601,2102,3.213,2131,4.125,2173,2.261,2177,3.268,2255,3.819,2273,4.23,2367,4.485,2376,3.837,2436,3.819,2577,2.927,2589,4.23,2616,3.819,2636,4.485,2732,6.654,2733,6.008,2734,2.643,2735,4.853,2736,3.819,2737,4.967,2738,4.23,2739,5.699,2740,5.699,2741,6.243,2742,6.243,2743,3.358,2744,4.853,2745,3.358,2746,3.358,2747,4.853,2748,4.853,2749,3.358,2750,4.853,2751,3.358,2752,4.853,2753,4.853,2754,4.853,2755,3.358,2756,4.853,2757,4.853,2758,3.358,2759,4.23,2760,3.358,2761,3.358,2762,3.358,2763,3.358,2764,3.358,2765,4.853,2766,3.358,2767,3.358,2768,3.358,2769,3.358,2770,3.358,2771,3.358,2772,3.358,2773,3.358,2774,4.853,2775,4.853,2776,3.819,2777,4.853,2778,4.853,2779,4.23,2780,4.23,2781,4.853,2782,4.853,2783,4.853,2784,4.853,2785,4.853,2786,4.23,2787,4.853,2788,4.853,2789,4.853,2790,4.853,2791,4.853,2792,4.853,2793,3.358,2794,3.358,2795,3.358,2796,3.358,2797,3.358,2798,3.358,2799,3.358,2800,3.358,2801,3.358]],["title/components/SwapDialogComponent.html",[0,0.041,90,0.688]],["body/components/SwapDialogComponent.html",[0,0.064,1,0.48,2,0.826,3,0.123,4,0.072,5,1.295,6,0.574,7,0.574,8,0.833,9,0.072,11,0.694,13,0.803,15,0.535,16,1.482,17,1.426,18,0.831,20,0.831,22,0.249,23,0.014,24,0.113,25,0.082,26,0.124,27,0.892,28,0.572,29,0.445,30,0.861,31,0.93,32,0.48,33,1.149,34,0.574,35,0.516,36,0.574,37,0.498,38,0.861,39,0.48,40,1.034,41,0.48,42,0.574,43,0.498,44,1.163,45,0.861,46,0.498,47,0.429,48,0.964,49,1.341,50,0.48,51,0.574,52,0.498,53,0.774,54,0.574,55,0.48,56,0.574,57,0.462,58,0.48,59,1.206,60,0.498,61,0.498,62,1.005,63,0.498,64,1.293,65,0.498,66,0.574,67,0.48,68,1.034,69,0.498,70,0.747,71,0.48,72,0.48,73,0.498,74,0.574,75,0.48,76,0.574,77,0.498,78,0.574,79,0.48,80,0.498,81,0.48,82,0.72,83,0.574,84,0.498,85,0.574,86,0.48,87,0.694,88,0.498,89,0.861,90,0.997,91,1.468,92,0.498,93,0.535,94,0.48,95,0.516,96,0.48,97,0.572,98,0.498,99,0.498,100,0.48,101,0.48,102,0.48,103,0.703,104,0.574,105,0.48,106,0.48,107,0.554,108,0.516,109,0.48,110,0.574,111,0.48,112,0.554,113,0.574,114,0.008,115,0.007,116,0.005,122,1.801,123,0.923,124,1.034,127,0.18,128,0.572,131,0.505,133,1.412,134,0.658,136,1.607,137,1.392,142,0.691,143,0.92,149,1.206,150,0.774,151,0.774,152,1.058,154,1.392,157,2.606,158,0.631,161,2.606,168,1.36,173,0.594,179,1.187,195,2.23,196,3.129,217,1.133,221,0.659,222,0.659,228,1.801,236,1.494,242,2.733,248,1.366,271,2.407,310,2.019,311,1.614,312,2.129,313,1.929,315,1.2,316,2.162,317,1.566,321,2.037,322,1.639,324,2.698,359,1.154,445,1.953,446,0.865,450,0.429,507,1.442,519,2.598,562,1.815,575,3.803,577,3.434,579,2.598,592,2.755,635,2.228,650,0.995,727,3.12,748,2.08,758,3.488,759,1.835,765,3.623,771,3.434,773,2.46,780,2.144,787,2.338,802,3.283,867,2.938,885,1.639,886,2.501,887,3.119,888,2.598,889,3.901,890,2.606,894,1.835,895,2.598,897,1.957,898,3.715,899,1.957,908,2.807,917,1.639,918,2.598,928,1.639,929,1.73,957,2.755,962,2.338,965,1.668,969,1.732,997,3.434,1002,2.129,1006,2.129,1009,2.129,1012,2.129,1013,2.338,1014,1.835,1016,2.228,1019,1.484,1031,2.598,1068,2.338,1073,3.158,1145,2.104,1147,3.283,1154,3.92,1170,3.158,1178,4.295,1204,4.107,1259,3.792,1269,1.957,1283,3.12,1284,2.338,1285,1.73,1286,2.104,1289,1.835,1293,2.974,1296,2.104,1301,1.957,1302,1.957,1303,2.938,1304,1.957,1305,1.957,1306,1.957,1307,1.957,1309,1.418,1311,1.558,1317,1.73,1320,1.957,1323,3.676,1325,2.974,1327,2.228,1336,1.639,1337,1.73,1338,2.755,1339,2.755,1340,2.104,1341,2.104,1353,2.104,1373,3.158,1546,4.516,1553,2.104,1556,3.158,1559,2.104,1616,2.938,1647,1.957,1655,2.598,1658,1.835,1711,2.288,1775,3.158,1810,4.566,1882,2.533,1914,2.288,1916,2.46,1917,1.957,1977,2.46,1992,2.938,2055,2.533,2148,3.803,2153,3.434,2269,3.434,2514,3.803,2519,3.803,2520,5.157,2538,3.803,2539,3.803,2540,5.075,2542,5.075,2550,3.803,2552,2.533,2555,5.439,2556,5.075,2557,4.123,2558,6.349,2560,2.533,2564,3.792,2565,2.533,2566,2.533,2719,2.533,2802,5.732,2803,2.907,2804,3.803,2805,3.803,2806,4.364,2807,2.907,2808,4.364,2809,4.364,2810,2.907,2811,2.907,2812,2.907,2813,2.533,2814,2.907,2815,2.907,2816,5.823,2817,2.907,2818,3.803,2819,5.823,2820,4.364,2821,4.364,2822,4.364,2823,5.823,2824,4.364,2825,4.364,2826,5.823,2827,4.364,2828,4.364,2829,5.712,2830,3.803,2831,4.364,2832,4.364,2833,2.907,2834,2.907]],["title/components/SwapOptDialogComponent.html",[0,0.041,92,0.688]],["body/components/SwapOptDialogComponent.html",[0,0.061,1,0.599,2,0.728,3,0.145,4,0.09,5,1.134,6,0.716,7,0.716,8,0.946,9,0.09,13,0.943,15,0.667,16,1.502,17,1.447,18,0.977,20,0.977,22,0.292,23,0.014,24,0.142,25,0.103,26,0.155,27,0.741,28,0.672,29,0.556,30,1.012,31,0.91,32,0.599,33,1.276,34,0.716,35,0.537,36,0.716,37,0.621,38,1.012,39,0.599,40,1.174,41,0.599,42,0.716,43,0.621,44,0.644,45,1.012,46,0.621,47,0.535,48,1.094,49,1.437,50,0.599,51,0.716,52,0.621,53,0.91,54,0.716,55,0.599,56,0.716,57,0.577,58,0.599,59,0.644,60,0.621,61,0.621,62,0.814,63,0.621,64,1.398,65,0.621,66,0.716,67,0.599,68,1.174,69,0.621,70,0.878,71,0.599,72,0.599,73,0.621,74,0.716,75,0.599,76,0.716,77,0.621,78,0.716,79,0.599,80,0.621,81,0.599,82,0.847,83,0.716,84,0.621,85,0.716,86,0.599,87,0.816,88,0.621,89,1.012,90,0.621,91,1.41,92,1.107,93,1.529,94,0.599,95,0.644,96,0.599,97,0.672,98,0.621,99,0.621,100,0.599,101,0.599,102,0.599,103,0.824,104,0.716,105,0.599,106,0.599,107,0.691,108,0.644,109,0.599,110,0.716,111,0.599,112,0.691,113,0.716,114,0.008,115,0.008,116,0.006,123,1.085,124,1.174,127,0.225,128,0.672,131,0.593,133,1.568,134,0.684,137,1.636,142,0.568,143,0.878,149,1.257,150,0.644,151,0.644,152,1.443,158,0.717,173,1.048,179,1.162,221,0.646,222,0.646,248,0.794,309,0.847,359,1.441,387,1.498,415,1.443,450,0.535,576,4.037,577,4.037,579,3.85,580,4.037,589,3.718,594,2.626,642,2.291,691,2.422,885,2.046,886,2.203,887,3.542,888,3.054,889,4.216,890,2.894,895,3.054,897,2.443,898,4.062,899,2.443,917,2.046,918,3.054,926,3.163,927,4.471,928,2.046,929,2.16,997,4.037,1158,2.749,1165,2.89,1170,3.713,1204,4.264,1205,2.16,1206,1.336,1207,1.624,1240,3.713,1241,3.713,1242,3.713,1243,4.006,1244,3.454,1247,4.306,1553,2.626,1559,2.626,1573,3.163,1633,5.637,1709,2.443,2102,3.646,2376,2.443,2546,4.471,2548,4.471,2723,4.471,2776,5.089,2779,4.471,2786,4.471,2802,5.951,2818,5.637,2829,5.637,2830,5.637,2835,5.95,2836,5.95,2837,5.13,2838,3.629,2839,5.13,2840,5.13,2841,5.95,2842,3.163,2843,3.629,2844,5.13,2845,3.629,2846,6.467,2847,3.629,2848,3.629,2849,3.629,2850,3.629,2851,3.629,2852,5.13,2853,3.629,2854,3.629,2855,3.629,2856,3.629,2857,5.13,2858,3.629,2859,3.629,2860,7.083,2861,5.13,2862,6.467,2863,5.13,2864,5.13,2865,5.13,2866,5.13,2867,6.467,2868,5.13,2869,6.467,2870,7.083,2871,6.467,2872,5.13,2873,5.13,2874,5.13,2875,5.13,2876,5.13,2877,5.13,2878,5.13,2879,5.13,2880,5.13,2881,5.13,2882,5.13,2883,5.13]],["title/components/TaxCreateComponent.html",[0,0.041,94,0.663]],["body/components/TaxCreateComponent.html",[0,0.069,1,0.563,2,0.697,3,0.139,4,0.084,5,0.65,6,0.673,7,0.673,8,0.915,9,0.084,11,0.789,13,0.903,15,0.627,16,1.497,17,1.441,18,0.935,20,0.935,22,0.269,23,0.014,24,0.133,25,0.096,26,0.146,27,1.003,28,0.447,29,0.523,30,0.969,31,0.871,32,0.563,33,1.241,34,0.673,35,0.546,36,0.673,37,0.584,38,0.969,39,0.563,40,1.135,41,0.563,42,0.673,43,0.584,44,0.605,45,0.969,46,0.584,47,0.503,48,1.058,49,1.411,50,0.563,51,0.673,52,0.584,53,0.871,54,0.673,55,0.563,56,0.673,57,0.543,58,0.563,59,1.02,60,0.584,61,0.584,62,0.873,63,0.584,64,1.369,65,0.584,66,0.673,67,0.563,68,1.135,69,0.584,70,0.84,71,0.563,72,0.563,73,0.584,74,0.673,75,0.563,76,0.673,77,0.584,78,0.673,79,0.563,80,0.584,81,0.563,82,0.81,83,0.673,84,0.584,85,0.673,86,0.563,87,0.781,88,0.584,89,0.969,90,0.584,91,0.903,92,0.584,93,0.627,94,1.038,95,1.482,96,0.563,97,0.644,98,0.584,99,0.584,100,0.563,101,0.563,102,0.563,103,0.694,104,0.673,105,0.563,106,0.563,107,0.65,108,0.605,109,0.563,110,0.673,111,0.563,112,0.65,113,0.673,114,0.005,115,0.008,116,0.005,121,4.126,123,1.038,124,1.315,127,0.212,128,0.644,131,0.568,133,1.525,134,0.704,136,2.695,137,2.334,142,0.769,143,1.024,145,3.099,146,2.768,149,1.116,150,1.183,151,1.183,152,1.683,158,0.582,160,1.876,161,2.197,170,1.771,171,0.827,173,1.175,179,1.303,203,3.97,208,2.805,210,4.162,217,1.274,218,2.507,221,0.429,222,0.429,229,3.718,236,2.282,237,3.403,239,1.622,242,1.876,248,0.747,252,1.088,254,2.031,255,2.469,258,2.63,269,2.922,270,3.068,280,2.292,303,2.922,304,3.099,305,2.768,309,1.145,310,1.512,311,1.512,317,0.856,364,1.742,387,1.408,402,5.601,562,1.274,639,3.553,650,2.153,678,2.507,770,2.395,800,1.664,856,2.507,962,2.63,963,2.768,1147,2.768,1236,3.744,1280,3.863,1391,3.553,1534,3.099,1557,3.553,1748,4.131,1931,3.305,1935,3.871,1961,3.305,2000,2.031,2001,1.924,2004,2.768,2044,2.507,2070,3.553,2071,2.297,2072,4.162,2073,3.553,2091,2.973,2092,3.305,2095,2.973,2097,2.973,2098,3.099,2103,3.099,2105,2.154,2108,3.099,2119,3.305,2131,3.553,2259,3.863,2437,5.012,2449,2.973,2452,2.973,2453,2.973,2456,2.973,2469,5.481,2884,6.745,2885,6.289,2886,4.909,2887,6.289,2888,6.289,2889,6.289,2890,3.412,2891,4.909,2892,3.412,2893,3.412,2894,3.412,2895,4.909,2896,4.909,2897,4.162,2898,3.412,2899,5.75,2900,3.412,2901,4.278,2902,4.909,2903,4.909,2904,3.412,2905,3.412,2906,4.909,2907,3.412,2908,5.75,2909,3.412,2910,3.412,2911,4.909,2912,3.412,2913,3.412,2914,4.909]],["title/injectables/TaxService.html",[437,0.821,2897,2.907]],["body/injectables/TaxService.html",[3,0.158,4,0.139,9,0.139,11,0.594,22,0.315,23,0.014,24,0.219,25,0.158,26,0.24,27,1.146,35,0.538,95,1.42,114,0.009,115,0.011,116,0.009,127,0.348,131,0.791,134,0.678,142,0.886,166,2.517,167,1.992,168,1.456,172,1.921,174,2.517,217,2.077,220,3.191,221,0.86,222,0.86,248,1.614,291,2.517,309,1.128,437,1.397,438,2.227,441,2.613,446,1.67,447,1.992,448,1.854,449,2.617,450,1.088,647,4.764,770,3.335,1236,4.069,2041,4.069,2044,3.491,2122,5.38,2897,4.948,2915,4.89,2916,6.836,2917,7.675,2918,6.836,2919,6.836,2920,5.61,2921,6.836,2922,5.61,2923,6.836,2924,5.61,2925,5.61,2926,5.61,2927,5.61]],["title/components/TreatmentCreateComponent.html",[0,0.041,96,0.663]],["body/components/TreatmentCreateComponent.html",[0,0.064,1,0.366,2,0.715,3,0.229,4,0.055,5,0.423,6,0.438,7,0.438,8,1.017,9,0.055,11,0.731,13,0.651,15,0.408,16,1.451,17,1.395,18,0.675,20,0.675,22,0.263,23,0.014,24,0.087,25,0.063,26,0.095,27,0.724,28,0.291,29,0.34,30,0.699,31,0.628,32,0.366,33,0.995,34,0.438,35,0.485,36,0.438,37,0.38,38,0.699,39,0.366,40,0.872,41,0.366,42,0.438,43,0.38,44,0.784,45,0.699,46,0.606,47,0.997,48,1.133,49,1.216,50,0.366,51,0.438,52,0.38,53,0.628,54,0.438,55,0.366,56,0.438,57,0.353,58,0.366,59,0.394,60,0.38,61,0.606,62,0.939,63,0.38,64,1.159,65,0.38,66,0.438,67,0.366,68,0.872,69,0.38,70,0.606,71,0.366,72,0.366,73,0.38,74,0.438,75,0.366,76,0.438,77,0.38,78,0.438,79,0.366,80,0.943,81,0.366,82,1.056,83,0.438,84,0.38,85,0.438,86,0.366,87,0.934,88,0.38,89,0.699,90,0.38,91,1.33,92,0.38,93,1.27,94,0.366,95,0.394,96,0.832,97,1.087,98,0.38,99,0.38,100,0.366,101,0.366,102,0.366,103,0.665,104,0.438,105,0.366,106,0.366,107,1.315,108,0.394,109,0.366,110,0.438,111,0.366,112,0.423,113,0.438,114,0.007,115,0.006,116,0.003,120,3.001,122,2.64,123,0.749,124,0.872,127,0.138,128,0.464,129,3.089,131,0.41,133,1.223,134,0.656,136,2.489,137,2.156,142,0.682,143,0.909,148,2.235,149,1.2,150,0.895,151,0.895,152,1.73,154,2.041,156,3.394,158,0.623,168,0.919,170,1.361,171,0.538,173,1.125,178,2.353,179,1.494,180,0.734,185,2.384,192,2.974,194,1.897,202,3.086,203,3.183,217,1.755,220,2.353,228,1.461,229,2.701,236,1.213,246,2.155,247,1.321,252,1.965,253,1.808,269,3.001,270,2.864,271,2.563,272,2.787,277,2.108,281,2.384,286,4.62,288,2.563,305,1.996,309,0.909,310,1.553,311,1.091,313,1.627,315,1.461,316,0.916,317,1.605,318,0.993,322,1.252,324,1.754,359,0.881,364,1.134,387,0.916,396,1.808,397,5.232,400,1.607,405,1.607,415,0.859,445,2.256,450,0.522,454,5.117,507,1.17,542,2.787,549,2.563,562,2.085,623,1.252,624,1.521,635,3.267,678,1.808,679,2.235,694,1.036,720,2.563,745,2.787,748,1.406,765,1.585,770,1.727,772,1.401,773,1.996,780,2.028,787,1.897,793,3.649,794,1.585,800,2.864,802,4.24,810,1.747,873,2.998,886,2.366,890,1.585,896,3.706,935,1.495,963,3.606,969,2.331,974,1.083,975,1.083,1004,1.747,1005,1.935,1006,1.727,1007,3.086,1008,1.935,1009,1.083,1010,1.252,1011,1.935,1012,1.083,1013,1.189,1014,1.401,1015,1.935,1016,1.134,1017,1.495,1018,1.747,1030,1.897,1031,4.183,1068,1.897,1073,4.63,1076,2.787,1147,3.811,1157,2.235,1163,2.491,1164,2.108,1178,3.146,1201,1.808,1236,3.495,1247,3.649,1252,1.495,1253,1.897,1294,1.495,1298,1.252,1309,1.083,1330,2.384,1391,4.458,1397,2.787,1430,2.563,1519,4.801,1546,5.64,1676,2.563,1707,3.394,1716,3.086,1736,5.034,1760,2.235,1772,2.108,1802,2.787,1918,2.787,1977,1.996,1992,2.384,1997,1.747,1998,1.935,1999,3.086,2000,1.321,2001,1.996,2004,1.996,2005,4.394,2006,3.086,2008,2.563,2044,2.575,2071,1.495,2072,3.197,2073,2.563,2090,1.935,2102,2.491,2103,2.235,2105,1.401,2108,2.235,2120,1.747,2279,1.747,2280,1.747,2432,1.935,2527,3.394,2602,5.034,2603,4.394,2672,2.787,2704,5.117,2928,6.301,2929,4.418,2930,4.418,2931,3.85,2932,5.042,2933,5.042,2934,5.042,2935,5.042,2936,5.042,2937,2.22,2938,5.042,2939,2.22,2940,2.22,2941,3.541,2942,2.22,2943,2.22,2944,2.22,2945,2.22,2946,2.22,2947,2.22,2948,2.22,2949,3.086,2950,2.22,2951,2.22,2952,3.086,2953,3.541,2954,3.086,2955,4.418,2956,5.508,2957,5.508,2958,5.042,2959,5.042,2960,3.541,2961,3.541,2962,5.042,2963,4.418,2964,2.22,2965,2.22,2966,3.541,2967,3.541,2968,3.541,2969,3.541,2970,3.541,2971,2.22,2972,5.508,2973,2.22,2974,2.22,2975,3.541,2976,3.541,2977,3.541,2978,2.22,2979,2.22,2980,2.22,2981,2.22,2982,2.22,2983,2.22,2984,2.22,2985,2.22,2986,2.22,2987,2.22,2988,2.22,2989,2.22,2990,2.22,2991,2.22,2992,2.22,2993,2.22,2994,2.22,2995,2.22,2996,2.22,2997,2.22,2998,3.541,2999,3.541,3000,6.397,3001,3.541,3002,5.042,3003,5.871,3004,3.541,3005,3.541,3006,3.541,3007,3.541,3008,3.541,3009,3.541,3010,3.541,3011,3.541,3012,3.541,3013,7.52,3014,5.042,3015,2.787,3016,3.541,3017,3.541,3018,3.086,3019,5.042,3020,3.541,3021,3.541,3022,3.541,3023,3.541,3024,3.541,3025,1.935]],["title/components/TreatmentSelectComponent.html",[0,0.041,98,0.688]],["body/components/TreatmentSelectComponent.html",[0,0.066,1,0.677,2,0.793,3,0.158,4,0.102,5,0.782,6,0.81,7,0.81,8,1.01,9,0.102,13,1.027,15,0.755,16,1.512,17,1.456,18,1.064,20,1.064,22,0.271,23,0.014,24,0.16,25,0.116,26,0.175,28,0.538,29,0.629,30,1.102,31,0.991,32,0.677,33,1.346,34,0.81,35,0.537,36,0.81,37,0.702,38,1.102,39,0.677,40,1.253,41,0.677,42,0.81,43,0.702,44,0.728,45,1.102,46,0.702,47,0.605,48,1.168,49,1.486,50,0.677,51,0.81,52,0.702,53,0.991,54,0.81,55,0.677,56,0.81,57,0.653,58,0.677,59,0.728,60,0.702,61,0.702,62,0.858,63,0.702,64,1.452,65,0.702,66,0.81,67,0.677,68,1.253,69,0.702,70,0.956,71,0.677,72,0.677,73,0.702,74,0.81,75,0.677,76,0.81,77,0.702,78,0.81,79,0.677,80,0.702,81,0.677,82,0.922,83,0.81,84,0.702,85,0.81,86,0.677,87,0.889,88,0.702,89,1.102,90,0.702,91,1.027,92,0.702,93,0.755,94,0.677,95,0.728,96,0.677,97,1.088,98,1.167,99,0.702,100,0.677,101,0.677,102,0.677,103,0.823,104,0.81,105,0.677,106,0.677,107,0.782,108,0.728,109,0.677,110,0.81,111,0.677,112,0.782,113,0.81,114,0.006,115,0.009,116,0.009,123,1.182,124,1.253,127,0.255,128,0.732,131,0.646,133,1.654,134,0.656,136,2.057,137,1.782,142,0.619,143,0.824,150,0.728,151,0.728,158,0.565,172,1.405,179,1.265,180,2.253,196,1.762,221,0.516,222,0.516,228,2.306,236,1.405,238,1.223,239,2.253,252,1.782,309,1.177,310,1.957,311,1.721,313,1.511,317,1.029,364,2.095,387,1.694,450,0.605,562,1.065,620,4.043,624,1.762,669,3.183,678,2.095,690,1.762,694,3.436,698,2.725,710,4.396,749,3.527,794,2.5,800,3.326,855,3.527,895,4.059,923,3.15,965,1.568,1051,2.443,1107,4.396,1113,2.853,1165,2.922,1201,2.853,1206,1.511,1207,1.836,2058,2.993,2102,3.581,2173,2.763,2177,3.761,2210,3.229,2211,4.869,2367,5.366,2376,4.276,2734,3.229,2737,5.536,2738,4.869,2780,4.869,2931,5.536,3026,6.414,3027,5.792,3028,3.576,3029,4.104,3030,4.104,3031,4.104,3032,4.104,3033,5.587,3034,4.104,3035,4.104,3036,4.104,3037,4.104,3038,5.587,3039,4.104,3040,5.587,3041,5.587,3042,5.587,3043,4.104,3044,4.104]],["title/guards/TreatmentService.html",[246,1.959,488,2.536]],["body/guards/TreatmentService.html",[0,0.051,2,0.823,3,0.098,4,0.086,8,0.79,9,0.086,22,0.286,23,0.014,24,0.135,25,0.098,26,0.148,27,0.708,31,0.615,35,0.605,47,0.856,62,0.844,97,1.099,103,0.599,114,0.009,115,0.008,116,0.005,120,2.956,123,0.733,127,0.215,128,0.454,130,2.133,131,0.575,134,0.73,142,0.917,143,0.732,149,0.881,156,2.334,160,1.325,162,2.8,166,1.829,167,1.231,168,0.9,170,1.53,171,0.841,172,1.187,174,1.277,182,2.222,195,1.584,203,2.188,217,2.135,218,2.536,220,3.257,221,0.967,222,0.967,227,5.522,231,5.522,232,5.277,239,2.565,246,2.422,248,1.738,252,1.106,253,1.77,269,3.771,271,2.665,280,2.957,291,2.469,309,1.213,415,1.407,422,4.404,437,1.015,446,1.032,447,1.231,448,1.146,449,2.756,450,1.171,489,2.334,515,1.376,519,2.956,525,2.422,567,1.955,620,3.594,644,2.661,647,3.454,669,2.708,690,1.489,694,3.587,712,3.771,727,1.858,829,3.454,896,3.135,1047,2.728,1068,2.661,1080,3.594,1193,3.594,1534,3.135,1551,1.77,1616,4.514,1760,3.135,1859,5.522,1939,3.022,1971,4.199,1995,4.514,2007,3.594,2008,3.594,2017,3.594,2041,3.771,2044,2.536,2052,3.343,2098,2.188,2131,3.594,2228,3.594,2252,3.022,2597,4.328,2612,3.022,2639,2.509,2813,3.022,3045,3.022,3046,4.966,3047,4.966,3048,4.966,3049,4.966,3050,6.335,3051,4.966,3052,6.335,3053,4.966,3054,4.966,3055,6.335,3056,4.966,3057,4.966,3058,4.966,3059,4.966,3060,4.966,3061,4.966,3062,6.705,3063,3.467,3064,4.966,3065,3.467,3066,4.966,3067,3.467,3068,3.467,3069,4.966,3070,3.467,3071,3.467,3072,4.966,3073,3.467,3074,4.966,3075,3.467,3076,3.467,3077,4.966,3078,4.966,3079,3.467,3080,4.966,3081,3.467,3082,4.966,3083,3.467,3084,4.966,3085,3.467,3086,4.328,3087,4.966,3088,3.467,3089,4.966,3090,3.467,3091,3.467,3092,3.467,3093,4.966,3094,3.467,3095,3.467,3096,3.467,3097,3.467,3098,3.467,3099,3.467,3100,3.467,3101,3.467,3102,3.467,3103,3.467,3104,3.467,3105,3.467,3106,3.467,3107,3.467,3108,3.467,3109,3.467,3110,3.467,3111,3.467,3112,3.467]],["title/components/TreeManageComponent.html",[0,0.041,100,0.663]],["body/components/TreeManageComponent.html",[0,0.066,1,0.516,2,0.654,3,0.13,4,0.077,5,0.596,6,0.617,7,0.617,8,1.295,9,0.077,11,0.58,13,0.848,14,1.242,15,0.575,16,1.489,17,1.433,18,0.878,20,0.878,22,0.258,23,0.014,24,0.122,25,0.088,26,0.134,27,0.942,28,0.41,29,0.479,30,0.91,31,1.195,32,0.516,33,1.191,34,0.617,35,0.574,36,0.617,37,0.536,38,0.91,39,0.516,40,1.08,41,0.516,42,0.617,43,0.536,44,0.555,45,0.91,46,0.536,47,1.109,48,1.006,49,1.374,50,0.516,51,0.617,52,0.536,53,0.818,54,0.617,55,0.516,56,0.617,57,0.498,58,0.516,59,0.555,60,0.536,61,0.536,62,0.76,63,0.536,64,1.329,65,0.536,66,0.617,67,0.516,68,1.08,69,0.536,70,0.789,71,0.516,72,0.516,73,0.536,74,0.617,75,0.516,76,0.617,77,0.536,78,0.617,79,0.516,80,0.536,81,0.516,82,0.761,83,0.617,84,0.536,85,0.617,86,0.516,87,0.733,88,0.536,89,0.91,90,0.536,91,0.848,92,0.536,93,0.575,94,0.516,95,0.555,96,0.516,97,0.998,98,0.536,99,0.536,100,0.997,101,0.516,102,0.516,103,0.661,104,0.617,105,0.516,106,0.516,107,0.596,108,0.555,109,0.516,110,0.617,111,0.516,112,0.596,113,0.617,114,0.005,115,0.007,116,0.005,122,1.902,123,0.975,124,1.27,127,0.194,128,0.604,129,2.449,131,0.533,133,1.464,134,0.692,136,2.479,137,2.148,142,0.746,143,0.993,145,2.91,146,2.599,149,1.072,150,1.072,151,1.072,152,1.733,154,1.47,158,0.466,160,2.308,170,1.686,171,0.759,173,1.234,178,2.818,179,1.618,180,1.034,181,2.107,184,5.065,194,1.344,217,1.567,218,2.354,220,2.152,221,0.58,222,0.58,229,4.186,236,1.578,237,2.795,239,1.523,242,1.762,246,2.248,247,1.863,248,1.009,249,2.462,252,1.926,258,3.235,267,3.336,270,3.485,302,2.91,303,2.744,304,2.91,305,2.599,309,1.062,310,1.42,311,0.964,339,3.258,399,2.462,404,5.507,430,5.61,445,2.063,450,0.68,507,1.523,562,0.812,592,2.91,622,3.336,623,1.764,624,1.98,678,2.354,679,2.91,715,2.248,762,2.744,769,4.144,780,1.697,896,3.811,934,4.306,935,3.103,961,4.017,964,2.107,965,1.196,966,1.975,967,2.47,968,1.526,969,1.242,970,1.863,971,1.764,972,1.677,973,1.764,974,1.526,975,1.526,1113,2.354,1163,2.599,1190,4.682,1230,4.334,1231,4.658,1294,2.107,1417,1.863,1551,2.354,1557,3.336,1759,3.627,1760,2.91,1761,2.91,1772,2.744,1930,2.265,1931,4.065,1932,4.306,1933,3.627,1935,3.684,1937,4.769,1941,2.727,1949,3.103,1961,3.103,1965,2.727,1983,2.727,1987,5.61,1997,2.462,2000,1.863,2001,1.764,2004,2.599,2007,3.336,2058,3.235,2098,2.91,2119,3.103,2436,3.627,2623,4.751,2730,2.727,2901,4.017,2949,5.262,3113,6.632,3114,4.609,3115,4.609,3116,4.609,3117,6.038,3118,6.038,3119,4.609,3120,3.129,3121,4.609,3122,3.129,3123,4.017,3124,4.609,3125,3.129,3126,3.129,3127,4.609,3128,3.129,3129,3.129,3130,3.129,3131,4.609,3132,4.017,3133,3.129,3134,4.609,3135,4.609,3136,3.129,3137,3.129,3138,6.038,3139,3.129,3140,6.038,3141,4.609,3142,5.472,3143,3.129,3144,3.129,3145,3.129,3146,3.129,3147,3.129,3148,3.129]],["title/injectables/TreeService.html",[339,2.391,437,0.821]],["body/injectables/TreeService.html",[3,0.108,4,0.095,8,1.321,9,0.095,22,0.283,23,0.014,24,0.15,25,0.108,26,0.164,27,0.783,35,0.567,47,1.144,97,0.945,114,0.006,115,0.01,116,0.006,127,0.238,128,0.699,131,0.616,134,0.727,142,0.875,143,0.786,149,0.946,150,1.087,151,1.087,158,0.539,160,2.037,166,1.962,167,1.36,168,0.994,172,1.312,174,1.411,182,1.714,195,1.7,203,3.364,217,2.12,218,2.721,220,3.092,221,0.907,222,0.907,229,2.855,238,1.341,239,2.53,248,1.65,252,2.221,253,1.956,270,2.989,280,3.364,291,1.962,309,1.264,317,0.961,339,3.172,415,1.292,437,1.089,438,1.521,445,2.384,446,1.14,447,1.36,448,1.266,449,2.471,450,1.112,515,1.521,525,3.396,528,4.434,567,2.16,620,4.793,621,2.439,669,3.451,690,2.289,694,3.364,712,3.172,769,4.488,829,3.172,832,2.773,934,3.015,1004,4.193,1031,3.172,1113,3.68,1190,3.364,1551,3.68,1557,4.793,1602,4.644,1626,4.459,1748,3.172,1957,5.212,1995,3.587,2022,5.34,2024,5.772,2041,3.942,2044,2.721,2047,3.339,2052,3.587,2092,3.587,2098,3.364,2210,3.015,2623,4.193,2639,4.793,3149,3.339,3150,6.127,3151,5.328,3152,6.623,3153,6.623,3154,5.328,3155,5.328,3156,5.328,3157,5.328,3158,5.328,3159,5.328,3160,3.831,3161,3.831,3162,3.831,3163,3.831,3164,5.328,3165,3.831,3166,5.328,3167,6.961,3168,3.831,3169,5.328,3170,5.328,3171,3.831,3172,5.328,3173,5.328,3174,3.831,3175,5.328,3176,3.831,3177,5.328,3178,4.644,3179,3.831,3180,6.623,3181,3.831,3182,3.831,3183,3.831,3184,3.831,3185,6.127,3186,6.127,3187,3.831,3188,5.328,3189,3.831,3190,3.831,3191,5.328,3192,3.831,3193,3.831,3194,3.831,3195,3.831,3196,5.328,3197,3.831]],["title/components/TrialComponent.html",[0,0.041,101,0.663]],["body/components/TrialComponent.html",[0,0.064,1,0.309,2,0.438,3,0.162,4,0.046,5,0.961,6,0.369,7,0.369,8,0.625,9,0.046,11,0.198,13,0.567,14,1.224,15,0.344,16,1.428,17,1.372,18,0.587,20,0.587,22,0.28,23,0.014,24,0.073,25,0.053,26,0.08,27,0.382,28,0.404,29,0.287,30,0.608,31,0.547,32,0.309,33,0.9,34,0.369,35,0.359,36,0.369,37,0.32,38,0.608,39,0.309,40,0.776,41,0.309,42,0.369,43,0.32,44,1.135,45,0.608,46,0.32,47,0.884,48,0.723,49,1.132,50,0.309,51,0.369,52,0.32,53,0.547,54,0.369,55,0.309,56,0.369,57,0.298,58,0.309,59,0.332,60,0.32,61,0.32,62,0.574,63,0.32,64,1.071,65,0.32,66,0.369,67,0.309,68,0.776,69,0.32,70,0.528,71,0.309,72,0.309,73,0.32,74,0.369,75,0.309,76,0.369,77,0.32,78,0.369,79,0.309,80,0.32,81,0.309,82,1.16,83,0.369,84,0.32,85,0.369,86,0.309,87,0.988,88,0.32,89,0.608,90,0.32,91,0.723,92,0.528,93,0.723,94,0.309,95,0.332,96,0.309,97,0.839,98,0.32,99,0.32,100,0.309,101,0.753,102,0.309,103,0.868,104,0.369,105,0.309,106,0.309,107,0.749,108,0.332,109,0.309,110,0.369,111,0.309,112,0.357,113,0.369,114,0.003,115,0.005,116,0.003,121,1.055,122,2.239,123,0.652,124,0.776,127,0.191,128,0.404,129,2.78,130,1.324,131,0.357,133,1.106,134,0.689,136,2.207,137,1.731,142,0.778,143,0.8,149,1.102,150,0.895,151,0.895,152,1.391,154,1.912,156,2.076,157,2.428,158,0.58,170,1.914,171,0.454,173,1.269,178,1.439,179,1.142,194,1.958,195,1.83,196,1.689,219,2.687,221,0.236,222,0.236,238,0.675,242,2.506,252,0.984,271,1.019,277,1.835,281,2.076,307,1.114,309,0.753,310,1.847,311,1.553,312,1.504,313,1.998,315,2.368,316,2.564,317,1.892,318,2.428,321,3.235,324,2.79,341,2.328,347,1.114,359,0.743,364,1.574,387,0.772,396,0.956,411,1.574,415,0.953,441,1.178,450,0.967,498,1.631,511,2.231,513,1.354,562,1.738,571,3.427,572,2.687,589,2.929,601,3.094,613,2.798,614,2.798,618,2.231,621,2.207,623,1.738,624,2.876,625,1.181,635,3.539,642,1.946,644,2.907,647,1.114,655,2.426,676,3.3,679,4.305,682,1.055,690,2.33,691,2.036,693,2.443,698,1.504,727,1.652,748,1.81,752,2.846,753,1.26,754,1.26,764,2.076,765,3.332,774,3.588,780,2.112,800,0.913,834,1.354,882,1.354,886,1.689,908,1.003,928,1.055,962,1.652,965,1.503,968,0.913,969,2.751,974,1.504,975,1.504,1002,2.224,1006,1.918,1009,2.924,1010,2.217,1012,1.504,1016,2.575,1019,1.574,1020,3.094,1030,3.074,1051,3.23,1062,2.076,1068,2.702,1083,1.631,1100,2.843,1108,2.426,1116,1.473,1119,1.473,1158,1.652,1162,2.798,1163,3.059,1164,2.714,1165,2.466,1177,2.426,1178,1.003,1181,1.26,1190,1.181,1201,1.574,1202,0.956,1203,1.114,1204,1.055,1205,1.114,1206,1.135,1207,0.837,1222,1.181,1230,1.26,1240,2.231,1243,2.076,1244,1.26,1246,1.473,1250,1.354,1252,1.26,1253,1.652,1254,1.354,1282,3.3,1283,3.893,1284,3.713,1285,4.125,1293,2.008,1295,2.687,1298,1.738,1300,3.07,1309,1.918,1311,2.702,1315,1.473,1316,1.631,1317,1.835,1325,2.328,1327,2.929,1330,3.07,1331,3.3,1333,1.835,1335,1.354,1336,2.217,1337,1.114,1349,2.231,1351,2.231,1352,2.647,1354,1.631,1356,1.473,1360,2.482,1361,2.231,1363,5.086,1364,1.473,1366,1.473,1369,5.944,1370,5.837,1378,1.631,1410,1.473,1447,5.149,1451,3.588,1476,1.473,1481,1.631,1512,3.588,1513,3.425,1517,1.26,1546,2.231,1626,4.036,1637,3.974,1638,1.354,1653,1.473,1655,2.341,1657,2.231,1658,1.181,1664,1.473,1666,1.473,1676,1.354,1678,1.473,1680,1.631,1682,1.473,1685,1.473,1707,2.076,1772,2.714,1809,2.482,1845,2.687,1853,1.473,1881,1.631,1884,1.473,1889,3.3,1900,1.631,1904,2.426,1912,1.473,1916,3.059,1917,1.26,1971,3.3,1977,1.738,2004,1.738,2017,2.231,2058,1.652,2102,3.234,2173,1.26,2177,2.076,2311,5.225,2312,5.899,2376,2.647,2404,1.631,2527,3.395,2557,1.473,2564,3.3,2568,3.427,2590,3.427,2602,5.367,2633,2.687,2639,2.231,2662,3.094,2682,1.473,2688,1.631,2689,2.687,2804,2.687,2954,1.631,3015,1.473,3025,1.631,3123,3.974,3132,2.687,3198,1.631,3199,3.083,3200,3.083,3201,3.083,3202,3.083,3203,3.427,3204,3.932,3205,3.932,3206,4.559,3207,4.559,3208,4.559,3209,4.559,3210,4.559,3211,2.687,3212,5.042,3213,3.932,3214,3.932,3215,6.212,3216,3.932,3217,1.631,3218,6.212,3219,1.871,3220,1.631,3221,1.871,3222,1.871,3223,3.083,3224,4.559,3225,1.871,3226,4.559,3227,4.559,3228,1.871,3229,3.932,3230,3.083,3231,3.083,3232,2.231,3233,3.083,3234,3.083,3235,1.871,3236,3.083,3237,1.871,3238,3.083,3239,1.871,3240,3.083,3241,3.083,3242,3.094,3243,1.871,3244,1.871,3245,1.871,3246,1.871,3247,1.871,3248,1.871,3249,1.871,3250,1.871,3251,1.871,3252,1.871,3253,1.871,3254,3.083,3255,3.083,3256,1.871,3257,1.871,3258,1.871,3259,1.871,3260,1.871,3261,1.871,3262,1.871,3263,1.871,3264,1.871,3265,1.871,3266,1.871,3267,1.631,3268,1.631,3269,1.631,3270,3.083,3271,1.871,3272,1.631,3273,1.631,3274,1.871,3275,1.871,3276,1.871,3277,1.871,3278,1.871,3279,1.871,3280,3.083,3281,3.083,3282,1.871,3283,1.871,3284,1.871,3285,1.871,3286,1.871,3287,1.871,3288,1.871,3289,1.871,3290,1.871,3291,3.083,3292,1.871,3293,1.871,3294,1.871,3295,1.871,3296,1.871,3297,1.871,3298,1.871,3299,1.871,3300,1.871,3301,1.871,3302,1.871,3303,1.871,3304,1.631,3305,1.871,3306,1.871,3307,1.631,3308,1.871,3309,1.631,3310,1.871,3311,1.871,3312,2.687,3313,3.083,3314,1.871,3315,6.697,3316,1.631,3317,1.871,3318,1.871,3319,4.728,3320,5.737,3321,2.687,3322,1.871,3323,1.871,3324,1.871,3325,4.559,3326,1.871,3327,1.871,3328,1.871,3329,3.932,3330,1.871,3331,1.871,3332,7.265,3333,3.083,3334,7.193,3335,1.871,3336,3.083,3337,1.871,3338,1.871,3339,1.871,3340,1.871,3341,6.697,3342,1.871,3343,1.871,3344,1.871,3345,1.871,3346,1.871,3347,1.871,3348,1.871,3349,1.871,3350,1.871,3351,1.871,3352,1.871,3353,1.871,3354,1.871,3355,1.871,3356,1.871,3357,1.871,3358,1.871,3359,1.871,3360,1.871,3361,2.687,3362,1.871,3363,1.871,3364,1.871,3365,1.871,3366,1.871,3367,1.871,3368,1.871,3369,1.871,3370,1.871,3371,1.871,3372,1.871,3373,1.871,3374,1.871,3375,1.871,3376,1.871,3377,1.871,3378,1.871,3379,1.871,3380,3.083,3381,1.871,3382,3.083,3383,1.871,3384,3.083,3385,1.871,3386,1.871,3387,1.871,3388,1.871,3389,1.631,3390,1.871,3391,1.871]],["title/components/TrialConfigComponent.html",[0,0.041,102,0.663]],["body/components/TrialConfigComponent.html",[0,0.075,1,0.513,2,0.854,3,0.13,4,0.077,5,0.592,6,0.613,7,0.613,8,0.867,9,0.077,11,0.329,13,0.843,14,2.164,15,0.571,16,1.488,17,1.443,18,0.874,20,0.874,22,0.257,23,0.014,24,0.121,25,0.088,26,0.133,28,0.601,29,0.476,30,0.905,31,0.814,32,0.513,33,1.187,34,0.613,35,0.529,36,0.613,37,0.532,38,0.905,39,0.513,40,1.076,41,0.513,42,0.613,43,0.532,44,0.551,45,0.905,46,0.532,47,0.458,48,1.002,49,1.371,50,0.513,51,0.613,52,0.532,53,0.814,54,0.613,55,0.513,56,0.613,57,0.494,58,0.513,59,0.551,60,0.532,61,0.532,62,0.757,63,0.532,64,1.325,65,0.532,66,0.613,67,0.513,68,1.076,69,0.532,70,0.785,71,0.513,72,0.513,73,0.532,74,0.613,75,0.513,76,0.613,77,0.532,78,0.613,79,0.513,80,0.532,81,0.513,82,0.757,83,0.613,84,0.532,85,0.613,86,0.513,87,1.27,88,0.532,89,0.905,90,0.532,91,1.002,92,0.532,93,0.571,94,0.513,95,0.551,96,0.513,97,1.051,98,0.532,99,0.532,100,0.513,101,0.513,102,0.993,103,0.976,104,0.613,105,0.513,106,0.513,107,0.592,108,0.551,109,0.513,110,0.613,111,0.513,112,0.592,113,0.613,114,0.005,115,0.007,116,0.005,122,1.893,123,0.97,124,1.076,127,0.193,128,0.601,129,2.439,131,0.531,133,1.459,134,0.712,137,1.92,142,0.711,143,0.888,149,0.967,150,1.068,151,1.068,152,1.862,154,2.142,155,3.997,157,2.693,158,0.649,161,2.693,170,2.14,171,0.754,173,1.311,178,1.451,179,1.454,196,1.97,221,0.686,222,0.686,228,1.893,238,1.405,239,2.447,248,1.004,269,1.85,277,2.73,307,2.73,411,2.342,415,0.754,450,0.458,513,3.319,562,1.743,590,3.352,606,4.289,613,3.388,621,2.558,624,1.97,644,2.457,675,2.457,682,1.752,693,3.722,694,2.141,715,1.516,738,4.735,748,2.389,749,2.895,773,2.585,777,4.861,778,4.051,780,2.363,794,3.005,800,3.276,856,2.342,873,3.073,903,3.669,923,4.174,1032,3.997,1048,3.609,1068,2.457,1163,4.104,1165,2.758,1206,1.689,1207,1.39,1709,3.087,1767,3.609,1918,3.609,1949,3.087,2058,2.457,2157,3.997,2255,3.609,2425,2.708,2635,5.594,2672,4.735,2736,4.735,2952,3.997,3018,3.997,3217,2.708,3242,2.445,3307,2.708,3309,2.708,3392,5.648,3393,2.708,3394,4.586,3395,4.586,3396,4.586,3397,4.586,3398,3.997,3399,4.586,3400,3.997,3401,4.586,3402,5.45,3403,4.586,3404,6.017,3405,6.017,3406,5.45,3407,5.45,3408,5.45,3409,4.586,3410,6.017,3411,6.017,3412,4.586,3413,3.107,3414,4.586,3415,4.586,3416,4.586,3417,4.586,3418,3.107,3419,4.586,3420,4.586,3421,3.107,3422,3.997,3423,3.107,3424,3.107,3425,4.586,3426,3.107,3427,3.107,3428,3.107,3429,4.586,3430,3.107,3431,4.586,3432,3.107,3433,5.244,3434,3.107,3435,3.107,3436,3.107,3437,3.107,3438,5.45,3439,5.45,3440,3.107,3441,4.586,3442,3.107,3443,4.75,3444,5.45,3445,3.107,3446,3.107,3447,3.107,3448,4.586,3449,4.586,3450,4.586,3451,3.107,3452,4.586,3453,4.586,3454,3.107,3455,3.107,3456,3.107,3457,3.107,3458,3.107,3459,3.107,3460,3.107,3461,3.107]],["title/injectables/TrialLabelService.html",[437,0.821,1382,2.907]],["body/injectables/TrialLabelService.html",[2,0.983,3,0.162,4,0.142,9,0.142,11,0.607,22,0.318,23,0.014,24,0.224,25,0.162,26,0.245,28,0.751,35,0.545,62,0.871,70,1.393,97,0.908,103,0.836,114,0.009,115,0.011,116,0.009,127,0.356,131,0.801,134,0.637,142,0.767,149,1.229,158,0.58,166,2.847,167,2.034,168,1.487,172,1.962,174,2.55,182,2.564,221,0.871,222,0.871,238,1.254,248,1.254,291,2.55,437,1.415,438,2.275,441,2.647,446,1.705,447,2.034,448,1.893,449,2.034,450,1.098,590,3.196,598,4.371,611,3.617,618,5.012,650,2.371,1206,2.74,1382,5.012,1399,5.856,1551,3.536,2217,5.449,2269,5.449,2617,6.035,3462,4.994,3463,6.925,3464,5.73,3465,6.925,3466,5.73,3467,6.925,3468,6.925]],["title/components/TrialLandingComponent.html",[0,0.041,105,0.663]],["body/components/TrialLandingComponent.html",[0,0.072,1,0.624,2,0.749,3,0.172,4,0.094,5,1.159,6,0.746,7,0.746,8,0.968,9,0.094,11,0.401,13,0.971,14,2.416,15,0.696,16,1.506,17,1.45,18,1.006,20,1.006,22,0.26,23,0.014,24,0.148,25,0.107,26,0.162,28,0.692,29,0.579,30,1.042,31,0.937,32,0.624,33,1.3,34,0.746,35,0.518,36,0.746,37,0.647,38,1.042,39,0.624,40,1.201,41,0.624,42,0.746,43,0.647,44,1.355,45,1.042,46,0.647,47,0.558,48,1.119,49,1.454,50,0.624,51,0.746,52,0.647,53,0.937,54,0.746,55,0.624,56,0.746,57,0.602,58,0.624,59,0.937,60,0.647,61,0.647,62,0.829,63,0.647,64,1.416,65,0.647,66,0.746,67,0.624,68,1.201,69,0.647,70,0.904,71,0.624,72,0.624,73,0.647,74,0.746,75,0.624,76,0.746,77,0.647,78,0.746,79,0.624,80,0.647,81,0.624,82,0.872,83,0.746,84,0.647,85,0.746,86,0.624,87,0.84,88,0.647,89,1.042,90,0.647,91,0.971,92,0.647,93,0.696,94,0.624,95,0.671,96,0.624,97,0.692,98,0.647,99,0.647,100,0.624,101,0.624,102,0.624,103,0.971,104,0.746,105,1.087,106,0.624,107,0.721,108,0.671,109,0.624,110,0.746,111,0.624,112,0.721,113,0.746,114,0.006,115,0.008,116,0.006,127,0.235,131,0.611,134,0.486,136,1.945,137,1.685,142,0.419,143,0.558,156,3.556,158,0.383,170,2.269,171,0.917,173,1.243,194,1.624,195,2.29,196,1.624,198,2.976,199,4.767,206,4.789,207,4.156,221,0.476,222,0.476,242,2.872,271,2.011,291,1.945,294,4.789,311,1.165,312,1.845,313,2.241,315,1.561,316,2.718,317,1.738,318,3.363,324,2.416,450,0.558,562,1.798,576,4.156,579,3.921,590,2.613,675,2.83,765,3.662,773,2.978,780,2.767,794,2.363,908,2.027,995,5.74,996,5.183,1010,3.431,1012,1.845,1016,3.363,1017,3.556,1019,3.538,1030,2.83,1100,2.132,1163,3.713,1165,2.849,1206,1.393,1207,1.692,1222,4.158,1230,3.556,1231,3.822,1291,2.976,1309,2.576,1311,3.261,1325,1.931,1333,2.251,1336,2.978,1342,4.603,1361,2.737,1517,2.546,1647,2.546,1648,3.296,1655,2.251,1809,3.334,1910,3.296,1916,2.978,2145,4.603,2400,5.183,2564,3.822,2616,4.156,2671,4.156,2776,4.156,3028,3.296,3232,3.822,3304,4.603,3400,3.296,3469,4.404,3470,5.281,3471,5.281,3472,6.085,3473,5.281,3474,6.586,3475,3.782,3476,3.782,3477,5.281,3478,4.603,3479,5.281,3480,3.782,3481,3.782,3482,3.782,3483,3.782,3484,3.782,3485,5.281,3486,5.281,3487,5.281,3488,5.281,3489,5.281,3490,5.281,3491,5.281,3492,3.782,3493,3.782,3494,3.782,3495,3.782,3496,3.782,3497,3.782,3498,5.281,3499,3.782,3500,5.281,3501,3.782,3502,3.782,3503,3.782,3504,3.782,3505,3.782,3506,4.603]],["title/modules/TrialModule.html",[325,1.595,467,2.705]],["body/modules/TrialModule.html",[3,0.156,4,0.1,9,0.1,22,0.365,23,0.014,24,0.157,25,0.114,26,0.172,29,0.616,50,1.208,52,1.252,53,1.116,55,1.208,57,0.64,60,1.306,62,0.506,65,1.252,81,1.208,82,1.038,84,1.252,87,0.64,88,1.252,90,1.306,91,1.014,92,1.306,93,1.014,97,0.527,98,1.252,101,1.208,102,1.208,103,0.921,105,1.208,106,1.208,109,1.208,111,1.208,114,0.006,115,0.009,116,0.006,139,2.055,325,1.597,327,1.878,328,2.156,329,3.743,330,2.268,331,3.743,332,2.055,340,3.281,341,2.055,343,4.804,344,2.953,345,2.953,346,3.711,347,2.395,348,3.166,350,4.804,351,3.507,352,3.711,353,2.709,354,4.804,355,3.507,360,5.48,361,3.507,362,4.337,363,3.166,364,2.055,365,3.989,366,2.912,367,4.337,368,3.166,369,4.804,370,3.507,373,4.804,374,2.709,375,4.804,376,3.507,379,3.989,380,2.912,381,4.804,382,2.912,385,3.989,386,4.804,387,1.661,396,3.211,409,2.912,466,4.619,467,5.749,482,3.507,588,4.337,614,3.569,630,3.507,754,2.709,758,3.569,759,2.54,780,1.482,1090,3.166,1141,3.166,1162,3.569,1165,2.188,1202,2.815,1203,2.395,1204,3.108,1206,1.482,1207,1.8,1371,2.912,1408,2.912,1800,3.166,2656,3.166,2733,3.166,3027,3.166,3392,2.912,3433,4.804,3469,2.912,3507,3.507,3508,3.507,3509,3.507,3510,3.507,3511,4.926,3512,4.023,3513,4.023,3514,3.507,3515,4.023,3516,3.507,3517,5.512,3518,4.023,3519,6.287,3520,4.023,3521,5.512,3522,4.023,3523,5.512,3524,4.023,3525,5.512,3526,4.023,3527,4.023,3528,3.507,3529,4.023,3530,2.912,3531,3.507,3532,4.804,3533,3.507,3534,4.023,3535,4.023,3536,4.804,3537,3.507,3538,4.804,3539,3.507]],["title/modules/TrialRoutingModule.html",[325,1.595,3511,2.705]],["body/modules/TrialRoutingModule.html",[0,0.085,3,0.155,4,0.136,9,0.136,22,0.356,23,0.014,24,0.214,25,0.155,26,0.234,44,0.973,53,0.973,55,1.113,81,1.113,82,0.905,97,0.719,101,1.113,102,1.205,103,0.919,105,1.113,106,1.113,114,0.009,115,0.011,116,0.009,171,1.33,299,3.969,327,2.56,332,2.8,344,2.938,345,3.612,409,3.969,410,4.316,411,3.728,412,4.256,415,1.33,416,5.239,422,3.462,436,3.969,485,4.78,569,3.969,588,5.305,590,2.355,635,2.8,698,2.675,780,2.019,1165,2.676,1202,2.8,1206,2.019,1207,2.454,1371,3.969,1809,3.462,3392,3.969,3469,3.969,3511,4.539,3514,4.78,3516,4.78,3528,4.78,3530,3.969,3531,4.78,3532,5.876,3533,4.78,3536,5.876,3537,4.78,3538,5.876,3539,4.78,3540,5.484,3541,5.484,3542,5.484,3543,5.484,3544,5.484,3545,5.484,3546,5.484,3547,5.484]],["title/components/TrialShopComponent.html",[0,0.041,106,0.663]],["body/components/TrialShopComponent.html",[0,0.077,1,0.579,2,0.711,3,0.141,4,0.087,5,1.113,6,0.692,7,0.692,8,0.929,9,0.087,11,0.372,13,0.921,15,0.645,16,1.499,17,1.448,18,0.954,20,0.954,22,0.15,23,0.014,24,0.137,25,0.099,26,0.15,28,0.766,29,0.537,30,0.988,31,0.889,32,0.964,33,1.257,34,0.692,35,0.501,36,0.692,37,0.6,38,0.988,39,0.579,40,1.152,41,0.579,42,0.692,43,0.6,44,1.332,45,0.988,46,0.6,47,1.063,48,1.074,49,1.423,50,0.579,51,0.692,52,0.6,53,0.889,54,0.692,55,0.579,56,0.692,57,0.558,58,0.579,59,0.623,60,0.6,61,0.6,62,0.802,63,0.6,64,1.382,65,0.6,66,0.692,67,0.579,68,1.152,69,0.6,70,0.857,71,0.579,72,0.579,73,0.6,74,0.692,75,0.579,76,0.692,77,0.6,78,0.692,79,0.579,80,0.6,81,0.579,82,0.827,83,0.692,84,0.6,85,0.692,86,0.579,87,0.797,88,0.6,89,0.988,90,0.6,91,0.921,92,0.6,93,0.645,94,0.579,95,0.623,96,0.579,97,0.656,98,0.6,99,0.6,100,0.579,101,0.579,102,0.579,103,0.939,104,0.692,105,0.579,106,1.051,107,1.283,108,0.623,109,0.579,110,0.692,111,0.579,112,0.668,113,0.692,114,0.006,115,0.008,116,0.006,124,0.692,127,0.363,128,0.656,131,0.579,134,0.678,142,0.647,143,0.861,149,0.889,150,0.889,151,0.889,152,1.416,158,0.591,179,0.795,195,2.457,196,1.506,200,4.364,221,0.441,222,0.441,242,2.909,310,2.271,311,1.799,313,1.292,314,2.76,315,1.448,316,2.067,317,2.017,318,3.134,321,2.973,324,2.318,543,3.941,562,1.516,590,3.222,621,2.345,623,4.065,650,1.201,691,1.778,753,2.362,765,3.655,780,2.714,908,1.879,965,1.341,967,1.879,968,1.711,1002,3.417,1006,1.711,1009,3.286,1016,1.791,1019,3.44,1020,4.596,1027,2.76,1092,6.061,1094,4.364,1100,3.591,1108,3.941,1113,2.557,1119,2.76,1134,3.941,1174,3.624,1283,1.879,1284,2.683,1293,1.791,1311,1.879,1317,2.088,1327,1.791,1330,3.371,1333,2.088,1337,2.088,1352,2.362,1360,2.214,1489,3.057,1509,3.941,1513,2.214,1517,3.371,1638,3.624,1641,2.362,1643,4.364,1645,2.539,1647,2.362,1655,2.088,1664,2.76,1666,2.76,1678,2.76,1682,2.76,1685,2.76,1707,3.371,1827,4.364,1884,2.76,1912,2.76,1916,3.293,1917,2.362,2092,3.371,2312,2.76,2726,2.76,3203,5.09,3211,4.364,3220,3.057,3242,4.596,3267,3.057,3268,3.057,3269,3.057,3312,4.364,3316,3.057,3319,4.364,3321,3.057,3361,3.057,3389,3.057,3530,5.43,3548,3.057,3549,5.008,3550,5.008,3551,5.008,3552,5.84,3553,5.84,3554,6.369,3555,6.369,3556,5.008,3557,3.508,3558,3.508,3559,5.008,3560,3.508,3561,3.508,3562,3.508,3563,3.508,3564,3.508,3565,3.508,3566,3.508,3567,5.008,3568,3.508,3569,3.508,3570,3.508,3571,3.508,3572,5.84,3573,5.008,3574,3.508,3575,3.508,3576,3.508,3577,3.508,3578,3.508,3579,3.508,3580,3.508,3581,5.008,3582,3.508,3583,3.508,3584,3.508]],["title/injectables/TrialSubjectService.html",[437,0.821,613,1.959]],["body/injectables/TrialSubjectService.html",[2,0.846,3,0.128,4,0.112,9,0.112,11,0.631,14,1.794,22,0.303,23,0.014,24,0.176,25,0.128,26,0.193,28,0.781,35,0.58,87,1.282,103,0.945,114,0.007,115,0.009,116,0.007,127,0.28,128,0.781,131,0.689,134,0.71,142,0.878,143,0.666,149,1.258,150,0.802,151,0.802,152,1.719,154,1.901,158,0.675,166,2.61,167,1.604,168,1.173,173,0.923,174,2.194,179,1.51,180,1.969,182,2.022,221,0.892,222,0.892,238,1.613,239,2.721,248,1.552,252,1.441,253,2.307,266,4.012,280,2.782,281,4.012,291,2.194,307,3.547,309,0.746,437,1.218,438,1.794,441,2.278,446,1.345,447,1.604,448,1.493,449,2.367,450,0.983,507,1.969,511,5.131,515,1.794,525,2.204,528,3.27,567,2.547,590,3.364,598,3.762,611,2.852,613,2.907,642,4.871,644,3.193,650,2.04,671,4.689,676,4.313,691,2.115,693,4.32,694,3.44,714,3.27,735,3.27,778,4.012,787,2.421,873,3.043,1051,4.22,1174,4.313,1206,2.884,1769,3.762,1949,4.012,2058,3.799,2202,4.012,2228,5.131,2251,5.194,3178,5.194,3272,3.938,3443,5.811,3585,3.938,3586,5.194,3587,5.959,3588,5.959,3589,7.089,3590,5.959,3591,5.959,3592,5.959,3593,4.518,3594,6.179,3595,5.959,3596,4.518,3597,4.518,3598,5.194,3599,5.959,3600,4.518,3601,4.518,3602,5.959,3603,4.518,3604,3.938,3605,4.518,3606,4.518,3607,4.518,3608,5.959,3609,4.518,3610,4.518,3611,4.518,3612,4.518]],["title/guards/TrialTreatmentService.html",[488,2.536,1165,1.595]],["body/guards/TrialTreatmentService.html",[2,0.754,3,0.108,4,0.094,9,0.094,11,0.404,14,2.108,22,0.322,23,0.014,24,0.149,25,0.108,26,0.163,28,0.696,35,0.566,62,0.668,82,0.629,97,1.043,103,0.798,107,1.012,114,0.006,115,0.008,116,0.006,123,0.806,127,0.33,128,0.5,130,2.281,131,0.614,134,0.72,142,0.9,143,0.901,147,4.628,149,1.389,158,0.537,161,2.376,166,2.433,167,1.353,168,0.989,170,1.636,171,0.924,173,1.35,174,1.955,179,0.863,180,1.26,182,1.706,199,3.843,220,3.085,221,0.906,222,0.906,238,1.616,239,2.439,248,1.575,252,1.949,253,2.712,280,2.479,281,3.575,309,0.876,422,4.172,437,1.085,441,2.029,446,1.134,447,1.353,448,1.26,449,2.467,450,1.165,489,2.566,496,6.056,507,1.755,511,4.783,515,1.513,519,3.161,525,2.59,528,3.843,559,4.179,562,1.378,590,3.391,598,3.352,611,2.406,614,3.601,642,3.352,650,1.305,673,3.322,683,3.322,685,2.406,691,2.169,693,3.541,694,3.616,698,1.859,731,3.575,735,2.759,758,3.601,779,3,780,1.955,794,2.376,802,2.994,873,2.712,1030,2.845,1051,3.934,1068,2.845,1076,4.179,1162,3.601,1165,2.108,1202,1.947,1203,2.269,1206,2.908,1222,2.406,1417,2.269,1447,3.843,1694,4.628,1809,3.352,1889,3.843,2017,3.843,2058,2.845,2217,4.179,2228,4.783,2230,4.179,2400,4.179,2636,4.809,2662,3,2682,5.201,2736,5.201,2759,3.322,2842,5.76,3086,4.628,3232,3.843,3273,3.322,3398,4.628,3422,6.056,3478,4.628,3586,4.628,3598,4.628,3604,4.628,3613,3.322,3614,5.31,3615,6.609,3616,6.609,3617,5.31,3618,6.609,3619,5.31,3620,5.31,3621,5.31,3622,3.812,3623,3.812,3624,3.812,3625,3.812,3626,5.31,3627,5.31,3628,3.812,3629,5.31,3630,3.812,3631,3.812,3632,5.31,3633,5.31,3634,3.812,3635,5.31,3636,3.812,3637,5.31,3638,5.31,3639,5.31,3640,5.31,3641,3.812,3642,5.31,3643,6.609,3644,3.812,3645,5.31,3646,3.812,3647,3.812,3648,3.812,3649,6.111,3650,3.812,3651,3.812,3652,3.812,3653,3.812,3654,3.812,3655,3.812,3656,3.812,3657,3.812,3658,3.812,3659,5.31,3660,3.812,3661,3.812,3662,3.812,3663,3.812]],["title/coverage.html",[3664,4.799]],["body/coverage.html",[0,0.088,1,0.685,9,0.103,10,3.618,23,0.014,32,0.929,37,0.711,39,0.685,41,0.685,43,0.711,46,0.711,48,1.358,50,0.685,52,0.711,55,0.685,57,0.66,58,0.685,60,0.711,61,0.711,63,0.711,65,0.711,67,0.685,69,0.711,71,0.685,72,0.685,73,0.711,75,0.685,77,0.711,79,0.685,81,0.685,84,0.711,86,0.685,88,0.711,90,0.711,92,0.711,93,1.036,94,0.685,96,0.685,98,0.711,99,0.711,100,0.685,101,0.685,102,0.685,105,0.685,106,0.685,109,0.685,111,0.685,114,0.007,115,0.009,116,0.007,117,4.075,118,3.267,119,3.618,158,0.42,160,1.587,163,3.004,168,1.077,197,3.004,198,4.431,217,1.077,237,2.12,246,2.025,309,0.685,311,2.554,317,1.895,338,2.34,339,2.471,383,3.267,388,3.004,390,2.795,395,2.62,397,3.004,398,3.267,400,3.004,401,3.004,402,3.004,403,3.004,404,3.004,405,3.004,406,3.267,407,3.004,413,3.004,437,1.665,439,3.618,440,3.618,451,3.618,458,2.471,488,4.325,490,3.618,501,3.076,541,3.618,552,2.34,557,2.34,568,3.267,569,3.004,570,3.618,589,2.12,590,3.414,591,3.618,613,2.025,614,2.025,741,3.004,743,4.431,758,2.025,884,3.618,885,4.259,1028,3.618,1090,3.267,1091,3.618,1140,4.624,1141,3.267,1142,3.618,1162,2.025,1165,1.648,1202,2.875,1204,3.174,1206,2.353,1253,3.671,1365,3.267,1371,3.004,1372,3.618,1382,3.004,1408,3.004,1500,3.618,1518,3.004,1532,2.62,1645,3.004,1693,3.618,1706,3.618,1735,5.028,1799,3.618,1800,3.267,1801,3.618,1814,3.004,1862,3.267,1930,4.624,2015,3.618,2016,3.618,2021,3.618,2053,4.431,2064,2.795,2071,4.972,2121,3.618,2144,3.618,2159,3.618,2174,2.471,2195,4.613,2205,2.471,2208,3.618,2215,3.618,2338,4.431,2350,3.267,2399,3.618,2435,3.618,2457,3.004,2481,3.618,2491,3.618,2509,4.624,2510,3.618,2567,3.618,2620,3.618,2656,3.267,2657,3.618,2726,5.028,2727,3.618,2732,3.618,2733,3.267,2734,4.431,2802,4.431,2884,3.618,2897,3.004,2915,3.618,2928,3.618,3026,3.618,3027,3.267,3045,3.618,3113,4.907,3149,3.618,3198,3.618,3392,3.004,3393,3.618,3462,3.618,3469,3.004,3530,3.004,3548,3.618,3585,3.618,3613,3.618,3664,3.618,3665,4.151,3666,4.151,3667,5.631,3668,5.631,3669,4.151,3670,6.39,3671,4.151,3672,4.151,3673,4.151,3674,4.151,3675,4.151,3676,4.151,3677,6.39,3678,6.39,3679,5.631,3680,6.39,3681,5.631,3682,5.631,3683,5.631,3684,5.631,3685,4.151,3686,4.151,3687,4.151,3688,5.631,3689,5.631,3690,4.151,3691,4.151,3692,4.151,3693,6.39,3694,5.631,3695,6.39,3696,4.151,3697,4.151,3698,4.151,3699,5.631,3700,4.151,3701,4.151,3702,4.151,3703,4.151,3704,4.151,3705,4.151,3706,4.151,3707,6.851,3708,6.39,3709,4.151,3710,4.151,3711,4.151,3712,4.151,3713,4.151,3714,4.151,3715,4.151,3716,4.151,3717,4.151,3718,4.151,3719,4.151,3720,4.151,3721,4.151,3722,6.39,3723,4.151,3724,4.151,3725,4.151,3726,4.151,3727,4.151,3728,4.151,3729,4.151,3730,4.151,3731,4.151,3732,4.151,3733,3.618,3734,4.151]],["title/dependencies.html",[328,2.592,3735,3.343]],["body/dependencies.html",[23,0.014,24,0.239,114,0.01,115,0.011,116,0.01,171,1.488,296,5.348,328,3.288,330,3.46,347,3.653,387,2.533,470,6.287,471,5.221,515,2.436,3736,6.137,3737,8.307,3738,6.137,3739,7.213,3740,6.137,3741,6.137,3742,6.137,3743,6.137,3744,6.137,3745,6.137,3746,6.137,3747,6.137,3748,6.137,3749,6.137,3750,6.137,3751,6.137,3752,6.137,3753,6.137,3754,6.137,3755,6.137,3756,6.137,3757,6.137,3758,6.137,3759,6.137,3760,6.137,3761,6.137,3762,6.137,3763,6.137,3764,6.137,3765,6.137]],["title/miscellaneous/functions.html",[3766,2.42,3767,4.216]],["body/miscellaneous/functions.html",[23,0.012,35,0.517,114,0.01,115,0.012,116,0.01,127,0.408,221,0.827,222,0.827,1213,5.172,2338,5.172,2350,5.907,2370,5.729,3766,4.757,3767,5.729,3768,6.573]],["title/index.html",[127,0.208,675,1.791,2035,1.99]],["body/index.html",[0,0.078,4,0.148,17,1.026,23,0.011,35,0.472,44,1.393,114,0.009,115,0.011,116,0.009,139,3.06,275,4.277,295,6.305,307,3.567,309,0.989,643,3.783,777,4.337,778,4.035,876,4.035,1062,4.035,1096,5.223,1508,3.783,1558,6.982,1574,5.223,2805,5.223,3015,4.716,3232,4.337,3594,5.223,3769,5.993,3770,7.113,3771,7.586,3772,7.586,3773,5.993,3774,5.993,3775,5.993,3776,7.113,3777,8.209,3778,5.993,3779,5.223,3780,5.993,3781,5.993,3782,7.586,3783,5.993,3784,5.993,3785,5.993,3786,5.993,3787,5.993,3788,5.223,3789,7.113,3790,7.113,3791,7.846,3792,7.113,3793,7.113,3794,5.993,3795,5.993,3796,5.993,3797,7.586,3798,5.993,3799,5.993]],["title/modules.html",[327,2.57]],["body/modules.html",[23,0.012,114,0.01,115,0.012,116,0.01,326,4.268,327,2.959,337,4.268,460,4.588,465,4.268,466,4.002,467,4.268,471,5.954,532,4.588,584,4.588,1080,5.62,3511,4.268,3800,8.227,3801,8.227,3802,8.394,3803,7.765]],["title/overview.html",[3804,4.799]],["body/overview.html",[1,1.094,2,0.633,23,0.014,29,0.684,37,1.134,39,1.094,41,1.27,43,1.134,46,1.134,50,1.094,52,1.134,55,1.094,57,1.224,58,1.27,60,1.134,61,1.134,63,1.134,65,1.134,67,1.094,69,1.134,71,1.094,72,1.094,73,1.317,75,1.094,77,1.317,79,1.094,81,1.094,84,1.134,86,1.094,88,1.134,90,1.134,92,1.134,94,1.094,96,1.094,98,1.134,99,1.134,100,1.094,101,1.094,102,1.094,105,1.094,106,1.094,108,0.792,109,1.094,111,1.094,114,0.007,115,0.009,116,0.007,139,2.279,325,1.771,326,5.748,327,2.083,328,2.391,329,2.656,330,2.516,331,2.656,332,2.279,333,3.889,334,3.889,335,3.889,336,3.889,337,4.461,338,3.736,339,3.945,340,3.518,341,2.279,411,2.279,438,1.771,460,5.993,461,3.889,462,3.889,463,3.889,464,3.889,465,4.461,466,5.113,467,5.772,489,3.004,532,5.653,533,3.889,534,3.889,535,3.889,584,5.105,585,3.889,586,3.889,614,3.232,742,2.817,758,3.232,1162,3.232,1532,4.183,1852,3.889,1916,2.516,2504,3.889,2505,3.889,2506,3.889,2507,3.889,3506,3.889,3507,3.889,3508,3.889,3509,3.889,3510,3.889,3511,4.461,3804,3.889,3805,4.462,3806,4.462,3807,4.462,3808,4.462]],["title/routes.html",[411,2.812]],["body/routes.html",[23,0.012,114,0.011,115,0.012,116,0.011,411,3.407]],["title/miscellaneous/variables.html",[3766,2.42,3809,4.216]],["body/miscellaneous/variables.html",[23,0.013,27,1.288,59,1.119,114,0.01,115,0.012,116,0.01,127,0.391,134,0.58,150,1.119,151,1.3,152,1.528,158,0.638,160,2.409,168,2.011,180,2.083,507,2.083,513,4.561,562,1.636,650,2.158,965,2.8,1526,5.493,1531,4.96,1551,3.218,2671,4.96,3733,5.493,3766,4.561,3779,5.493,3788,5.493,3809,5.493,3810,6.303,3811,6.303,3812,6.303,3813,6.303,3814,6.303,3815,7.327,3816,6.303,3817,6.303,3818,6.303,3819,6.303]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":317,"title":{},"body":{"components/AdminLandingComponent.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/ProductService.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{}}}],["0.0.1",{"_index":3747,"title":{},"body":{"dependencies.html":{}}}],["0.02",{"_index":3388,"title":{},"body":{"components/TrialComponent.html":{}}}],["0.12",{"_index":3321,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["0.14",{"_index":3580,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["0.1px",{"_index":1345,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ImageDialogComponent.html":{}}}],["0.1s",{"_index":3373,"title":{},"body":{"components/TrialComponent.html":{}}}],["0.2",{"_index":3389,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["0.26",{"_index":3385,"title":{},"body":{"components/TrialComponent.html":{}}}],["0.2s",{"_index":3370,"title":{},"body":{"components/TrialComponent.html":{}}}],["0.3",{"_index":1023,"title":{},"body":{"components/FilterComponent.html":{}}}],["0.3s",{"_index":3367,"title":{},"body":{"components/TrialComponent.html":{}}}],["0.4s",{"_index":3364,"title":{},"body":{"components/TrialComponent.html":{}}}],["0.5rem",{"_index":1477,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["0.5s",{"_index":3361,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["0.6em",{"_index":2566,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["0.6s",{"_index":3359,"title":{},"body":{"components/TrialComponent.html":{}}}],["0.75rem",{"_index":1346,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["0.7s",{"_index":3356,"title":{},"body":{"components/TrialComponent.html":{}}}],["0.875rem",{"_index":1313,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["0.8s",{"_index":3353,"title":{},"body":{"components/TrialComponent.html":{}}}],["0.9.1",{"_index":3765,"title":{},"body":{"dependencies.html":{}}}],["0.95rem",{"_index":3324,"title":{},"body":{"components/TrialComponent.html":{}}}],["0.97",{"_index":3390,"title":{},"body":{"components/TrialComponent.html":{}}}],["0.9rem",{"_index":1484,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["0.9s",{"_index":3350,"title":{},"body":{"components/TrialComponent.html":{}}}],["0/1",{"_index":3699,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3702,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3687,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3698,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3713,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3697,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1653,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialComponent.html":{}}}],["00ff00",{"_index":1358,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["0px",{"_index":1134,"title":{},"body":{"directives/FixedNavDirective.html":{},"components/HeaderComponent.html":{},"components/TrialShopComponent.html":{}}}],["0s",{"_index":3376,"title":{},"body":{"components/TrialComponent.html":{}}}],["1",{"_index":195,"title":{},"body":{"components/AdminHeaderComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"injectables/ProductService.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/SwapDialogComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["1${this.product.content.displayamount",{"_index":1218,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["1.0.1",{"_index":3758,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":3761,"title":{},"body":{"dependencies.html":{}}}],["1.11",{"_index":1319,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["1.125rem",{"_index":1318,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["1.1s",{"_index":3344,"title":{},"body":{"components/TrialComponent.html":{}}}],["1.25fr",{"_index":3570,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["1.2rem",{"_index":2562,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["1.2s",{"_index":3337,"title":{},"body":{"components/TrialComponent.html":{}}}],["1.33",{"_index":1328,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["1.5",{"_index":3504,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["1.5em",{"_index":3501,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["1.5fr",{"_index":2554,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["1.5rem",{"_index":1481,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{}}}],["1.9.1",{"_index":3763,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":3670,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3694,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3704,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":3720,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1222,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ItemGridComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["10/11",{"_index":3725,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":3689,"title":{},"body":{"coverage.html":{}}}],["10/14",{"_index":3724,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":311,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{}}}],["100${this.product.content.displayamount",{"_index":1221,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["1000).tofixed(0",{"_index":1216,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["100px",{"_index":966,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreeManageComponent.html":{}}}],["101",{"_index":3582,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["102px",{"_index":2560,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["10fr",{"_index":3494,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["10px",{"_index":1333,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["11",{"_index":2801,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["11/14",{"_index":3729,"title":{},"body":{"coverage.html":{}}}],["1105px",{"_index":1922,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["12",{"_index":3719,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":3677,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":3679,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":3691,"title":{},"body":{"coverage.html":{}}}],["12/15",{"_index":3722,"title":{},"body":{"coverage.html":{}}}],["12/16",{"_index":3706,"title":{},"body":{"coverage.html":{}}}],["123",{"_index":1021,"title":{},"body":{"components/FilterComponent.html":{}}}],["126",{"_index":1368,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["128",{"_index":1128,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["128px",{"_index":1098,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["12px",{"_index":1324,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["1320px",{"_index":1924,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["13px",{"_index":1515,"title":{},"body":{"components/HeaderComponent.html":{}}}],["14/15",{"_index":3674,"title":{},"body":{"coverage.html":{}}}],["14/17",{"_index":3701,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":1312,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["15",{"_index":3807,"title":{},"body":{"overview.html":{}}}],["15/17",{"_index":3712,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":2557,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{}}}],["152px",{"_index":1292,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["1535px",{"_index":1926,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["155px",{"_index":2556,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["15px",{"_index":315,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["16/16",{"_index":3703,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1290,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{}}}],["17/18",{"_index":3686,"title":{},"body":{"coverage.html":{}}}],["172px",{"_index":1297,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["1750px",{"_index":1928,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["18",{"_index":3671,"title":{},"body":{"coverage.html":{}}}],["18/20",{"_index":3676,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":1317,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["1em",{"_index":3503,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["1fr",{"_index":1657,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{}}}],["1px",{"_index":1284,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["1rem",{"_index":1476,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/TrialComponent.html":{}}}],["1s",{"_index":3347,"title":{},"body":{"components/TrialComponent.html":{}}}],["2",{"_index":1916,"title":{},"body":{"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":3750,"title":{},"body":{"dependencies.html":{}}}],["2.6.11",{"_index":3745,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":3680,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":3708,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1853,"title":{},"body":{"components/ItemGridComponent.html":{},"components/RegisterComponent.html":{},"components/TrialComponent.html":{}}}],["200px",{"_index":1332,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/SubjectSelectComponent.html":{}}}],["20px",{"_index":1316,"title":{},"body":{"components/FoodCardComponent.html":{},"components/TrialComponent.html":{}}}],["210px",{"_index":3492,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["225px",{"_index":2800,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["244px",{"_index":1288,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["248px",{"_index":1552,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["24px",{"_index":1300,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"directives/ScoreDirective.html":{},"components/TrialComponent.html":{}}}],["25",{"_index":1365,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ItemManageComponent.html":{},"coverage.html":{}}}],["25/27",{"_index":3692,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":1647,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["255",{"_index":1022,"title":{},"body":{"components/FilterComponent.html":{}}}],["25px",{"_index":314,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialShopComponent.html":{}}}],["262px",{"_index":3575,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["280ms",{"_index":1683,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["285f86",{"_index":1310,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["2fr",{"_index":3314,"title":{},"body":{"components/TrialComponent.html":{}}}],["2px",{"_index":1366,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{}}}],["3",{"_index":2564,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["3.0.1",{"_index":3756,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":3752,"title":{},"body":{"dependencies.html":{}}}],["3/16",{"_index":3672,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":3695,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":3727,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":3721,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":3731,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":3732,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":3025,"title":{},"body":{"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["32px",{"_index":1296,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["33",{"_index":3693,"title":{},"body":{"coverage.html":{}}}],["34px",{"_index":1014,"title":{},"body":{"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["35",{"_index":2799,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["350px",{"_index":1915,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["35px",{"_index":1340,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["36",{"_index":3808,"title":{},"body":{"overview.html":{}}}],["36px",{"_index":1337,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["375px",{"_index":1692,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["37px",{"_index":3340,"title":{},"body":{"components/TrialComponent.html":{}}}],["38",{"_index":3806,"title":{},"body":{"overview.html":{}}}],["39px",{"_index":1321,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["3f51b5",{"_index":1489,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/TrialShopComponent.html":{}}}],["3fr",{"_index":3317,"title":{},"body":{"components/TrialComponent.html":{}}}],["3px",{"_index":1685,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["4",{"_index":3506,"title":{},"body":{"components/TrialLandingComponent.html":{},"overview.html":{}}}],["4.4.1",{"_index":3742,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3684,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":3696,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":3711,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1342,"title":{},"body":{"components/FoodCardComponent.html":{},"components/TrialLandingComponent.html":{}}}],["400px",{"_index":3493,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["40px",{"_index":1330,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["416px",{"_index":1287,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["42",{"_index":3730,"title":{},"body":{"coverage.html":{}}}],["420px",{"_index":3044,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["45",{"_index":3714,"title":{},"body":{"coverage.html":{}}}],["450px",{"_index":2798,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["45px",{"_index":2561,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["48px",{"_index":1910,"title":{},"body":{"components/ItemGridComponent.html":{},"components/TrialLandingComponent.html":{}}}],["49px",{"_index":3329,"title":{},"body":{"components/TrialComponent.html":{}}}],["4a4a4a",{"_index":1320,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["4fr",{"_index":2553,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["4px",{"_index":1361,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["4s",{"_index":1679,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["5",{"_index":1852,"title":{},"body":{"components/ItemGridComponent.html":{},"overview.html":{}}}],["5/11",{"_index":3715,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":3667,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1645,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{}}}],["500",{"_index":1308,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["5000000",{"_index":3817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500px",{"_index":2559,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["50px",{"_index":3319,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["51px",{"_index":3327,"title":{},"body":{"components/TrialComponent.html":{}}}],["52",{"_index":3709,"title":{},"body":{"coverage.html":{}}}],["520",{"_index":3312,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["520px",{"_index":3316,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["53/53",{"_index":3675,"title":{},"body":{"coverage.html":{}}}],["5mb",{"_index":3819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":1513,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["6",{"_index":320,"title":{},"body":{"components/AdminLandingComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["6.5.3",{"_index":3759,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":3683,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":3726,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":3583,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["64px",{"_index":1315,"title":{},"body":{"components/FoodCardComponent.html":{},"components/HeaderComponent.html":{},"components/TrialComponent.html":{}}}],["66",{"_index":3707,"title":{},"body":{"coverage.html":{}}}],["675px",{"_index":1919,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["68",{"_index":3380,"title":{},"body":{"components/TrialComponent.html":{}}}],["6fr",{"_index":3571,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["6px",{"_index":1912,"title":{},"body":{"components/ItemGridComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["7",{"_index":3572,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["7.3.1",{"_index":3774,"title":{},"body":{"index.html":{}}}],["7/10",{"_index":3718,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":3682,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":3717,"title":{},"body":{"coverage.html":{}}}],["70px",{"_index":3383,"title":{},"body":{"components/TrialComponent.html":{}}}],["71",{"_index":3723,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":3705,"title":{},"body":{"coverage.html":{}}}],["75px",{"_index":1353,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["75vh",{"_index":1025,"title":{},"body":{"components/FilterComponent.html":{}}}],["78",{"_index":3728,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":3579,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["8.2.14",{"_index":3737,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":3739,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":3669,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1253,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"coverage.html":{}}}],["80px",{"_index":3336,"title":{},"body":{"components/TrialComponent.html":{}}}],["80vh",{"_index":1265,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["82",{"_index":3700,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":3688,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":3690,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":3681,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":3668,"title":{},"body":{"coverage.html":{}}}],["88px",{"_index":1675,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["890px",{"_index":1921,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["8px",{"_index":1291,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/TrialLandingComponent.html":{}}}],["9",{"_index":3805,"title":{},"body":{"overview.html":{}}}],["9/10",{"_index":3716,"title":{},"body":{"coverage.html":{}}}],["9/17",{"_index":3710,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2726,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{}}}],["900px",{"_index":2552,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["90px",{"_index":1914,"title":{},"body":{"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["90vh",{"_index":2981,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["92",{"_index":3678,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":3673,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":3685,"title":{},"body":{"coverage.html":{}}}],["9776",{"_index":3569,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["98px",{"_index":3331,"title":{},"body":{"components/TrialComponent.html":{}}}],["9b9b9b",{"_index":1480,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["_",{"_index":853,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["_data.json",{"_index":261,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["_event",{"_index":1588,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["_event.loaded",{"_index":1589,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["_getnavinfo",{"_index":1038,"title":{},"body":{"injectables/FilterService.html":{}}}],["_id",{"_index":1961,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["_models/user.model",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["_setnavinfo",{"_index":1039,"title":{},"body":{"injectables/FilterService.html":{}}}],["_setnavinfo(info",{"_index":1049,"title":{},"body":{"injectables/FilterService.html":{}}}],["a.netprice",{"_index":1902,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["a.niceness",{"_index":1885,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["a.pointer",{"_index":1000,"title":{},"body":{"components/FilterComponent.html":{}}}],["a20900",{"_index":1661,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["a:hover",{"_index":1001,"title":{},"body":{"components/FilterComponent.html":{},"components/HeaderComponent.html":{}}}],["a:not([href]):not([tabindex",{"_index":2194,"title":{},"body":{"components/LoginComponent.html":{}}}],["absenden",{"_index":2188,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["absolute",{"_index":1352,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["absteigend",{"_index":1843,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["access",{"_index":201,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["accessors",{"_index":1158,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ItemManageComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialComponent.html":{}}}],["accordingly",{"_index":3233,"title":{},"body":{"components/TrialComponent.html":{}}}],["action",{"_index":861,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{}}}],["actions",{"_index":640,"title":{},"body":{"injectables/EventsService.html":{}}}],["activate",{"_index":508,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activated",{"_index":2839,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["activatedroute",{"_index":1163,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemManageComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{}}}],["activatedroutesnapshot",{"_index":496,"title":{},"body":{"guards/AuthGuard.html":{},"guards/TrialTreatmentService.html":{}}}],["actual_component",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["add",{"_index":1147,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["add/image",{"_index":1703,"title":{},"body":{"injectables/ImageService.html":{}}}],["added",{"_index":2603,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/TreatmentCreateComponent.html":{}}}],["addfilter",{"_index":2932,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["addfiltertotreatment",{"_index":3047,"title":{},"body":{"guards/TreatmentService.html":{}}}],["addfiltertotreatment(id",{"_index":3061,"title":{},"body":{"guards/TreatmentService.html":{}}}],["addimage",{"_index":1938,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{}}}],["addimage(element",{"_index":2081,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["addimage(item",{"_index":1942,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["adding",{"_index":1534,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/TaxCreateComponent.html":{},"guards/TreatmentService.html":{}}}],["additems",{"_index":2933,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["additemstotreatment",{"_index":3048,"title":{},"body":{"guards/TreatmentService.html":{}}}],["additemstotreatment(id",{"_index":3064,"title":{},"body":{"guards/TreatmentService.html":{}}}],["additemtocart",{"_index":2569,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["additemtocart(item",{"_index":2579,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addition",{"_index":1736,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"injectables/ShoppingCartService.html":{},"components/TreatmentCreateComponent.html":{}}}],["additional",{"_index":290,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/InfoDialogComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["additionally",{"_index":283,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["addtocart",{"_index":1148,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["admin",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["admin'},{'name",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["admin.component",{"_index":349,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.html",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.scss",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin.module",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["admincomponent",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminheadercomponent",{"_index":37,"title":{"components/AdminHeaderComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administration",{"_index":185,"title":{},"body":{"components/AdminHeaderComponent.html":{},"guards/AuthGuard.html":{},"components/ItemManageComponent.html":{},"components/LandingComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["adminlandingcomponent",{"_index":39,"title":{"components/AdminLandingComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminmodule",{"_index":326,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":337,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adminuserservice",{"_index":163,"title":{"injectables/AdminUserService.html":{}},"body":{"components/AdminHeaderComponent.html":{},"injectables/AdminUserService.html":{},"coverage.html":{}}}],["aftercontentchecked",{"_index":3266,"title":{},"body":{"components/TrialComponent.html":{}}}],["afterviewinit",{"_index":752,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{}}}],["aktion",{"_index":2154,"title":{},"body":{"components/LandingComponent.html":{}}}],["alert",{"_index":1659,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{}}}],["align",{"_index":1325,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["alle",{"_index":995,"title":{},"body":{"components/FilterComponent.html":{},"components/TrialLandingComponent.html":{}}}],["allergene",{"_index":1456,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["alles",{"_index":2731,"title":{},"body":{"components/SubjectManageComponent.html":{}}}],["allitems').subscribe",{"_index":2284,"title":{},"body":{"injectables/ProductService.html":{}}}],["allitems').subscribe((val",{"_index":2275,"title":{},"body":{"injectables/ProductService.html":{}}}],["allocate",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{}}}],["allocated",{"_index":2007,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{}}}],["allocation",{"_index":3114,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["already",{"_index":644,"title":{},"body":{"injectables/EventsService.html":{},"components/LabelAllocateDialogComponent.html":{},"injectables/ProductService.html":{},"injectables/ShoppingCartService.html":{},"components/SubjectSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["als",{"_index":2396,"title":{},"body":{"components/RegisterComponent.html":{}}}],["always",{"_index":3004,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["amount",{"_index":1178,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/InfoDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["amounts",{"_index":287,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["angelegt",{"_index":2789,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["angular",{"_index":3771,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":3736,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3738,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":931,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["angular/cdk/tree",{"_index":756,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["angular/common",{"_index":347,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"components/TrialComponent.html":{},"modules/TrialModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":167,"title":{},"body":{"components/AdminHeaderComponent.html":{},"injectables/AdminUserService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ImageService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["angular/compiler",{"_index":3740,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":387,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{},"modules/TrialModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3741,"title":{},"body":{"dependencies.html":{}}}],["angular/material/badge",{"_index":351,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["angular/material/button",{"_index":353,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{}}}],["angular/material/card",{"_index":3518,"title":{},"body":{"modules/TrialModule.html":{}}}],["angular/material/checkbox",{"_index":355,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["angular/material/chips",{"_index":357,"title":{},"body":{"modules/AdminModule.html":{}}}],["angular/material/dialog",{"_index":359,"title":{},"body":{"modules/AdminModule.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["angular/material/divider",{"_index":361,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["angular/material/expansion",{"_index":3520,"title":{},"body":{"modules/TrialModule.html":{}}}],["angular/material/form",{"_index":363,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/TrialModule.html":{}}}],["angular/material/icon",{"_index":366,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{}}}],["angular/material/input",{"_index":368,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/TrialModule.html":{}}}],["angular/material/list",{"_index":370,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["angular/material/menu",{"_index":372,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/paginator",{"_index":374,"title":{},"body":{"modules/AdminModule.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"modules/TrialModule.html":{}}}],["angular/material/radio",{"_index":3522,"title":{},"body":{"modules/TrialModule.html":{}}}],["angular/material/select",{"_index":376,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["angular/material/slider",{"_index":3524,"title":{},"body":{"modules/TrialModule.html":{}}}],["angular/material/stepper",{"_index":3526,"title":{},"body":{"modules/TrialModule.html":{}}}],["angular/material/table",{"_index":378,"title":{},"body":{"modules/AdminModule.html":{},"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["angular/material/toolbar",{"_index":380,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{}}}],["angular/material/tree",{"_index":382,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"modules/TrialModule.html":{}}}],["angular/platform",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":171,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialRoutingModule.html":{},"guards/TrialTreatmentService.html":{},"dependencies.html":{}}}],["angzeigt",{"_index":2868,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["animation",{"_index":1369,"title":{},"body":{"components/FoodCardComponent.html":{},"components/TrialComponent.html":{}}}],["anlegen",{"_index":300,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["anmelden",{"_index":1510,"title":{},"body":{"components/HeaderComponent.html":{}}}],["answer",{"_index":3022,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["antwort",{"_index":2870,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["anymore",{"_index":2273,"title":{},"body":{"injectables/ProductService.html":{},"components/SubjectSelectComponent.html":{}}}],["api",{"_index":1551,"title":{},"body":{"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/LabelCreateComponent.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"miscellaneous/variables.html":{}}}],["api_store",{"_index":3468,"title":{},"body":{"injectables/TrialLabelService.html":{}}}],["apiuri",{"_index":3814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"index.html":{}}}],["app.component",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app.component.html",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":41,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appended",{"_index":3009,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["appfixednav",{"_index":1105,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["appfixednav]'},{'name",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["application",{"_index":596,"title":{},"body":{"injectables/EventsService.html":{}}}],["applied",{"_index":1824,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/ProductService.html":{}}}],["appmodule",{"_index":460,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":465,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appscore",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["aqua",{"_index":3573,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["area",{"_index":2555,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["areas",{"_index":2550,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["arguments",{"_index":1119,"title":{},"body":{"directives/FixedNavDirective.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["arial",{"_index":1305,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["around",{"_index":1434,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["array",{"_index":727,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ItemService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{},"components/SwapDialogComponent.html":{},"guards/TreatmentService.html":{},"components/TrialComponent.html":{}}}],["array/label",{"_index":2141,"title":{},"body":{"injectables/LabelService.html":{}}}],["arrow",{"_index":3226,"title":{},"body":{"components/TrialComponent.html":{}}}],["arrow_back",{"_index":2004,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/SubjectManageComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{}}}],["art",{"_index":1444,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["artifacts",{"_index":3784,"title":{},"body":{"index.html":{}}}],["ascending",{"_index":1836,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["asociated",{"_index":2089,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["assessing",{"_index":292,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["assets/traktor_placeholder.jpeg",{"_index":1594,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["assign",{"_index":279,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["assigned",{"_index":285,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["assignment",{"_index":1826,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["associated",{"_index":1193,"title":{},"body":{"components/FoodCardComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"guards/TreatmentService.html":{}}}],["assortment",{"_index":268,"title":{},"body":{"components/AdminLandingComponent.html":{},"injectables/EventsService.html":{}}}],["async",{"_index":606,"title":{},"body":{"injectables/EventsService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TrialConfigComponent.html":{}}}],["attr",{"_index":2336,"title":{},"body":{"injectables/ProductService.html":{}}}],["attributes",{"_index":874,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["aufsteigend",{"_index":1842,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["aus",{"_index":2155,"title":{},"body":{"components/LandingComponent.html":{}}}],["auswahl",{"_index":997,"title":{},"body":{"components/FilterComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["auswählen",{"_index":1634,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["auth",{"_index":484,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["auth.service",{"_index":516,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["auth/auth.guard",{"_index":414,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["auth/auth.module#authmodule",{"_index":486,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.service",{"_index":459,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticated",{"_index":162,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AdminUserService.html":{},"injectables/ItemService.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/ScoreCreateComponent.html":{},"guards/TreatmentService.html":{}}}],["authguard",{"_index":413,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AdminRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":532,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":458,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["auto",{"_index":196,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["automatic",{"_index":3397,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["automatically",{"_index":777,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/TrialConfigComponent.html":{},"index.html":{}}}],["available",{"_index":1080,"title":{},"body":{"injectables/FilterService.html":{},"injectables/ProductService.html":{},"guards/TreatmentService.html":{},"modules.html":{}}}],["await",{"_index":738,"title":{},"body":{"injectables/EventsService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TrialConfigComponent.html":{}}}],["b",{"_index":1884,"title":{},"body":{"components/ItemGridComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["b.netprice",{"_index":1903,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["b.niceness",{"_index":1886,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["back",{"_index":679,"title":{},"body":{"injectables/EventsService.html":{},"components/ItemManageComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{}}}],["backend",{"_index":2135,"title":{},"body":{"injectables/LabelService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{}}}],["background",{"_index":1019,"title":{},"body":{"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["badge",{"_index":3255,"title":{},"body":{"components/TrialComponent.html":{}}}],["banner",{"_index":3500,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["banner.jpg",{"_index":3497,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["bar",{"_index":1331,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{},"components/TrialComponent.html":{}}}],["base",{"_index":270,"title":{},"body":{"components/AdminLandingComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelCreateComponent.html":{},"injectables/ProductService.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{}}}],["base.name",{"_index":999,"title":{},"body":{"components/FilterComponent.html":{}}}],["baseattribute",{"_index":790,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["baseattributes",{"_index":795,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/ProductService.html":{}}}],["baseattributes.add(attr",{"_index":2337,"title":{},"body":{"injectables/ProductService.html":{}}}],["baseattributs",{"_index":791,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["based",{"_index":445,"title":{},"body":{"injectables/AdminUserService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"injectables/ItemService.html":{},"injectables/ProductService.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{}}}],["baseedit",{"_index":1990,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["baseedit/:itemid",{"_index":423,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["baseitemfilter",{"_index":976,"title":{},"body":{"components/FilterComponent.html":{}}}],["baseitemfilter(node",{"_index":862,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["baseline",{"_index":1674,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["basetrees",{"_index":3135,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["baseurl",{"_index":1501,"title":{},"body":{"components/HeaderComponent.html":{}}}],["basis",{"_index":2031,"title":{},"body":{"injectables/ItemService.html":{}}}],["before",{"_index":156,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["bei",{"_index":3489,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["beim",{"_index":3485,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["beispiel",{"_index":2158,"title":{},"body":{"components/LandingComponent.html":{}}}],["benutzername",{"_index":2189,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["berein",{"_index":2398,"title":{},"body":{"components/RegisterComponent.html":{}}}],["bereits",{"_index":2383,"title":{},"body":{"components/RegisterComponent.html":{}}}],["beschreibung",{"_index":961,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/TreeManageComponent.html":{}}}],["bestimmten",{"_index":2879,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["bestätigen",{"_index":2872,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["between",{"_index":597,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/ItemGridComponent.html":{}}}],["bezier(.25,.8,.25,1),box",{"_index":1681,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["bezier(.4,0,.2,1",{"_index":1684,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["bezier(0.75",{"_index":3387,"title":{},"body":{"components/TrialComponent.html":{}}}],["bg",{"_index":1521,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["bild",{"_index":1611,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemManageComponent.html":{}}}],["bilder",{"_index":1629,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["bin",{"_index":1607,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["binding",{"_index":1767,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/TrialConfigComponent.html":{}}}],["bitte",{"_index":2380,"title":{},"body":{"components/RegisterComponent.html":{}}}],["blob",{"_index":1555,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{}}}],["blob(this.data.object.img.data.data",{"_index":1723,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["block",{"_index":1293,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["body",{"_index":647,"title":{},"body":{"injectables/EventsService.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"injectables/ScoreService.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"components/TrialComponent.html":{}}}],["body).subscribe",{"_index":722,"title":{},"body":{"injectables/EventsService.html":{}}}],["body).topromise",{"_index":740,"title":{},"body":{"injectables/EventsService.html":{}}}],["bol",{"_index":2841,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["bol.tostring",{"_index":2852,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["bold",{"_index":1018,"title":{},"body":{"components/FilterComponent.html":{},"components/ShoppingCartComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["bool",{"_index":625,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{}}}],["boolean",{"_index":691,"title":{},"body":{"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["bootstrap",{"_index":330,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":1283,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["bottom",{"_index":1010,"title":{},"body":{"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["box",{"_index":1666,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["boxes",{"_index":1771,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["branches",{"_index":2320,"title":{},"body":{"injectables/ProductService.html":{}}}],["branches.foreach((element",{"_index":2325,"title":{},"body":{"injectables/ProductService.html":{}}}],["branches.length",{"_index":2324,"title":{},"body":{"injectables/ProductService.html":{}}}],["branches.push(obj",{"_index":2323,"title":{},"body":{"injectables/ProductService.html":{}}}],["branches.splice(index",{"_index":2328,"title":{},"body":{"injectables/ProductService.html":{}}}],["brand",{"_index":1299,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ProductService.html":{}}}],["brauchen",{"_index":3491,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["brot",{"_index":2261,"title":{},"body":{"injectables/ProductService.html":{}}}],["browse",{"_index":3802,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"components/EndTrialComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1664,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["btndisabled",{"_index":2739,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["budget",{"_index":2602,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["bug",{"_index":1101,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["build",{"_index":295,"title":{},"body":{"components/AdminLandingComponent.html":{},"injectables/ProductService.html":{},"index.html":{}}}],["button",{"_index":624,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["button.change",{"_index":2833,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["buttons",{"_index":2840,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["bzw",{"_index":2190,"title":{},"body":{"components/LoginComponent.html":{}}}],["c",{"_index":3043,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["cache",{"_index":3460,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["calc(100",{"_index":1295,"title":{},"body":{"components/FoodCardComponent.html":{},"components/TrialComponent.html":{}}}],["calc(50",{"_index":3333,"title":{},"body":{"components/TrialComponent.html":{}}}],["calcsumpriceofitems",{"_index":2570,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["calculategrosssum",{"_index":2513,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calculategrosssum(it.item",{"_index":2541,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calculategrosssum(item",{"_index":2517,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calculates",{"_index":1387,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["calculatescore",{"_index":1149,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["calculatesumofitems",{"_index":2664,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["calculating",{"_index":2582,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["calculation",{"_index":1177,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{}}}],["call",{"_index":1474,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{}}}],["called",{"_index":519,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/ProductService.html":{},"components/SwapDialogComponent.html":{},"guards/TreatmentService.html":{},"guards/TrialTreatmentService.html":{}}}],["calls",{"_index":2747,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["canactivate",{"_index":417,"title":{},"body":{"modules/AdminRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":495,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivatechild",{"_index":418,"title":{},"body":{"modules/AdminRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivatechild(route",{"_index":503,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":962,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TrialComponent.html":{}}}],["cancelsearch",{"_index":3206,"title":{},"body":{"components/TrialComponent.html":{}}}],["caption",{"_index":3499,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["carbohydrate",{"_index":1464,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["card",{"_index":323,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FoodCardComponent.html":{},"components/ItemGridComponent.html":{},"directives/ScoreDirective.html":{}}}],["card'},{'name",{"_index":54,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["card.component",{"_index":3513,"title":{},"body":{"modules/TrialModule.html":{}}}],["card.component.html",{"_index":1144,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.scss",{"_index":1143,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts",{"_index":1142,"title":{},"body":{"components/FoodCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:104",{"_index":1182,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:122",{"_index":1176,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:135",{"_index":1171,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:177",{"_index":1191,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:21",{"_index":1167,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:23",{"_index":1192,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:27",{"_index":1166,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:40",{"_index":1183,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:47",{"_index":1196,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:53",{"_index":1179,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:64",{"_index":1173,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:71",{"_index":1169,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:75",{"_index":1185,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:81",{"_index":1198,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:85",{"_index":1200,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:89",{"_index":1172,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card.component.ts:97",{"_index":1187,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["card/food",{"_index":1141,"title":{},"body":{"components/FoodCardComponent.html":{},"modules/TrialModule.html":{},"coverage.html":{}}}],["card/score.directive",{"_index":3534,"title":{},"body":{"modules/TrialModule.html":{}}}],["card/score.directive.ts",{"_index":2481,"title":{},"body":{"directives/ScoreDirective.html":{},"coverage.html":{}}}],["card/score.directive.ts:11",{"_index":2483,"title":{},"body":{"directives/ScoreDirective.html":{}}}],["card/score.directive.ts:13",{"_index":2482,"title":{},"body":{"directives/ScoreDirective.html":{}}}],["cart",{"_index":635,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"modules/TrialRoutingModule.html":{}}}],["cart'},{'name",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["cart.budget",{"_index":3318,"title":{},"body":{"components/TrialComponent.html":{}}}],["cart.component",{"_index":3516,"title":{},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["cart.component.html",{"_index":2512,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.scss",{"_index":2511,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":2510,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:16",{"_index":2516,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:18",{"_index":2515,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:29",{"_index":2522,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:45",{"_index":2518,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:62",{"_index":2521,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.service",{"_index":1203,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{},"modules/TrialModule.html":{},"guards/TrialTreatmentService.html":{}}}],["cart.service.ts",{"_index":2567,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:115",{"_index":2585,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:128",{"_index":2599,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:16",{"_index":2600,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:170",{"_index":2581,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:18",{"_index":2578,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:29",{"_index":2592,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:48",{"_index":2587,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:56",{"_index":2593,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:66",{"_index":2580,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:96",{"_index":2596,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/shopping",{"_index":1202,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{}}}],["carts",{"_index":293,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["case",{"_index":3231,"title":{},"body":{"components/TrialComponent.html":{}}}],["cases",{"_index":276,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["catch",{"_index":1420,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["catch((val",{"_index":2994,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["catcherror",{"_index":2046,"title":{},"body":{"injectables/ItemService.html":{}}}],["categories",{"_index":294,"title":{},"body":{"components/AdminLandingComponent.html":{},"injectables/ProductService.html":{},"components/TrialLandingComponent.html":{}}}],["category",{"_index":776,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{}}}],["categoryfilter",{"_index":1040,"title":{},"body":{"injectables/FilterService.html":{}}}],["categoryfilter(filter",{"_index":1053,"title":{},"body":{"injectables/FilterService.html":{}}}],["categoryfiltered",{"_index":1035,"title":{},"body":{"injectables/FilterService.html":{}}}],["caught",{"_index":2050,"title":{},"body":{"injectables/ItemService.html":{}}}],["ccc",{"_index":1286,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["center",{"_index":1336,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["central",{"_index":1802,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/ProductService.html":{},"components/TreatmentCreateComponent.html":{}}}],["certain",{"_index":284,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["certification",{"_index":1437,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["change",{"_index":876,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"injectables/ShoppingCartService.html":{},"index.html":{}}}],["changeamountofitem",{"_index":2571,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["changeamountofitem(item",{"_index":2584,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["changed",{"_index":2612,"title":{},"body":{"injectables/ShoppingCartService.html":{},"guards/TreatmentService.html":{}}}],["changeitemamount",{"_index":2514,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["changeitemamount(item",{"_index":2519,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["changes",{"_index":1031,"title":{},"body":{"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/ItemGridComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"injectables/TreeService.html":{}}}],["changing",{"_index":1970,"title":{},"body":{"components/ItemManageComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["character",{"_index":2204,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["characters",{"_index":2201,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["check",{"_index":3232,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"guards/TrialTreatmentService.html":{},"index.html":{}}}],["check').subscribe",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["check/trial",{"_index":3607,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["checkbox",{"_index":877,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["checkboxlabel",{"_index":891,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["checkboxlabel(row",{"_index":900,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["checkdatarecording",{"_index":3587,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["checkdatarecording(treatmentid",{"_index":3592,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["checking",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["checklogin",{"_index":492,"title":{},"body":{"guards/AuthGuard.html":{}}}],["checklogin(url",{"_index":505,"title":{},"body":{"guards/AuthGuard.html":{}}}],["checklogincredentials",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkout",{"_index":629,"title":{},"body":{"injectables/EventsService.html":{},"components/ShoppingMetricsComponent.html":{}}}],["checkroute",{"_index":3615,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["checks",{"_index":2058,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{},"injectables/ProductService.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["child(1",{"_index":3342,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(10",{"_index":3368,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(11",{"_index":3371,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(12",{"_index":3374,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(2",{"_index":3345,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(3",{"_index":3348,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(4",{"_index":3351,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(5",{"_index":3354,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(6",{"_index":3357,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(7",{"_index":3360,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(8",{"_index":3362,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(9",{"_index":3365,"title":{},"body":{"components/TrialComponent.html":{}}}],["child(even",{"_index":1492,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["children",{"_index":299,"title":{},"body":{"components/AdminLandingComponent.html":{},"modules/AdminRoutingModule.html":{},"injectables/ProductService.html":{},"modules/TrialRoutingModule.html":{}}}],["choose",{"_index":3013,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["chrome",{"_index":1104,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["class",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["clear",{"_index":912,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["cli",{"_index":3772,"title":{},"body":{"index.html":{}}}],["click",{"_index":1170,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["close",{"_index":1626,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"injectables/ItemService.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{}}}],["close:hover",{"_index":1689,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["closebtn",{"_index":3584,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["closeedit",{"_index":2022,"title":{},"body":{"injectables/ItemService.html":{},"injectables/TreeService.html":{}}}],["closeeditemitter",{"_index":1934,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["closenav",{"_index":3554,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["closing",{"_index":2033,"title":{},"body":{"injectables/ItemService.html":{}}}],["cluster_adminmodule",{"_index":333,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":334,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":335,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":336,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":533,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":534,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":535,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_endtrialmodule",{"_index":585,"title":{},"body":{"modules/EndTrialModule.html":{},"overview.html":{}}}],["cluster_endtrialmodule_declarations",{"_index":586,"title":{},"body":{"modules/EndTrialModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2504,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2505,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2506,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":2507,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_trialmodule",{"_index":3507,"title":{},"body":{"modules/TrialModule.html":{},"overview.html":{}}}],["cluster_trialmodule_declarations",{"_index":3508,"title":{},"body":{"modules/TrialModule.html":{},"overview.html":{}}}],["cluster_trialmodule_imports",{"_index":3509,"title":{},"body":{"modules/TrialModule.html":{},"overview.html":{}}}],["cluster_trialmodule_providers",{"_index":3510,"title":{},"body":{"modules/TrialModule.html":{},"overview.html":{}}}],["code",{"_index":1508,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"index.html":{}}}],["col",{"_index":319,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["collapse",{"_index":1490,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["collected",{"_index":2412,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["collection",{"_index":2411,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["collects",{"_index":799,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["color",{"_index":1002,"title":{},"body":{"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["color:rgb(0",{"_index":1367,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["column",{"_index":242,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["columns",{"_index":1655,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["combines",{"_index":200,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["commonmodule",{"_index":346,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{}}}],["comopnent",{"_index":760,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["comoponent",{"_index":2735,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["completly",{"_index":637,"title":{},"body":{"injectables/EventsService.html":{}}}],["component",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"overview.html":{}}}],["config",{"_index":2736,"title":{},"body":{"components/SubjectSelectComponent.html":{},"components/TrialConfigComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["config'},{'name",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["config.component",{"_index":3528,"title":{},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["config.component.html",{"_index":3403,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.scss",{"_index":3402,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts",{"_index":3393,"title":{},"body":{"components/TrialConfigComponent.html":{},"coverage.html":{}}}],["config.component.ts:110",{"_index":3424,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:118",{"_index":3421,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:23",{"_index":3427,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:25",{"_index":3435,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:27",{"_index":3428,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:29",{"_index":3432,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:31",{"_index":3434,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:33",{"_index":3430,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:34",{"_index":3426,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:35",{"_index":3412,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:53",{"_index":3413,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:87",{"_index":3418,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config.component.ts:97",{"_index":3423,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["config/trial",{"_index":3392,"title":{},"body":{"components/TrialConfigComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"coverage.html":{}}}],["configuration",{"_index":3018,"title":{},"body":{"components/TreatmentCreateComponent.html":{},"components/TrialConfigComponent.html":{}}}],["configurations",{"_index":3290,"title":{},"body":{"components/TrialComponent.html":{}}}],["configure",{"_index":3000,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["configured",{"_index":1032,"title":{},"body":{"injectables/FilterService.html":{},"components/TrialConfigComponent.html":{}}}],["confirm",{"_index":2358,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirming",{"_index":1756,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["connected",{"_index":1718,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["connection",{"_index":3614,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["consistency",{"_index":1029,"title":{},"body":{"injectables/FilterService.html":{}}}],["console.error('not",{"_index":2186,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.error(error",{"_index":181,"title":{},"body":{"components/AdminHeaderComponent.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"components/ScoreCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["console.error(error.error",{"_index":2369,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log",{"_index":1138,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["console.log(\"can't",{"_index":2638,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log('after",{"_index":3296,"title":{},"body":{"components/TrialComponent.html":{}}}],["console.log('authguard#canactivate",{"_index":518,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log('authguard#canactivatechild",{"_index":523,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log('cart",{"_index":2634,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log('end",{"_index":729,"title":{},"body":{"injectables/EventsService.html":{}}}],["console.log('error",{"_index":529,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log('fetching",{"_index":2283,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('file",{"_index":265,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/ImageDialogComponent.html":{}}}],["console.log('hello",{"_index":2371,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('here",{"_index":2647,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log('hier",{"_index":1606,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["console.log('initiated",{"_index":2715,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["console.log('loaded",{"_index":3285,"title":{},"body":{"components/TrialComponent.html":{}}}],["console.log('loading",{"_index":2287,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('no",{"_index":696,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ShoppingCartService.html":{}}}],["console.log('opted",{"_index":2698,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["console.log('proceeded",{"_index":2703,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["console.log('recorded",{"_index":2433,"title":{},"body":{"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{}}}],["console.log('router",{"_index":2420,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["console.log('select",{"_index":945,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["console.log('somthing",{"_index":3482,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["console.log('subject",{"_index":3603,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["console.log('triggered",{"_index":2303,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('updated",{"_index":2637,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log('user",{"_index":2357,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(`${(taxes",{"_index":2655,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(`${math.round((taxes",{"_index":1238,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["console.log(`${refarray.includes(row._id",{"_index":943,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["console.log(`destination",{"_index":2427,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["console.log(body",{"_index":1704,"title":{},"body":{"injectables/ImageService.html":{}}}],["console.log(bol",{"_index":2849,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["console.log(bool",{"_index":3298,"title":{},"body":{"components/TrialComponent.html":{}}}],["console.log(branches",{"_index":2333,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(cart",{"_index":2606,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(data",{"_index":736,"title":{},"body":{"injectables/EventsService.html":{}}}],["console.log(element",{"_index":811,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/LabelCreateComponent.html":{}}}],["console.log(environment.apiuri",{"_index":2175,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(error",{"_index":1622,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LoginComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{}}}],["console.log(event",{"_index":2425,"title":{},"body":{"injectables/RoutingTrackerService.html":{},"components/TrialConfigComponent.html":{}}}],["console.log(files",{"_index":1576,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["console.log(filter",{"_index":1088,"title":{},"body":{"injectables/FilterService.html":{}}}],["console.log(filtereditems",{"_index":2299,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(id",{"_index":2764,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["console.log(ind",{"_index":832,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/TreeService.html":{}}}],["console.log(it",{"_index":2693,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["console.log(item",{"_index":2609,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(items",{"_index":2285,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(json.stringify(this.loginform.value",{"_index":2179,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(l",{"_index":828,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["console.log(label",{"_index":2143,"title":{},"body":{"injectables/LabelService.html":{}}}],["console.log(labelid",{"_index":1422,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["console.log(msg",{"_index":724,"title":{},"body":{"injectables/EventsService.html":{}}}],["console.log(navinfo",{"_index":1868,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["console.log(object",{"_index":697,"title":{},"body":{"injectables/EventsService.html":{}}}],["console.log(params",{"_index":3447,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["console.log(res",{"_index":706,"title":{},"body":{"injectables/EventsService.html":{}}}],["console.log(res.id",{"_index":1412,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["console.log(resp",{"_index":1621,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/LoginComponent.html":{}}}],["console.log(result",{"_index":1431,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["console.log(row",{"_index":942,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["console.log(score",{"_index":1228,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["console.log(searchstring",{"_index":1086,"title":{},"body":{"injectables/FilterService.html":{}}}],["console.log(sessionstorage.getitem('treatmentid",{"_index":3648,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["console.log(sum",{"_index":2651,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(this.activatedroute.snapshot.data.treatment",{"_index":3270,"title":{},"body":{"components/TrialComponent.html":{}}}],["console.log(this.activatedroute.snapshot.parammap.get('id",{"_index":2965,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["console.log(this.activatedroute.snapshot.queryparammap.has('quest",{"_index":3456,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["console.log(this.cart",{"_index":2614,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(this.data",{"_index":932,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{}}}],["console.log(this.data.item.img.data",{"_index":1571,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["console.log(this.data.object",{"_index":1722,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["console.log(this.datasource",{"_index":960,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{}}}],["console.log(this.edittreatmentitem",{"_index":1988,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["console.log(this.formdata",{"_index":1615,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["console.log(this.imagepath",{"_index":1597,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["console.log(this.imgurl",{"_index":1598,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["console.log(this.items",{"_index":2525,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["console.log(this.newtreatment",{"_index":2963,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["console.log(this.newtreatment.questionnaire",{"_index":2974,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["console.log(this.product.label.length",{"_index":1208,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["console.log(this.products",{"_index":2316,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(this.products.find(item",{"_index":2286,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(this.registerform",{"_index":2351,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.selection",{"_index":953,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["console.log(this.showtagfilter",{"_index":820,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["console.log(this.subselection",{"_index":2310,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(this.treatmentform.disable",{"_index":2971,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["console.log(this.treatmentid",{"_index":3646,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["console.log(this.trialtreatmentservice.treatmentdata",{"_index":2711,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["console.log(tree",{"_index":3195,"title":{},"body":{"injectables/TreeService.html":{}}}],["console.log(trees",{"_index":2332,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(trial",{"_index":3452,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["console.log(trialdata",{"_index":2702,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["console.log(typeof",{"_index":2632,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(user",{"_index":176,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["console.log(val",{"_index":253,"title":{},"body":{"components/AdminLandingComponent.html":{},"guards/AuthGuard.html":{},"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["const",{"_index":415,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"modules/TrialRoutingModule.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["constructor(activatedroute",{"_index":3217,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["constructor(authservice",{"_index":493,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(dialogref",{"_index":897,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["constructor(el",{"_index":1110,"title":{},"body":{"directives/FixedNavDirective.html":{},"directives/ScoreDirective.html":{}}}],["constructor(fb",{"_index":2166,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(filterservice",{"_index":978,"title":{},"body":{"components/FilterComponent.html":{}}}],["constructor(http",{"_index":611,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ProductService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["constructor(private",{"_index":172,"title":{},"body":{"components/AdminHeaderComponent.html":{},"injectables/AuthService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"injectables/ImageService.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{}}}],["constructor(productservice",{"_index":1812,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["constructor(route",{"_index":1381,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["constructor(router",{"_index":2406,"title":{},"body":{"injectables/RoutingTrackerService.html":{},"components/SubjectManageComponent.html":{}}}],["constructor(shoppingcartservice",{"_index":1161,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["constructor(trialsubjectservice",{"_index":2577,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/SubjectSelectComponent.html":{}}}],["constructor(trialtreatmentservice",{"_index":3028,"title":{},"body":{"components/TreatmentSelectComponent.html":{},"components/TrialLandingComponent.html":{}}}],["cont",{"_index":1641,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TrialShopComponent.html":{}}}],["contain",{"_index":1544,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["container",{"_index":1350,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{}}}],["containing",{"_index":2249,"title":{},"body":{"injectables/ProductService.html":{}}}],["contains",{"_index":761,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/ProductService.html":{}}}],["content",{"_index":1181,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/RegisterComponent.html":{},"components/TrialComponent.html":{}}}],["content.item",{"_index":1913,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["continue",{"_index":2695,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["control",{"_index":782,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["controls",{"_index":1967,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["conversiongrammageprice",{"_index":1150,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["converted",{"_index":1099,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["copies",{"_index":3010,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["copy",{"_index":3008,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["core",{"_index":3743,"title":{},"body":{"dependencies.html":{}}}],["corresponding",{"_index":2006,"title":{},"body":{"components/ItemManageComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["counter",{"_index":1145,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["cover",{"_index":1648,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/TrialLandingComponent.html":{}}}],["coverage",{"_index":3664,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":269,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TrialConfigComponent.html":{}}}],["create'},{'name",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["create.component",{"_index":384,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["create.component.html",{"_index":2073,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["create.component.scss",{"_index":2072,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["create.component.ts",{"_index":2071,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:102",{"_index":2090,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:104",{"_index":2890,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["create.component.ts:117",{"_index":2093,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["create.component.ts:119",{"_index":2944,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:120",{"_index":2444,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["create.component.ts:138",{"_index":2939,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:16",{"_index":2454,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["create.component.ts:164",{"_index":2937,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:18",{"_index":2452,"title":{},"body":{"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["create.component.ts:19",{"_index":2947,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:199",{"_index":2940,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:20",{"_index":2455,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["create.component.ts:21",{"_index":2950,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:219",{"_index":2943,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:22",{"_index":2456,"title":{},"body":{"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["create.component.ts:23",{"_index":2946,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:24",{"_index":2453,"title":{},"body":{"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["create.component.ts:25",{"_index":2945,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:26",{"_index":2097,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["create.component.ts:27",{"_index":2951,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:28",{"_index":2095,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["create.component.ts:29",{"_index":2948,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:30",{"_index":2099,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["create.component.ts:33",{"_index":2094,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["create.component.ts:35",{"_index":2100,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["create.component.ts:40",{"_index":2449,"title":{},"body":{"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["create.component.ts:41",{"_index":2942,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["create.component.ts:46",{"_index":2091,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["create.component.ts:47",{"_index":2447,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["create.component.ts:52",{"_index":2088,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["create.component.ts:57",{"_index":2892,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["create.component.ts:63",{"_index":2086,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["create.component.ts:64",{"_index":2446,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["create.component.ts:69",{"_index":2893,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["create.component.ts:78",{"_index":2448,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["create.component.ts:80",{"_index":2082,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["create.component.ts:81",{"_index":2894,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["create.component.ts:91",{"_index":2451,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["create.component.ts:94",{"_index":2084,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["create/item",{"_index":383,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["create/label",{"_index":401,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/LabelCreateComponent.html":{},"coverage.html":{}}}],["create/score",{"_index":403,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/ScoreCreateComponent.html":{},"coverage.html":{}}}],["create/tax",{"_index":402,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/TaxCreateComponent.html":{},"coverage.html":{}}}],["create/treatment",{"_index":397,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/TreatmentCreateComponent.html":{},"coverage.html":{}}}],["create/tree",{"_index":398,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["created",{"_index":770,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{}}}],["createimagefromblob(image",{"_index":1726,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["creating",{"_index":2436,"title":{},"body":{"components/ScoreCreateComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreeManageComponent.html":{}}}],["creation",{"_index":1931,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["credentials",{"_index":510,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["credientials",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":2122,"title":{},"body":{"injectables/LabelService.html":{},"injectables/ScoreService.html":{},"injectables/TaxService.html":{}}}],["css",{"_index":3551,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["cubic",{"_index":1680,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{}}}],["currency",{"_index":1447,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["currency:it.item.currency",{"_index":2542,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["currency:product.currency",{"_index":1276,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["current",{"_index":873,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ShoppingCartService.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["currently",{"_index":140,"title":{},"body":{"components/AdminHeaderComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/ItemGridComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{}}}],["currentpage",{"_index":1070,"title":{},"body":{"injectables/FilterService.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["currreny",{"_index":2686,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["cursor",{"_index":974,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LoginComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{}}}],["custom",{"_index":120,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{}}}],["d.header",{"_index":1452,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["d.text",{"_index":1453,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["d6604d",{"_index":1660,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["danke",{"_index":575,"title":{},"body":{"components/EndTrialComponent.html":{},"components/SwapDialogComponent.html":{}}}],["darf",{"_index":2394,"title":{},"body":{"components/RegisterComponent.html":{}}}],["das",{"_index":2780,"title":{},"body":{"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{}}}],["data",{"_index":149,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AdminUserService.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["data.amount",{"_index":2826,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["data.object.description",{"_index":1731,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["data.object.header",{"_index":1730,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["database",{"_index":3178,"title":{},"body":{"injectables/TreeService.html":{},"injectables/TrialSubjectService.html":{}}}],["databinding",{"_index":1113,"title":{},"body":{"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemManageComponent.html":{},"directives/ScoreDirective.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialShopComponent.html":{}}}],["databse",{"_index":3172,"title":{},"body":{"injectables/TreeService.html":{}}}],["datasource",{"_index":208,"title":{},"body":{"components/AdminLandingComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["datasource.length",{"_index":2101,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{}}}],["date().toisostring",{"_index":699,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodDetailsComponent.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{}}}],["dauer",{"_index":2873,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["db",{"_index":673,"title":{},"body":{"injectables/EventsService.html":{},"guards/TrialTreatmentService.html":{}}}],["dcdcdc",{"_index":3315,"title":{},"body":{"components/TrialComponent.html":{}}}],["ddd",{"_index":1487,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["decides",{"_index":801,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["decinding",{"_index":1837,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["declarations",{"_index":329,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"overview.html":{}}}],["decoration",{"_index":1349,"title":{},"body":{"components/FoodCardComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{}}}],["decorators",{"_index":917,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["deep",{"_index":2258,"title":{},"body":{"injectables/ProductService.html":{}}}],["default",{"_index":150,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"miscellaneous/variables.html":{}}}],["defenitions",{"_index":243,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["defined",{"_index":134,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":1748,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TreeService.html":{}}}],["definitions",{"_index":2096,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["delay",{"_index":1370,"title":{},"body":{"components/FoodCardComponent.html":{},"components/TrialComponent.html":{}}}],["delete",{"_index":305,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["deletebasefilter",{"_index":3151,"title":{},"body":{"injectables/TreeService.html":{}}}],["deletebasefilter(id",{"_index":3159,"title":{},"body":{"injectables/TreeService.html":{}}}],["deletebaseitem",{"_index":2023,"title":{},"body":{"injectables/ItemService.html":{}}}],["deletebaseitem(itemid",{"_index":2029,"title":{},"body":{"injectables/ItemService.html":{}}}],["deleted",{"_index":2009,"title":{},"body":{"components/ItemManageComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["deleteitem",{"_index":1939,"title":{},"body":{"components/ItemManageComponent.html":{},"guards/TreatmentService.html":{}}}],["deleteitem(element",{"_index":1945,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["deletelabel",{"_index":2076,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["deletelabel(element",{"_index":2083,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["deletes",{"_index":3223,"title":{},"body":{"components/TrialComponent.html":{}}}],["deletescore",{"_index":2438,"title":{},"body":{"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{}}}],["deletescore(element",{"_index":2443,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["deletescore(id",{"_index":2495,"title":{},"body":{"injectables/ScoreService.html":{}}}],["deletespecificlabel",{"_index":2123,"title":{},"body":{"injectables/LabelService.html":{}}}],["deletespecificlabel(id",{"_index":2128,"title":{},"body":{"injectables/LabelService.html":{}}}],["deletespecifictreatment",{"_index":3049,"title":{},"body":{"guards/TreatmentService.html":{}}}],["deletespecifictreatment(id",{"_index":3066,"title":{},"body":{"guards/TreatmentService.html":{}}}],["deletetax",{"_index":2885,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["deletetreatment",{"_index":211,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["deletetreatment(element",{"_index":215,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["deletetree",{"_index":3115,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["deletetree(element",{"_index":3119,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["deleting",{"_index":218,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"components/TaxCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{}}}],["deletion",{"_index":2623,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{}}}],["delivers",{"_index":3586,"title":{},"body":{"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["delta",{"_index":2520,"title":{},"body":{"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/SwapDialogComponent.html":{}}}],["dem",{"_index":1610,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["den",{"_index":1450,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SubjectSelectComponent.html":{}}}],["dependencies",{"_index":328,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":3479,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["deprecated]{@link",{"_index":3480,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["der",{"_index":2148,"title":{},"body":{"components/LandingComponent.html":{},"components/SwapDialogComponent.html":{}}}],["des",{"_index":2818,"title":{},"body":{"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["descriptions",{"_index":2895,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["deselct",{"_index":870,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["deselect",{"_index":954,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["deselectpreviousnode",{"_index":872,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["design",{"_index":3754,"title":{},"body":{"dependencies.html":{}}}],["desired",{"_index":3011,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["destination",{"_index":2413,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["detail",{"_index":1374,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details",{"_index":1189,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"directives/ScoreDirective.html":{}}}],["details'},{'name",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["details.component",{"_index":3514,"title":{},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["details.component.html",{"_index":1377,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.scss",{"_index":1376,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts",{"_index":1372,"title":{},"body":{"components/FoodDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:102",{"_index":1386,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:114",{"_index":1396,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:163",{"_index":1400,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:175",{"_index":1389,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:182",{"_index":1384,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:186",{"_index":1394,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:194",{"_index":1385,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:236",{"_index":1401,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":1402,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:33",{"_index":1404,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:34",{"_index":1405,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:36",{"_index":1403,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:37",{"_index":1383,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:50",{"_index":1393,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:79",{"_index":1406,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:83",{"_index":1407,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details.component.ts:89",{"_index":1388,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["details/food",{"_index":1371,"title":{},"body":{"components/FoodDetailsComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"coverage.html":{}}}],["determine",{"_index":1714,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["determining",{"_index":1174,"title":{},"body":{"components/FoodCardComponent.html":{},"components/InfoDialogComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["determins",{"_index":1180,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["detremental",{"_index":2643,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["dev",{"_index":3779,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":3775,"title":{},"body":{"index.html":{}}}],["device",{"_index":3643,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["deviceheight",{"_index":3404,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["devicewidth",{"_index":3405,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["dialog",{"_index":886,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["dialog'},{'name",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["dialog.component",{"_index":396,"title":{},"body":{"modules/AdminModule.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingMetricsComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"modules/TrialModule.html":{}}}],["dialog.component.html",{"_index":888,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["dialog.component.scss",{"_index":887,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["dialog.component.ts",{"_index":885,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:114",{"_index":1755,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:120",{"_index":1758,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:127",{"_index":1541,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["dialog.component.ts:129",{"_index":1741,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":926,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["dialog.component.ts:142",{"_index":1745,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:143",{"_index":1543,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":927,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":1554,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":924,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1553,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":921,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":899,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1762,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1556,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":922,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":919,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1711,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1559,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":1768,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":913,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":1549,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1545,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":2843,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":1533,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":2803,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":2056,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":2838,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1548,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["dialog.component.ts:42",{"_index":1547,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1750,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:50",{"_index":1535,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":904,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":909,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["dialog.component.ts:60",{"_index":2055,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":901,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["dialog.component.ts:70",{"_index":2054,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["dialog.component.ts:74",{"_index":914,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["dialog.component.ts:78",{"_index":915,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["dialog.component.ts:81",{"_index":2807,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["dialog.component.ts:82",{"_index":916,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["dialog.component.ts:85",{"_index":1742,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:86",{"_index":1539,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["dialog.component.ts:88",{"_index":2059,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["dialog.component.ts:92",{"_index":1749,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["dialog.component.ts:93",{"_index":2061,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["dialog.component.ts:99",{"_index":1739,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["dialog/filter",{"_index":405,"title":{},"body":{"modules/AdminModule.html":{},"components/FilterAllocateDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"coverage.html":{}}}],["dialog/image",{"_index":395,"title":{},"body":{"modules/AdminModule.html":{},"components/ImageDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialog/info",{"_index":1408,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/InfoDialogComponent.html":{},"modules/TrialModule.html":{},"coverage.html":{}}}],["dialog/item",{"_index":400,"title":{},"body":{"modules/AdminModule.html":{},"components/ItemAllocateDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"coverage.html":{}}}],["dialog/label",{"_index":406,"title":{},"body":{"modules/AdminModule.html":{},"components/LabelAllocateDialogComponent.html":{},"coverage.html":{}}}],["dialog/swap",{"_index":1204,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialComponent.html":{},"modules/TrialModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":890,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":1255,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1266,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["dialogref.afterclosed().subscribe(async",{"_index":2713,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1430,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["dicides",{"_index":1536,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["die",{"_index":2776,"title":{},"body":{"components/SubjectSelectComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialLandingComponent.html":{}}}],["dies",{"_index":2146,"title":{},"body":{"components/LandingComponent.html":{}}}],["diese",{"_index":2867,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["different",{"_index":593,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodCardComponent.html":{}}}],["differently",{"_index":1754,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["diplayed",{"_index":764,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{}}}],["diplaying",{"_index":774,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/TrialComponent.html":{}}}],["direction",{"_index":1298,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["directive",{"_index":32,"title":{"directives/FixedNavDirective.html":{},"directives/ScoreDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{}}}],["directives",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3783,"title":{},"body":{"index.html":{}}}],["directory",{"_index":3786,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":2757,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["disabling",{"_index":2952,"title":{},"body":{"components/TreatmentCreateComponent.html":{},"components/TrialConfigComponent.html":{}}}],["disiplayd",{"_index":1194,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["display",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"guards/TrialTreatmentService.html":{},"miscellaneous/variables.html":{}}}],["displayadditionaltaxinfo",{"_index":1151,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["displaycols",{"_index":1935,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["displaycontentamount",{"_index":1152,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["displayd",{"_index":1835,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["displayed",{"_index":122,"title":{},"body":{"components/AdminHeaderComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/LandingComponent.html":{},"injectables/ProductService.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["displayedcolumns",{"_index":209,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["displayes",{"_index":1830,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["displaying",{"_index":157,"title":{},"body":{"components/AdminHeaderComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["displays",{"_index":1373,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{},"components/RegisterComponent.html":{},"components/SwapDialogComponent.html":{}}}],["displaytaxdescription",{"_index":1153,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["dist",{"_index":3785,"title":{},"body":{"index.html":{}}}],["div",{"_index":1116,"title":{},"body":{"directives/FixedNavDirective.html":{},"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{}}}],["div.alert",{"_index":1662,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["div.call",{"_index":1482,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["div.mat",{"_index":1015,"title":{},"body":{"components/FilterComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["div:after",{"_index":3339,"title":{},"body":{"components/TrialComponent.html":{}}}],["div:nth",{"_index":3341,"title":{},"body":{"components/TrialComponent.html":{}}}],["divider",{"_index":2558,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["document.getelementbyid(\"mysidenav\").style.width",{"_index":3567,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["documentation",{"_index":3665,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["done",{"_index":3398,"title":{},"body":{"components/TrialConfigComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["dosomething(event",{"_index":1126,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["down",{"_index":1097,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["download",{"_index":306,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["download/data",{"_index":3110,"title":{},"body":{"guards/TreatmentService.html":{}}}],["downloaddata",{"_index":212,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["downloaddata(element",{"_index":223,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["dropdown",{"_index":1845,"title":{},"body":{"components/ItemGridComponent.html":{},"components/TrialComponent.html":{}}}],["duplicate",{"_index":2232,"title":{},"body":{"injectables/ProductService.html":{}}}],["durchführt",{"_index":2783,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["during",{"_index":1076,"title":{},"body":{"injectables/FilterService.html":{},"components/TreatmentCreateComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["dynamic",{"_index":296,"title":{},"body":{"components/AdminLandingComponent.html":{},"dependencies.html":{}}}],["e",{"_index":189,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/ItemGridComponent.html":{}}}],["e.g",{"_index":2259,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TaxCreateComponent.html":{}}}],["e.pageindex",{"_index":1896,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["e.pagesize",{"_index":1897,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["e2e",{"_index":3795,"title":{},"body":{"index.html":{}}}],["each",{"_index":1073,"title":{},"body":{"injectables/FilterService.html":{},"injectables/ProductService.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["edit",{"_index":229,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{}}}],["edit/:treeid",{"_index":432,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["editdata",{"_index":2934,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["edited",{"_index":1391,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ItemManageComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["editfilter",{"_index":3145,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["editfilter/:treeid",{"_index":429,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["editing",{"_index":203,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{}}}],["edititem",{"_index":1940,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["edititem(row",{"_index":1947,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["edititem/:itemid",{"_index":428,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["editlabel",{"_index":2077,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["editlabel(element",{"_index":2085,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["editscore",{"_index":2439,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["editscore(score",{"_index":2445,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["edittax",{"_index":2886,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["edittax(tax",{"_index":2891,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["edittreatment",{"_index":213,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["edittreatment(element",{"_index":225,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["edittreatmentitem",{"_index":1936,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["edittree",{"_index":3116,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["edittree(element",{"_index":3121,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["eg",{"_index":2659,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["ein",{"_index":2616,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/SubjectSelectComponent.html":{},"components/TrialLandingComponent.html":{}}}],["eine",{"_index":2153,"title":{},"body":{"components/LandingComponent.html":{},"components/RegisterComponent.html":{},"components/SwapDialogComponent.html":{}}}],["eingeben",{"_index":2778,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["einkaufes",{"_index":2874,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["einkaufs",{"_index":2878,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["einloggen",{"_index":2156,"title":{},"body":{"components/LandingComponent.html":{}}}],["einschränken",{"_index":998,"title":{},"body":{"components/FilterComponent.html":{}}}],["einstellungen",{"_index":2774,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["eintauschen",{"_index":2821,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["el",{"_index":843,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"directives/ScoreDirective.html":{}}}],["el.tree",{"_index":848,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["element",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["element._id",{"_index":258,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["element._id).subscribe",{"_index":1997,"title":{},"body":{"components/ItemManageComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["element.amount",{"_index":2654,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["element.baseattributes",{"_index":2306,"title":{},"body":{"injectables/ProductService.html":{}}}],["element.baseattributes.some(val",{"_index":2307,"title":{},"body":{"injectables/ProductService.html":{}}}],["element.brand",{"_index":1797,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{}}}],["element.description",{"_index":303,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["element.header",{"_index":2070,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["element.item.netprice",{"_index":2650,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["element.item.taxes",{"_index":2649,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["element.item.taxes.length",{"_index":2648,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["element.item.vat",{"_index":2653,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["element.name",{"_index":302,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ProductService.html":{},"components/TreeManageComponent.html":{}}}],["element.parent",{"_index":2326,"title":{},"body":{"injectables/ProductService.html":{}}}],["element.selected",{"_index":840,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["element.subgroup",{"_index":2013,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["element.supergroup",{"_index":2011,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["elementref",{"_index":750,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"directives/ScoreDirective.html":{}}}],["elements",{"_index":762,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["ellipsis",{"_index":970,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["email",{"_index":2200,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["emission",{"_index":2589,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/SubjectSelectComponent.html":{}}}],["emitcloseedit",{"_index":2024,"title":{},"body":{"injectables/ItemService.html":{},"injectables/TreeService.html":{}}}],["emited",{"_index":2754,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["emitrefreshui",{"_index":3050,"title":{},"body":{"guards/TreatmentService.html":{}}}],["emits",{"_index":690,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"injectables/ShoppingCartService.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{}}}],["emitshowback",{"_index":603,"title":{},"body":{"injectables/EventsService.html":{}}}],["emitshowback(bool",{"_index":616,"title":{},"body":{"injectables/EventsService.html":{}}}],["emitshowremainder",{"_index":2572,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["emitshowremainder(bool",{"_index":2586,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["emitted",{"_index":654,"title":{},"body":{"injectables/EventsService.html":{}}}],["emitter",{"_index":1957,"title":{},"body":{"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"injectables/TreeService.html":{}}}],["emitting",{"_index":620,"title":{},"body":{"injectables/EventsService.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{}}}],["emitupdatefilterlist",{"_index":3152,"title":{},"body":{"injectables/TreeService.html":{}}}],["empty",{"_index":2896,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["enabling",{"_index":2941,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["end",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"index.html":{}}}],["end/shoppingcart",{"_index":728,"title":{},"body":{"injectables/EventsService.html":{}}}],["end/trial",{"_index":732,"title":{},"body":{"injectables/EventsService.html":{}}}],["ended",{"_index":676,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["ending",{"_index":1958,"title":{},"body":{"components/ItemManageComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["ends",{"_index":3019,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["endshoppingsession",{"_index":604,"title":{},"body":{"injectables/EventsService.html":{}}}],["endshoppingsession(cart",{"_index":626,"title":{},"body":{"injectables/EventsService.html":{}}}],["endtrial",{"_index":605,"title":{},"body":{"injectables/EventsService.html":{},"components/ShoppingMetricsComponent.html":{}}}],["endtrialcomponent",{"_index":43,"title":{"components/EndTrialComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["endtrialmodule",{"_index":584,"title":{"modules/EndTrialModule.html":{}},"body":{"modules/EndTrialModule.html":{},"modules.html":{},"overview.html":{}}}],["enthalten",{"_index":2389,"title":{},"body":{"components/RegisterComponent.html":{}}}],["entire",{"_index":219,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/TrialComponent.html":{}}}],["entries",{"_index":2233,"title":{},"body":{"injectables/ProductService.html":{}}}],["entry",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["entrycomponents",{"_index":343,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["environment",{"_index":168,"title":{},"body":{"components/AdminHeaderComponent.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/SwapDialogComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.maxfilesize",{"_index":1631,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["environment.maxfilesizebits",{"_index":1590,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["erhalten",{"_index":2883,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["erneut",{"_index":2782,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["err",{"_index":263,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["error",{"_index":180,"title":{},"body":{"components/AdminHeaderComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"miscellaneous/variables.html":{}}}],["error.error.notrial",{"_index":2770,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["error.error.pwderror.content",{"_index":2365,"title":{},"body":{"components/RegisterComponent.html":{}}}],["error.error.pwderror.maxlength",{"_index":2364,"title":{},"body":{"components/RegisterComponent.html":{}}}],["error.error.pwderror.minlength",{"_index":2362,"title":{},"body":{"components/RegisterComponent.html":{}}}],["error.error.usname.exists",{"_index":2368,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errors",{"_index":1560,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["erst",{"_index":2615,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["erstellen",{"_index":2792,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["es",{"_index":1627,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["etc",{"_index":1066,"title":{},"body":{"injectables/FilterService.html":{},"components/ShoppingMetricsComponent.html":{}}}],["eur",{"_index":2687,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["event",{"_index":621,"title":{},"body":{"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialShopComponent.html":{}}}],["event.pageindex",{"_index":1790,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{}}}],["event.pagesize",{"_index":1791,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{}}}],["event.target.files",{"_index":1575,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["event.target.files[0",{"_index":1601,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["event.url",{"_index":2428,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["event.value",{"_index":1899,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["eventemitter",{"_index":669,"title":{},"body":{"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"injectables/ShoppingCartService.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{}}}],["eventemitters",{"_index":1034,"title":{},"body":{"injectables/FilterService.html":{}}}],["events",{"_index":594,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/RoutingTrackerService.html":{},"components/SwapOptDialogComponent.html":{}}}],["eventsservice",{"_index":589,"title":{"injectables/EventsService.html":{}},"body":{"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialComponent.html":{},"coverage.html":{}}}],["everytime",{"_index":657,"title":{},"body":{"injectables/EventsService.html":{}}}],["example",{"_index":192,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/FilterComponent.html":{},"components/HeaderComponent.html":{},"components/SubjectManageComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["exampleflatnode",{"_index":741,"title":{"interfaces/ExampleFlatNode.html":{}},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"coverage.html":{}}}],["execute",{"_index":3792,"title":{},"body":{"index.html":{}}}],["existing",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["exists",{"_index":2367,"title":{},"body":{"components/RegisterComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{}}}],["expandable",{"_index":746,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["expanded",{"_index":3322,"title":{},"body":{"components/TrialComponent.html":{}}}],["experiment",{"_index":2645,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["export",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["exports",{"_index":332,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"overview.html":{}}}],["external",{"_index":2588,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["f",{"_index":1106,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["f1f1f1",{"_index":2489,"title":{},"body":{"directives/ScoreDirective.html":{}}}],["f2f2f2",{"_index":1493,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["f5f4f2",{"_index":1475,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["f6f6f6",{"_index":1341,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["failed",{"_index":2288,"title":{},"body":{"injectables/ProductService.html":{}}}],["fails",{"_index":2753,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["fall",{"_index":2416,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["fallback",{"_index":2209,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["falsch",{"_index":2192,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":152,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AuthService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1301,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["fat",{"_index":1468,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["favorite",{"_index":1281,"title":{},"body":{"components/FoodCardComponent.html":{},"components/HeaderComponent.html":{}}}],["fb",{"_index":2105,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["featured",{"_index":3472,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["features.of",{"_index":204,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["fetching",{"_index":231,"title":{},"body":{"components/AdminLandingComponent.html":{},"guards/TreatmentService.html":{}}}],["fetchtreatements",{"_index":214,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["ff4500",{"_index":1359,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["fff",{"_index":1517,"title":{},"body":{"components/HeaderComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["field",{"_index":364,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"components/ItemGridComponent.html":{},"components/LabelCreateComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{},"modules/TrialModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{}}}],["filereader",{"_index":1584,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{}}}],["files",{"_index":1574,"title":{},"body":{"components/ImageDialogComponent.html":{},"index.html":{}}}],["files.length",{"_index":1577,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["files[0].type",{"_index":1579,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["filesize",{"_index":3815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["filter'},{'name",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["filter(node",{"_index":857,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["filter.component.html",{"_index":766,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["filter.component.scss",{"_index":767,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["filter.foreach(filteritem",{"_index":2289,"title":{},"body":{"injectables/ProductService.html":{}}}],["filter.foreach(word",{"_index":2313,"title":{},"body":{"injectables/ProductService.html":{}}}],["filter.includes(val",{"_index":2308,"title":{},"body":{"injectables/ProductService.html":{}}}],["filter.service",{"_index":683,"title":{},"body":{"injectables/EventsService.html":{},"guards/TrialTreatmentService.html":{}}}],["filter.tolowercase().split",{"_index":1085,"title":{},"body":{"injectables/FilterService.html":{}}}],["filter/filter.component",{"_index":3527,"title":{},"body":{"modules/TrialModule.html":{}}}],["filterallocatedialogcomponent",{"_index":46,"title":{"components/FilterAllocateDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filtercomponent",{"_index":50,"title":{"components/FilterComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filtercreate",{"_index":431,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["filtered",{"_index":656,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ProductService.html":{}}}],["filtereditems",{"_index":2218,"title":{},"body":{"injectables/ProductService.html":{}}}],["filterid",{"_index":3062,"title":{},"body":{"guards/TreatmentService.html":{}}}],["filtering",{"_index":763,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemGridComponent.html":{}}}],["filteritem",{"_index":2296,"title":{},"body":{"injectables/ProductService.html":{}}}],["filteritem))[0",{"_index":2298,"title":{},"body":{"injectables/ProductService.html":{}}}],["filteritems",{"_index":1041,"title":{},"body":{"injectables/FilterService.html":{}}}],["filteritems(filter",{"_index":1056,"title":{},"body":{"injectables/FilterService.html":{}}}],["filteroptions",{"_index":1806,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["filters",{"_index":772,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/ItemGridComponent.html":{},"injectables/ProductService.html":{},"components/TreatmentCreateComponent.html":{}}}],["filterservice",{"_index":614,"title":{"injectables/FilterService.html":{}},"body":{"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/ItemGridComponent.html":{},"components/TrialComponent.html":{},"modules/TrialModule.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{},"overview.html":{}}}],["filtertree",{"_index":867,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"injectables/ProductService.html":{},"components/SwapDialogComponent.html":{}}}],["final",{"_index":634,"title":{},"body":{"injectables/EventsService.html":{}}}],["finalcheckout",{"_index":2665,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["finish",{"_index":2725,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["finished",{"_index":638,"title":{},"body":{"injectables/EventsService.html":{}}}],["fired",{"_index":658,"title":{},"body":{"injectables/EventsService.html":{}}}],["first",{"_index":1889,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/ProductService.html":{},"components/TrialComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["fit",{"_index":1355,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ImageDialogComponent.html":{}}}],["fixed",{"_index":1092,"title":{},"body":{"directives/FixedNavDirective.html":{},"components/SubjectSelectComponent.html":{},"components/TrialShopComponent.html":{}}}],["fixed($event",{"_index":3559,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["fixednavdirective",{"_index":109,"title":{"directives/FixedNavDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flag",{"_index":3594,"title":{},"body":{"injectables/TrialSubjectService.html":{},"index.html":{}}}],["flat",{"_index":744,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["flex",{"_index":194,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["float",{"_index":3320,"title":{},"body":{"components/TrialComponent.html":{}}}],["flt",{"_index":3576,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["folgenden",{"_index":2819,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["font",{"_index":1016,"title":{},"body":{"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["food",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{}}}],["foodcardcomponent",{"_index":52,"title":{"components/FoodCardComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fooddetailscomponent",{"_index":55,"title":{"components/FoodDetailsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":800,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemGridComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["form.example",{"_index":3325,"title":{},"body":{"components/TrialComponent.html":{}}}],["form_card",{"_index":2797,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["formbuilder",{"_index":2103,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["formcontrol",{"_index":2376,"title":{},"body":{"components/RegisterComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{}}}],["formcontrol(false",{"_index":2847,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["formdata",{"_index":1522,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["formgroup",{"_index":2102,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{}}}],["formsmodule",{"_index":386,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["forschungsshop",{"_index":2149,"title":{},"body":{"components/LandingComponent.html":{}}}],["found",{"_index":2210,"title":{},"body":{"components/NotfoundComponent.html":{},"components/TreatmentSelectComponent.html":{},"injectables/TreeService.html":{}}}],["free",{"_index":2311,"title":{},"body":{"injectables/ProductService.html":{},"components/TrialComponent.html":{}}}],["fro",{"_index":1114,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["fs",{"_index":3746,"title":{},"body":{"dependencies.html":{}}}],["fucntion",{"_index":1188,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["funciton",{"_index":1944,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{}}}],["function",{"_index":217,"title":{},"body":{"components/AdminLandingComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"coverage.html":{}}}],["functions",{"_index":3767,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funktion",{"_index":869,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["funtion",{"_index":798,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/ProductService.html":{},"injectables/ShoppingCartService.html":{}}}],["further",{"_index":1096,"title":{},"body":{"directives/FixedNavDirective.html":{},"index.html":{}}}],["für",{"_index":576,"title":{},"body":{"components/EndTrialComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialLandingComponent.html":{}}}],["g",{"_index":1213,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"miscellaneous/functions.html":{}}}],["g.controls.pwd1.seterrors",{"_index":2377,"title":{},"body":{"components/RegisterComponent.html":{}}}],["g.get('password').value",{"_index":2373,"title":{},"body":{"components/RegisterComponent.html":{}}}],["g.get('pwd1",{"_index":2372,"title":{},"body":{"components/RegisterComponent.html":{}}}],["g.get('pwd1').value",{"_index":2374,"title":{},"body":{"components/RegisterComponent.html":{}}}],["game",{"_index":3003,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["gap",{"_index":1658,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{}}}],["geben",{"_index":2381,"title":{},"body":{"components/RegisterComponent.html":{}}}],["gefiltert",{"_index":1909,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["gefunden",{"_index":3042,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["gegen",{"_index":2822,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["geht",{"_index":709,"title":{},"body":{"injectables/EventsService.html":{}}}],["gen",{"_index":3431,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["general",{"_index":1904,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/ProductService.html":{},"components/TrialComponent.html":{}}}],["generate",{"_index":3782,"title":{},"body":{"index.html":{}}}],["generated",{"_index":778,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{},"index.html":{}}}],["generatenewsubject",{"_index":3588,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["generatenewsubject(id",{"_index":3595,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["generates",{"_index":2251,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TrialSubjectService.html":{}}}],["generatesubject",{"_index":2741,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["generating",{"_index":2748,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["generation",{"_index":2255,"title":{},"body":{"injectables/ProductService.html":{},"components/SubjectSelectComponent.html":{},"components/TrialConfigComponent.html":{}}}],["gensubject=yes",{"_index":3415,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["gesetzliche",{"_index":1449,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["gespeichert",{"_index":2875,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["get/array/items",{"_index":2051,"title":{},"body":{"injectables/ItemService.html":{}}}],["getalldataoftreatment",{"_index":3051,"title":{},"body":{"guards/TreatmentService.html":{}}}],["getalldataoftreatment(treatmentid",{"_index":3069,"title":{},"body":{"guards/TreatmentService.html":{}}}],["getallitems",{"_index":2025,"title":{},"body":{"injectables/ItemService.html":{}}}],["getallmylabel",{"_index":2124,"title":{},"body":{"injectables/LabelService.html":{}}}],["getallproducts",{"_index":2219,"title":{},"body":{"injectables/ProductService.html":{}}}],["getallscores",{"_index":2492,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getalltaxes",{"_index":2917,"title":{},"body":{"injectables/TaxService.html":{}}}],["getalltreatments",{"_index":3052,"title":{},"body":{"guards/TreatmentService.html":{}}}],["getalltrees",{"_index":3153,"title":{},"body":{"injectables/TreeService.html":{}}}],["getandsetcart",{"_index":2573,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getbaseattributes",{"_index":2220,"title":{},"body":{"injectables/ProductService.html":{}}}],["getbaseurl",{"_index":1504,"title":{},"body":{"components/HeaderComponent.html":{}}}],["getbudget",{"_index":3260,"title":{},"body":{"components/TrialComponent.html":{}}}],["getcart",{"_index":2574,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getcurrency",{"_index":2682,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["getdisplayoptions",{"_index":3616,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["getenvironment",{"_index":1197,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["getfiltertrees",{"_index":1042,"title":{},"body":{"injectables/FilterService.html":{}}}],["getitemsbasedonfilter",{"_index":2221,"title":{},"body":{"injectables/ProductService.html":{}}}],["getitemsbasedonfilter(filter",{"_index":2235,"title":{},"body":{"injectables/ProductService.html":{}}}],["getitemsbyarray",{"_index":2026,"title":{},"body":{"injectables/ItemService.html":{}}}],["getitemsbyarray(items",{"_index":2037,"title":{},"body":{"injectables/ItemService.html":{}}}],["getitemsoftreatment",{"_index":3053,"title":{},"body":{"guards/TreatmentService.html":{}}}],["getitemsoftreatment(treatmentid",{"_index":3072,"title":{},"body":{"guards/TreatmentService.html":{}}}],["getitemsoftreatmentbyarray",{"_index":3054,"title":{},"body":{"guards/TreatmentService.html":{}}}],["getitemsoftreatmentbyarray(treatmentid",{"_index":3074,"title":{},"body":{"guards/TreatmentService.html":{}}}],["getlabelbyarray",{"_index":2125,"title":{},"body":{"injectables/LabelService.html":{}}}],["getlabelbyarray(label",{"_index":2133,"title":{},"body":{"injectables/LabelService.html":{}}}],["getlabelbyid",{"_index":3463,"title":{},"body":{"injectables/TrialLabelService.html":{}}}],["getlabelbyid(labelid",{"_index":3465,"title":{},"body":{"injectables/TrialLabelService.html":{}}}],["getlabels",{"_index":2078,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["getnewtreatmentid",{"_index":3055,"title":{},"body":{"guards/TreatmentService.html":{}}}],["getnumberofitems",{"_index":3252,"title":{},"body":{"components/TrialComponent.html":{}}}],["getproduct",{"_index":2222,"title":{},"body":{"injectables/ProductService.html":{}}}],["getproduct(id",{"_index":2246,"title":{},"body":{"injectables/ProductService.html":{}}}],["getremainder",{"_index":3262,"title":{},"body":{"components/TrialComponent.html":{}}}],["gets",{"_index":2230,"title":{},"body":{"injectables/ProductService.html":{},"components/ScoreCreateComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["getscores",{"_index":2440,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["getshowbudget",{"_index":3258,"title":{},"body":{"components/TrialComponent.html":{}}}],["getshowpopovercart",{"_index":3264,"title":{},"body":{"components/TrialComponent.html":{}}}],["getshowscore",{"_index":1195,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["getshowsum",{"_index":3256,"title":{},"body":{"components/TrialComponent.html":{}}}],["getshowtax",{"_index":1199,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["getspecifictreatment",{"_index":3056,"title":{},"body":{"guards/TreatmentService.html":{}}}],["getspecifictreatment(id",{"_index":3078,"title":{},"body":{"guards/TreatmentService.html":{}}}],["getspecifictreatmentdata",{"_index":3617,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["getspecifictreatmentdata(id",{"_index":3627,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["getspecifictree",{"_index":3154,"title":{},"body":{"injectables/TreeService.html":{}}}],["getspecifictree(id",{"_index":3164,"title":{},"body":{"injectables/TreeService.html":{}}}],["getsubjectid",{"_index":3589,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["getsumcart",{"_index":3249,"title":{},"body":{"components/TrialComponent.html":{}}}],["getswapconfig",{"_index":2842,"title":{},"body":{"components/SwapOptDialogComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["gettaxes",{"_index":2887,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["getter",{"_index":1047,"title":{},"body":{"injectables/FilterService.html":{},"injectables/ShoppingCartService.html":{},"guards/TreatmentService.html":{}}}],["getting",{"_index":2035,"title":{"index.html":{}},"body":{"injectables/ItemService.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{}}}],["gettreatmentid",{"_index":3618,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["gettreeoftagsofallproducts",{"_index":2223,"title":{},"body":{"injectables/ProductService.html":{}}}],["gettrees",{"_index":3117,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["getuserinfo",{"_index":443,"title":{},"body":{"injectables/AdminUserService.html":{}}}],["gewählte",{"_index":2863,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["ginore",{"_index":517,"title":{},"body":{"guards/AuthGuard.html":{}}}],["given",{"_index":2270,"title":{},"body":{"injectables/ProductService.html":{}}}],["gives",{"_index":2998,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["go",{"_index":3798,"title":{},"body":{"index.html":{}}}],["gradient(#fff",{"_index":2795,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["gradient(90deg",{"_index":1357,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["grammage",{"_index":1322,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["graph",{"_index":3803,"title":{},"body":{"modules.html":{}}}],["grey",{"_index":1354,"title":{},"body":{"components/FoodCardComponent.html":{},"components/TrialComponent.html":{}}}],["grid",{"_index":765,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["grid'},{'name",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["grid.component",{"_index":3515,"title":{},"body":{"modules/TrialModule.html":{}}}],["grid.component.html",{"_index":1805,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.scss",{"_index":1804,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts",{"_index":1801,"title":{},"body":{"components/ItemGridComponent.html":{},"coverage.html":{}}}],["grid.component.ts:103",{"_index":1820,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:120",{"_index":1817,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:135",{"_index":1832,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:158",{"_index":1822,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:23",{"_index":1855,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:25",{"_index":1856,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:27",{"_index":1846,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:29",{"_index":1838,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:31",{"_index":1844,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:33",{"_index":1854,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:36",{"_index":1858,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:38",{"_index":1849,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:40",{"_index":1815,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:53",{"_index":1821,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid.component.ts:89",{"_index":1825,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["grid/item",{"_index":1800,"title":{},"body":{"components/ItemGridComponent.html":{},"modules/TrialModule.html":{},"coverage.html":{}}}],["grow",{"_index":1483,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{}}}],["guard",{"_index":488,"title":{"guards/AuthGuard.html":{},"guards/ItemResolverService.html":{},"guards/TreatmentService.html":{},"guards/TrialTreatmentService.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guards",{"_index":489,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ItemResolverService.html":{},"guards/TreatmentService.html":{},"guards/TrialTreatmentService.html":{},"overview.html":{}}}],["göttingen",{"_index":2151,"title":{},"body":{"components/LandingComponent.html":{}}}],["gültige",{"_index":2382,"title":{},"body":{"components/RegisterComponent.html":{}}}],["h",{"_index":1523,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["haben",{"_index":2543,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["hallo",{"_index":3012,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["hammerjs",{"_index":3749,"title":{},"body":{"dependencies.html":{}}}],["handels",{"_index":3240,"title":{},"body":{"components/TrialComponent.html":{}}}],["handle",{"_index":1709,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/ItemGridComponent.html":{},"injectables/ProductService.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialConfigComponent.html":{}}}],["handlepage",{"_index":1737,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["handlepage($event",{"_index":1740,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["handlepage(e",{"_index":1816,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["handlepage(event",{"_index":1950,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["handler",{"_index":1952,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["handles",{"_index":592,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreeManageComponent.html":{}}}],["handling",{"_index":678,"title":{},"body":{"injectables/EventsService.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{}}}],["happend",{"_index":530,"title":{},"body":{"guards/AuthGuard.html":{}}}],["happens",{"_index":1074,"title":{},"body":{"injectables/FilterService.html":{}}}],["haschild",{"_index":852,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["hat",{"_index":2865,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["header",{"_index":121,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/HeaderComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/TaxCreateComponent.html":{},"components/TrialComponent.html":{}}}],["header'},{'name",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["header.component",{"_index":408,"title":{},"body":{"modules/AdminModule.html":{}}}],["header.component.html",{"_index":126,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":125,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/HeaderComponent.html":{}}}],["header.component.ts",{"_index":119,"title":{},"body":{"components/AdminHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:17",{"_index":159,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["header.component.ts:19",{"_index":153,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["header.component.ts:25",{"_index":144,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["header.component.ts:40",{"_index":135,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["header/admin",{"_index":118,"title":{},"body":{"components/AdminHeaderComponent.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["header/header.component",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["headercomponent",{"_index":57,"title":{"components/HeaderComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":324,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["height:200px",{"_index":1651,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["height:250px",{"_index":1646,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["help",{"_index":3797,"title":{},"body":{"index.html":{}}}],["helper",{"_index":868,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["helvetica",{"_index":1303,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["here",{"_index":277,"title":{},"body":{"components/AdminLandingComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemManageComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["hidden",{"_index":968,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["hier",{"_index":2775,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["hiermit",{"_index":2785,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["highlight",{"_index":788,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ImageDialogComponent.html":{}}}],["hinweise",{"_index":2882,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["hinzufügen",{"_index":2014,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["hochgeladen",{"_index":1632,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["hochladen",{"_index":1635,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["holding",{"_index":2098,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{}}}],["holds",{"_index":161,"title":{},"body":{"components/AdminHeaderComponent.html":{},"injectables/FilterService.html":{},"components/InfoDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ProductService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TrialConfigComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["hook",{"_index":146,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["host",{"_index":1562,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["hostlistener",{"_index":753,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["hostlistener('window:resize",{"_index":3267,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["hostlistener('window:scroll",{"_index":1125,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["hostlisteners",{"_index":1108,"title":{},"body":{"directives/FixedNavDirective.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["hr",{"_index":2565,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["html",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["http",{"_index":174,"title":{},"body":{"components/AdminHeaderComponent.html":{},"injectables/AdminUserService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ImageService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["http://localhost:4200",{"_index":3780,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":166,"title":{},"body":{"components/AdminHeaderComponent.html":{},"injectables/AdminUserService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ImageService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["httpclientmodule",{"_index":472,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1077,"title":{},"body":{"injectables/FilterService.html":{},"injectables/ImageService.html":{}}}],["https://material.angular.io/components/tree/overview",{"_index":842,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["i.e",{"_index":672,"title":{},"body":{"injectables/EventsService.html":{}}}],["iamge",{"_index":1618,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["ic",{"_index":1514,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ich",{"_index":1608,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["icon",{"_index":1512,"title":{},"body":{"components/HeaderComponent.html":{},"components/ItemGridComponent.html":{},"components/TrialComponent.html":{}}}],["icons",{"_index":3755,"title":{},"body":{"dependencies.html":{}}}],["icorporates",{"_index":3396,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["id",{"_index":239,"title":{},"body":{"components/AdminLandingComponent.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FoodCardComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"components/SubjectSelectComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["id).subscribe",{"_index":3655,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["id).subscribe((val",{"_index":2274,"title":{},"body":{"injectables/ProductService.html":{}}}],["identifier",{"_index":2620,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["idlater",{"_index":3406,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["ids",{"_index":1891,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/ItemService.html":{},"injectables/ProductService.html":{}}}],["ids.push(i._id",{"_index":1892,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["iformation",{"_index":1398,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["ignore",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AdminUserService.html":{},"injectables/AuthService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/NotfoundComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"miscellaneous/variables.html":{}}}],["ihnen",{"_index":2862,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["ihr",{"_index":3313,"title":{},"body":{"components/TrialComponent.html":{}}}],["ihre",{"_index":577,"title":{},"body":{"components/EndTrialComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["ihrem",{"_index":2547,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["ihren",{"_index":582,"title":{},"body":{"components/EndTrialComponent.html":{}}}],["im",{"_index":2876,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["image",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"miscellaneous/variables.html":{}}}],["image/label",{"_index":1572,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["image_large.png",{"_index":1567,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["imagedialogcomponent",{"_index":58,"title":{"components/ImageDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["imagepath",{"_index":1524,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["images",{"_index":1566,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["imageservice",{"_index":1532,"title":{"injectables/ImageService.html":{}},"body":{"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["img",{"_index":1289,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["img.absolute",{"_index":1649,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["img.avatar",{"_index":1644,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["img.dims",{"_index":1652,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["img.object",{"_index":1654,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["imgurl",{"_index":1525,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["implemented",{"_index":856,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodDetailsComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LabelService.html":{},"components/LoginComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TaxCreateComponent.html":{},"components/TrialConfigComponent.html":{}}}],["implements",{"_index":123,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"guards/AuthGuard.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["import",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["important",{"_index":322,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["imports",{"_index":344,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["included",{"_index":792,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/ProductService.html":{}}}],["includes",{"_index":3021,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["incorrect",{"_index":2378,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ind",{"_index":829,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/ProductService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ShoppingCartService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{}}}],["index",{"_index":127,"title":{"index.html":{}},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":286,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FoodDetailsComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["infinite",{"_index":3338,"title":{},"body":{"components/TrialComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["info.additional",{"_index":1347,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["infodialogcomponent",{"_index":60,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infoid",{"_index":1429,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["infor",{"_index":3473,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["inforcment",{"_index":2196,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["information",{"_index":291,"title":{},"body":{"components/AdminLandingComponent.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["infos",{"_index":681,"title":{},"body":{"injectables/EventsService.html":{}}}],["inhaltsstoffe",{"_index":1454,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["init",{"_index":3229,"title":{},"body":{"components/TrialComponent.html":{}}}],["initializaiton",{"_index":1774,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["initialization",{"_index":1752,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["initialize",{"_index":1184,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["initialized",{"_index":3200,"title":{},"body":{"components/TrialComponent.html":{}}}],["initializes",{"_index":1753,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["initiates",{"_index":639,"title":{},"body":{"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/TaxCreateComponent.html":{}}}],["inject",{"_index":928,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialComponent.html":{}}}],["inject(mat_dialog_data",{"_index":918,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["injectable",{"_index":437,"title":{"injectables/AdminUserService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ImageService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"injectables/TaxService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{}},"body":{"injectables/AdminUserService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ImageService.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{}}}],["injectables",{"_index":438,"title":{},"body":{"injectables/AdminUserService.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ImageService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"injectables/TaxService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"overview.html":{}}}],["injected",{"_index":2062,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["injecting",{"_index":796,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["inkl",{"_index":1279,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["inline",{"_index":1012,"title":{},"body":{"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["inner",{"_index":1334,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["innerwidth",{"_index":3203,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["input",{"_index":1201,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemManageComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{}}}],["input('score",{"_index":2485,"title":{},"body":{"directives/ScoreDirective.html":{}}}],["input('tid",{"_index":2762,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["input('treatment",{"_index":1976,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["input[type=\"text",{"_index":3326,"title":{},"body":{"components/TrialComponent.html":{}}}],["input[type=\"text\"].test",{"_index":3328,"title":{},"body":{"components/TrialComponent.html":{}}}],["input[type=\"text\"].test1",{"_index":3330,"title":{},"body":{"components/TrialComponent.html":{}}}],["inputfile",{"_index":1636,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["inputfile:focus",{"_index":1639,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["inputs",{"_index":1157,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ItemManageComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["instanceof",{"_index":2424,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["instatiating",{"_index":3077,"title":{},"body":{"guards/TreatmentService.html":{}}}],["interface",{"_index":501,"title":{"interfaces/ExampleFlatNode.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/LabelCreateComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"coverage.html":{}}}],["interfaces",{"_index":742,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"overview.html":{}}}],["intializes",{"_index":2057,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["inturn",{"_index":1829,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["invisible",{"_index":1005,"title":{},"body":{"components/FilterComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["invoces",{"_index":1819,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["isallselected",{"_index":892,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["isfirefox",{"_index":3553,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["isloggedin",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["ist",{"_index":2147,"title":{},"body":{"components/LandingComponent.html":{}}}],["it.amount",{"_index":2540,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["it.item",{"_index":2712,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["it.item.brand",{"_index":2539,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["it.item.name",{"_index":2538,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["it.item.netprice",{"_index":2831,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["it.item.swaps.length",{"_index":2694,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["it.item.vat",{"_index":2832,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["item",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["item)].amount",{"_index":2628,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["item._id",{"_index":2282,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ShoppingCartService.html":{}}}],["item.amount",{"_index":2719,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["item.baseattributes",{"_index":2243,"title":{},"body":{"injectables/ProductService.html":{}}}],["item.brand",{"_index":2003,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["item.brand.tolowercase().includes(word",{"_index":2315,"title":{},"body":{"injectables/ProductService.html":{}}}],["item.item._id",{"_index":2718,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["item.item.swaps",{"_index":2716,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["item.item.swaps.length",{"_index":2717,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["item.label.length",{"_index":1419,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["item.name",{"_index":2002,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["item.name.tolowercase().includes(word",{"_index":2314,"title":{},"body":{"injectables/ProductService.html":{}}}],["item.netprice",{"_index":2531,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["item.service",{"_index":2019,"title":{},"body":{"guards/ItemResolverService.html":{}}}],["item.tags.includes(filter",{"_index":2301,"title":{},"body":{"injectables/ProductService.html":{}}}],["item.taxes",{"_index":2529,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["item.taxes.length",{"_index":2528,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["item.vat",{"_index":2533,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["itemallocatedialogcomponent",{"_index":61,"title":{"components/ItemAllocateDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["itemcreate",{"_index":420,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["itemcreatecomponent",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["itemgrid",{"_index":1827,"title":{},"body":{"components/ItemGridComponent.html":{},"components/TrialShopComponent.html":{}}}],["itemgridcomponent",{"_index":65,"title":{"components/ItemGridComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["itemid",{"_index":1616,"title":{},"body":{"components/ImageDialogComponent.html":{},"injectables/ItemService.html":{},"injectables/ShoppingCartService.html":{},"components/SwapDialogComponent.html":{},"guards/TreatmentService.html":{}}}],["itemids",{"_index":2240,"title":{},"body":{"injectables/ProductService.html":{}}}],["itemmanage",{"_index":421,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["itemmanagecomponent",{"_index":67,"title":{"components/ItemManageComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["itemoutlet",{"_index":425,"title":{},"body":{"modules/AdminRoutingModule.html":{},"components/ItemManageComponent.html":{}}}],["itemresolverservice",{"_index":390,"title":{"guards/ItemResolverService.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"guards/ItemResolverService.html":{},"coverage.html":{}}}],["items",{"_index":271,"title":{},"body":{"components/AdminLandingComponent.html":{},"modules/AdminRoutingModule.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["items.foreach(element",{"_index":2813,"title":{},"body":{"components/SwapDialogComponent.html":{},"guards/TreatmentService.html":{}}}],["itemservice",{"_index":338,"title":{"injectables/ItemService.html":{}},"body":{"modules/AdminModule.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"coverage.html":{},"overview.html":{}}}],["itemsonpage",{"_index":1894,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["iterate",{"_index":2331,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingMetricsComponent.html":{}}}],["iterateswaps",{"_index":2666,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["iterateswaps(item",{"_index":2674,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["iterating",{"_index":2681,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["iterator",{"_index":1738,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["iterator(currentpage",{"_index":1743,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["ja",{"_index":2829,"title":{},"body":{"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["jquery",{"_index":3751,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3744,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":2206,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["json.stringify(val",{"_index":262,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["justify",{"_index":1335,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/TrialComponent.html":{}}}],["karma",{"_index":3794,"title":{},"body":{"index.html":{}}}],["kasse",{"_index":2724,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["kaufen",{"_index":3488,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["kcal",{"_index":1460,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["keine",{"_index":2545,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["keyframes",{"_index":3377,"title":{},"body":{"components/TrialComponent.html":{}}}],["kg",{"_index":1217,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["kj",{"_index":1458,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["können",{"_index":580,"title":{},"body":{"components/EndTrialComponent.html":{},"components/ImageDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["l",{"_index":826,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{}}}],["label",{"_index":70,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["label.service",{"_index":1409,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["label.service.ts",{"_index":3462,"title":{},"body":{"injectables/TrialLabelService.html":{},"coverage.html":{}}}],["label.service.ts:12",{"_index":3464,"title":{},"body":{"injectables/TrialLabelService.html":{}}}],["label.service.ts:21",{"_index":3466,"title":{},"body":{"injectables/TrialLabelService.html":{}}}],["label.upload",{"_index":1665,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["label/data",{"_index":2142,"title":{},"body":{"injectables/LabelService.html":{}}}],["label/image",{"_index":1705,"title":{},"body":{"injectables/ImageService.html":{}}}],["label/item",{"_index":1520,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["label:hover",{"_index":1640,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["labelallocatedialogcomponent",{"_index":69,"title":{"components/LabelAllocateDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["labelbody",{"_index":1624,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["labelcreate",{"_index":433,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["labelcreatecomponent",{"_index":71,"title":{"components/LabelCreateComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["labeldata",{"_index":1425,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["labeledit",{"_index":2074,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["labelform",{"_index":2104,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["labelid",{"_index":1399,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/TrialLabelService.html":{}}}],["labelinfoclosed",{"_index":718,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodDetailsComponent.html":{}}}],["labelinfoopened",{"_index":716,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodDetailsComponent.html":{}}}],["labels",{"_index":278,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{}}}],["labelservice",{"_index":2064,"title":{"injectables/LabelService.html":{}},"body":{"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"coverage.html":{}}}],["lable",{"_index":1702,"title":{},"body":{"injectables/ImageService.html":{}}}],["laebl.mode.js",{"_index":3467,"title":{},"body":{"injectables/TrialLabelService.html":{}}}],["landing",{"_index":199,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/LandingComponent.html":{},"components/TrialLandingComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["landing'},{'name",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["landing.component",{"_index":409,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["landing.component.html",{"_index":207,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/LandingComponent.html":{},"components/TrialLandingComponent.html":{}}}],["landing.component.scss",{"_index":206,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/LandingComponent.html":{},"components/TrialLandingComponent.html":{}}}],["landing.component.ts",{"_index":198,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/TrialLandingComponent.html":{},"coverage.html":{}}}],["landing.component.ts:17",{"_index":235,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["landing.component.ts:19",{"_index":244,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["landing.component.ts:20",{"_index":3475,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["landing.component.ts:21",{"_index":241,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["landing.component.ts:33",{"_index":3476,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["landing.component.ts:35",{"_index":233,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["landing.component.ts:39",{"_index":230,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["landing.component.ts:53",{"_index":216,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["landing.component.ts:63",{"_index":226,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["landing.component.ts:67",{"_index":224,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["landing/admin",{"_index":197,"title":{},"body":{"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["landing/landing.component",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["landing/trial",{"_index":3469,"title":{},"body":{"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"coverage.html":{}}}],["landingcomponent",{"_index":72,"title":{"components/LandingComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lang",{"_index":2392,"title":{},"body":{"components/RegisterComponent.html":{}}}],["layout",{"_index":3550,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["lds",{"_index":3334,"title":{},"body":{"components/TrialComponent.html":{}}}],["leaf",{"_index":298,"title":{},"body":{"components/AdminLandingComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["lebenmittel",{"_index":2260,"title":{},"body":{"injectables/ProductService.html":{}}}],["lebensmittelhandel",{"_index":3487,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["left",{"_index":321,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["legend",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"overview.html":{}}}],["length",{"_index":3254,"title":{},"body":{"components/TrialComponent.html":{}}}],["lengthproducts",{"_index":1807,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["letter",{"_index":1343,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["level",{"_index":747,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["levels",{"_index":2257,"title":{},"body":{"injectables/ProductService.html":{}}}],["li",{"_index":1008,"title":{},"body":{"components/FilterComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["lifecyce",{"_index":1751,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["limit",{"_index":793,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/ProductService.html":{},"components/TreatmentCreateComponent.html":{}}}],["limit.length",{"_index":880,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["limit.push(element.name",{"_index":879,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["limitselection",{"_index":825,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/ProductService.html":{}}}],["limitselection(base",{"_index":878,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["limitter",{"_index":1024,"title":{},"body":{"components/FilterComponent.html":{}}}],["line",{"_index":1309,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["linear",{"_index":1356,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{}}}],["link",{"_index":3400,"title":{},"body":{"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{}}}],["list",{"_index":1004,"title":{},"body":{"components/FilterComponent.html":{},"components/TreatmentCreateComponent.html":{},"injectables/TreeService.html":{}}}],["listener",{"_index":137,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{}}}],["listens",{"_index":2410,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["listner",{"_index":3236,"title":{},"body":{"components/TrialComponent.html":{}}}],["livecycle",{"_index":145,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/ImageDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["livecyle",{"_index":2450,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["load",{"_index":3132,"title":{},"body":{"components/TreeManageComponent.html":{},"components/TrialComponent.html":{}}}],["loadchildren",{"_index":485,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TrialRoutingModule.html":{}}}],["loaded",{"_index":1971,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"guards/TreatmentService.html":{},"components/TrialComponent.html":{}}}],["loading",{"_index":1557,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{}}}],["localstorage.getitem('remember",{"_index":1248,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["localstorage.getitem('rememberstart",{"_index":1246,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{}}}],["localstorage.setitem('remember",{"_index":2853,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["localstorage.setitem('rememberstart",{"_index":2851,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["location",{"_index":3218,"title":{},"body":{"components/TrialComponent.html":{}}}],["logedin",{"_index":141,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["logging",{"_index":138,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["logic",{"_index":1713,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/ItemGridComponent.html":{}}}],["login",{"_index":540,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["login'},{'name",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["login(credentials",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":2161,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.sass",{"_index":2160,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":538,"title":{},"body":{"modules/AuthModule.html":{}}}],["logincomponent",{"_index":73,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logind",{"_index":2180,"title":{},"body":{"components/LoginComponent.html":{}}}],["logindata",{"_index":552,"title":{"interfaces/LoginData.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"coverage.html":{}}}],["loginform",{"_index":2162,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginresp",{"_index":2174,"title":{"interfaces/LoginResp.html":{}},"body":{"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"coverage.html":{}}}],["logout",{"_index":132,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["logout').subscribe",{"_index":183,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["lookupinfo",{"_index":600,"title":{},"body":{"injectables/EventsService.html":{}}}],["lost",{"_index":3604,"title":{},"body":{"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["länger",{"_index":2395,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mail",{"_index":190,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["main",{"_index":1643,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/TrialShopComponent.html":{}}}],["making",{"_index":3005,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["manage",{"_index":267,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/ItemManageComponent.html":{},"components/SubjectManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["manage'},{'name",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["manage.component",{"_index":389,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["manage.component.html",{"_index":1933,"title":{},"body":{"components/ItemManageComponent.html":{},"components/SubjectManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["manage.component.scss",{"_index":1932,"title":{},"body":{"components/ItemManageComponent.html":{},"components/SubjectManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["manage.component.ts",{"_index":1930,"title":{},"body":{"components/ItemManageComponent.html":{},"components/SubjectManageComponent.html":{},"components/TreeManageComponent.html":{},"coverage.html":{}}}],["manage.component.ts:101",{"_index":1953,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:110",{"_index":3126,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["manage.component.ts:113",{"_index":1948,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:12",{"_index":2728,"title":{},"body":{"components/SubjectManageComponent.html":{}}}],["manage.component.ts:120",{"_index":3128,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["manage.component.ts:125",{"_index":1943,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:137",{"_index":1946,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:16",{"_index":2729,"title":{},"body":{"components/SubjectManageComponent.html":{}}}],["manage.component.ts:17",{"_index":3129,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["manage.component.ts:19",{"_index":2730,"title":{},"body":{"components/SubjectManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["manage.component.ts:21",{"_index":1941,"title":{},"body":{"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["manage.component.ts:23",{"_index":3133,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["manage.component.ts:25",{"_index":3130,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["manage.component.ts:28",{"_index":1968,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:30",{"_index":1966,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:32",{"_index":1959,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:34",{"_index":1960,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:36",{"_index":1973,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:38",{"_index":1965,"title":{},"body":{"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["manage.component.ts:40",{"_index":1969,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:42",{"_index":1956,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:44",{"_index":1972,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:46",{"_index":1963,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:48",{"_index":1962,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:61",{"_index":1954,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:64",{"_index":3125,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["manage.component.ts:77",{"_index":1955,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:78",{"_index":3122,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["manage.component.ts:89",{"_index":1951,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["manage.component.ts:90",{"_index":3120,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["manage/item",{"_index":388,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/ItemManageComponent.html":{},"coverage.html":{}}}],["manage/subject",{"_index":407,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/SubjectManageComponent.html":{},"coverage.html":{}}}],["manage/tree",{"_index":404,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/TreeManageComponent.html":{},"coverage.html":{}}}],["manages",{"_index":2216,"title":{},"body":{"injectables/ProductService.html":{}}}],["manually",{"_index":3395,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["margin",{"_index":313,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["marke",{"_index":1796,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{}}}],["mastertoggle",{"_index":893,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["mat",{"_index":236,"title":{},"body":{"components/AdminLandingComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{}}}],["mat_dialog_data",{"_index":929,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["matbadgemodule",{"_index":350,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["matbuttonmodule",{"_index":352,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{}}}],["matcardmodule",{"_index":3517,"title":{},"body":{"modules/TrialModule.html":{}}}],["matcheckboxmodule",{"_index":354,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["matches",{"_index":906,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["matching",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":356,"title":{},"body":{"modules/AdminModule.html":{}}}],["matdialog",{"_index":1164,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["matdialogmodule",{"_index":358,"title":{},"body":{"modules/AdminModule.html":{},"modules/SharedModule.html":{}}}],["matdialogref",{"_index":898,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["matdividermodule",{"_index":360,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["material",{"_index":3753,"title":{},"body":{"dependencies.html":{}}}],["matexpansionmodule",{"_index":3519,"title":{},"body":{"modules/TrialModule.html":{}}}],["matformfieldmodule",{"_index":362,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/TrialModule.html":{}}}],["math.round(((element.item.netprice",{"_index":2652,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["math.round(item.netprice",{"_index":2530,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["math.round(sum",{"_index":2532,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["math.round(t.amount",{"_index":1237,"title":{},"body":{"components/FoodCardComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["maticonmodule",{"_index":365,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{}}}],["matinputmodule",{"_index":367,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/TrialModule.html":{}}}],["matlistmodule",{"_index":369,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["matmenumodule",{"_index":371,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["matpaginator",{"_index":1764,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["matpaginatormodule",{"_index":373,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["matradiomodule",{"_index":3521,"title":{},"body":{"modules/TrialModule.html":{}}}],["matselectmodule",{"_index":375,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["matslidermodule",{"_index":3523,"title":{},"body":{"modules/TrialModule.html":{}}}],["matsteppermodule",{"_index":3525,"title":{},"body":{"modules/TrialModule.html":{}}}],["mattabledatasource",{"_index":920,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["mattablemodule",{"_index":377,"title":{},"body":{"modules/AdminModule.html":{}}}],["mattoolbarmodule",{"_index":379,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{}}}],["mattreemodule",{"_index":381,"title":{},"body":{"modules/AdminModule.html":{},"modules/TrialModule.html":{}}}],["mattreenesteddatasource",{"_index":757,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["max",{"_index":965,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{},"miscellaneous/variables.html":{}}}],["maxfilesize",{"_index":1526,"title":{},"body":{"components/ImageDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["maxfilesizebits",{"_index":3816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxheight",{"_index":1252,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["maxlength",{"_index":2363,"title":{},"body":{"components/RegisterComponent.html":{}}}],["maxvalue",{"_index":2467,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["maxwidth",{"_index":1254,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{}}}],["maybe",{"_index":2292,"title":{},"body":{"injectables/ProductService.html":{}}}],["meand",{"_index":619,"title":{},"body":{"injectables/EventsService.html":{}}}],["media",{"_index":1917,"title":{},"body":{"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["media(max",{"_index":1691,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["meine",{"_index":2869,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["memory",{"_index":2228,"title":{},"body":{"injectables/ProductService.html":{},"guards/TreatmentService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["message",{"_index":2375,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages",{"_index":3818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["methods",{"_index":131,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AdminUserService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["metrics",{"_index":2551,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["metrics'},{'name",{"_index":85,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["metrics.component",{"_index":630,"title":{},"body":{"injectables/EventsService.html":{},"modules/TrialModule.html":{}}}],["metrics.component.html",{"_index":2661,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics.component.scss",{"_index":2660,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics.component.ts",{"_index":2657,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"coverage.html":{}}}],["metrics.component.ts:138",{"_index":2673,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics.component.ts:163",{"_index":2678,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics.component.ts:182",{"_index":2675,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics.component.ts:25",{"_index":2679,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics.component.ts:27",{"_index":2680,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics.component.ts:30",{"_index":2668,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics.component.ts:41",{"_index":2676,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics.component.ts:51",{"_index":2683,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics.component.ts:60",{"_index":2669,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics.component.ts:70",{"_index":2670,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["metrics/shopping",{"_index":2656,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"modules/TrialModule.html":{},"coverage.html":{}}}],["middle",{"_index":1339,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["mimetype",{"_index":1578,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["mimetype.match(/image",{"_index":1580,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["min",{"_index":1013,"title":{},"body":{"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["mindestens",{"_index":2390,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mini",{"_index":1294,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["minlength",{"_index":2361,"title":{},"body":{"components/RegisterComponent.html":{}}}],["minvalue",{"_index":2465,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["miscellaneous",{"_index":3766,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":2379,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mit",{"_index":1609,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["ml",{"_index":1214,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["modal",{"_index":1708,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["model",{"_index":1769,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/TrialSubjectService.html":{}}}],["module",{"_index":325,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"overview.html":{}}}],["modules",{"_index":327,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mok",{"_index":2321,"title":{},"body":{"injectables/ProductService.html":{}}}],["mokdata",{"_index":2317,"title":{},"body":{"injectables/ProductService.html":{}}}],["mokdata.push(p.tags",{"_index":2319,"title":{},"body":{"injectables/ProductService.html":{}}}],["moliciously",{"_index":2276,"title":{},"body":{"injectables/ProductService.html":{}}}],["money",{"_index":2959,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["more",{"_index":643,"title":{},"body":{"injectables/EventsService.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"index.html":{}}}],["more_vert",{"_index":304,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["moz",{"_index":1669,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["ms",{"_index":1670,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["msg",{"_index":723,"title":{},"body":{"injectables/EventsService.html":{}}}],["multiple",{"_index":598,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ProductService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["muss",{"_index":2385,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mwst",{"_index":1280,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/TaxCreateComponent.html":{}}}],["my/items').pipe(catcherror(val",{"_index":2048,"title":{},"body":{"injectables/ItemService.html":{}}}],["my/label",{"_index":2140,"title":{},"body":{"injectables/LabelService.html":{}}}],["möchten",{"_index":2881,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["n/a",{"_index":3611,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["nach",{"_index":1907,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":1761,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["nav",{"_index":623,"title":{},"body":{"injectables/EventsService.html":{},"directives/FixedNavDirective.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["nav.directive",{"_index":3535,"title":{},"body":{"modules/TrialModule.html":{}}}],["nav.directive.ts",{"_index":1091,"title":{},"body":{"directives/FixedNavDirective.html":{},"coverage.html":{}}}],["nav.directive.ts:18",{"_index":1121,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["nav.directive.ts:48",{"_index":1112,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["nav.directive.ts:49",{"_index":1123,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["nav.directive.ts:50",{"_index":1124,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["nav.directive.ts:51",{"_index":1111,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["navback",{"_index":3207,"title":{},"body":{"components/TrialComponent.html":{}}}],["navigate",{"_index":3015,"title":{},"body":{"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"index.html":{}}}],["navigates",{"_index":3123,"title":{},"body":{"components/TreeManageComponent.html":{},"components/TrialComponent.html":{}}}],["navigating",{"_index":227,"title":{},"body":{"components/AdminLandingComponent.html":{},"guards/TreatmentService.html":{}}}],["navigation",{"_index":3238,"title":{},"body":{"components/TrialComponent.html":{}}}],["navigationend",{"_index":2415,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["navigator.useragent.indexof('firefox",{"_index":3566,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["navinfo",{"_index":1036,"title":{},"body":{"injectables/FilterService.html":{},"components/ItemGridComponent.html":{}}}],["navinfo.currentpage",{"_index":1869,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["navinfo.pagesize",{"_index":1870,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["necessary",{"_index":148,"title":{},"body":{"components/AdminHeaderComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemGridComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["need",{"_index":2252,"title":{},"body":{"injectables/ProductService.html":{},"guards/TreatmentService.html":{}}}],["needed",{"_index":1048,"title":{},"body":{"injectables/FilterService.html":{},"components/SubjectSelectComponent.html":{},"components/TrialConfigComponent.html":{}}}],["needs",{"_index":1716,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["nein",{"_index":2830,"title":{},"body":{"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["nested",{"_index":1803,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["nestedtreecontrol",{"_index":755,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["nestedtreecontrol(node",{"_index":784,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["neue",{"_index":1304,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["neuen",{"_index":2790,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["neuer",{"_index":2787,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["new",{"_index":309,"title":{},"body":{"components/AdminLandingComponent.html":{},"modules/AdminRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{},"index.html":{}}}],["newdata",{"_index":2112,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["newind",{"_index":3191,"title":{},"body":{"injectables/TreeService.html":{}}}],["newlabel",{"_index":2079,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["newscore",{"_index":2441,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["newt",{"_index":2929,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["newtax",{"_index":2888,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["newtreatment",{"_index":2930,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["newtree",{"_index":3118,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["next",{"_index":502,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ng",{"_index":3777,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1378,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{}}}],["ngfor",{"_index":771,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/SwapDialogComponent.html":{}}}],["ngif",{"_index":1847,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["ngmodule",{"_index":345,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["ngoninit",{"_index":133,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["niceness",{"_index":1887,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["nicest",{"_index":1888,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["nicht",{"_index":710,"title":{},"body":{"injectables/EventsService.html":{},"components/RegisterComponent.html":{},"components/TreatmentSelectComponent.html":{}}}],["nitems",{"_index":2537,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["noch",{"_index":2544,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["node",{"_index":745,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["node.children",{"_index":785,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["node.children.length",{"_index":854,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["node.items",{"_index":863,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["node.name",{"_index":994,"title":{},"body":{"components/FilterComponent.html":{}}}],["node.selected",{"_index":859,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["noever",{"_index":2277,"title":{},"body":{"injectables/ProductService.html":{}}}],["none",{"_index":1006,"title":{},"body":{"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["note",{"_index":2005,"title":{},"body":{"components/ItemManageComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["notfiltertree",{"_index":1083,"title":{},"body":{"injectables/FilterService.html":{},"components/TrialComponent.html":{}}}],["notfound",{"_index":2211,"title":{},"body":{"components/NotfoundComponent.html":{},"components/TreatmentSelectComponent.html":{}}}],["notfound'},{'name",{"_index":76,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["notfound.component.html",{"_index":2213,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound.component.scss",{"_index":2212,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound/notfound.component",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notfoundcomponent",{"_index":75,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notifying",{"_index":3091,"title":{},"body":{"guards/TreatmentService.html":{}}}],["notrecorded",{"_index":2403,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["now",{"_index":2254,"title":{},"body":{"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["nowrap",{"_index":973,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["nr",{"_index":1445,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["null",{"_index":715,"title":{},"body":{"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/ImageDialogComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialConfigComponent.html":{}}}],["num",{"_index":1479,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["number",{"_index":748,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["numberofitems",{"_index":3213,"title":{},"body":{"components/TrialComponent.html":{}}}],["numintotal",{"_index":1895,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["numofitems",{"_index":3660,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["numrows",{"_index":949,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["numselected",{"_index":947,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["nun",{"_index":581,"title":{},"body":{"components/EndTrialComponent.html":{}}}],["nur",{"_index":1628,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["nutritional",{"_index":1375,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["nutritionalinfo",{"_index":1486,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["o.selected",{"_index":838,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["obergruppe",{"_index":2010,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["obj",{"_index":846,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["obj).subscribe",{"_index":2642,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["obj.datasource.data",{"_index":847,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["obj.delta",{"_index":2631,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["obj.identifier",{"_index":2629,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["obj.itemid",{"_index":2630,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["obj.name",{"_index":2322,"title":{},"body":{"injectables/ProductService.html":{}}}],["obj.time",{"_index":2640,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["obj.treecontrol.datanodes",{"_index":849,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["obj.treecontrol.expandall",{"_index":850,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["object",{"_index":650,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"miscellaneous/variables.html":{}}}],["object.assign(res",{"_index":704,"title":{},"body":{"injectables/EventsService.html":{}}}],["object.assign(this.labeledit.label",{"_index":2115,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["object.assign(this.score.data",{"_index":2472,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["object.assign(this.tax.data",{"_index":2911,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["object.data",{"_index":705,"title":{},"body":{"injectables/EventsService.html":{}}}],["object.entries(this.tax.data).length",{"_index":2910,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["object.event",{"_index":701,"title":{},"body":{"injectables/EventsService.html":{}}}],["objectmodel",{"_index":1715,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["obs",{"_index":1423,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["obs.subscribe((dialogref",{"_index":1428,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["observable",{"_index":449,"title":{},"body":{"injectables/AdminUserService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["observable((sub",{"_index":525,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"injectables/ProductService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["observalble",{"_index":3662,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["of(`i",{"_index":2049,"title":{},"body":{"injectables/ItemService.html":{}}}],["official",{"_index":3335,"title":{},"body":{"components/TrialComponent.html":{}}}],["old",{"_index":2291,"title":{},"body":{"injectables/ProductService.html":{}}}],["onback",{"_index":2000,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/SubjectManageComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["once",{"_index":3020,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["onclick",{"_index":136,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["onclose",{"_index":1757,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["one",{"_index":2202,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/TrialSubjectService.html":{}}}],["oninit",{"_index":124,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialShopComponent.html":{}}}],["oninti",{"_index":234,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["online",{"_index":3486,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["onnoclick",{"_index":894,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{}}}],["onnoclick(bol",{"_index":2858,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["onresize(event",{"_index":3268,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["onsearch",{"_index":3208,"title":{},"body":{"components/TrialComponent.html":{}}}],["onsubmit",{"_index":895,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TreatmentSelectComponent.html":{}}}],["onsubmit(bol",{"_index":2837,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["onsubmit(item",{"_index":2806,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["opacity",{"_index":1637,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{}}}],["opening",{"_index":2938,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["opennav",{"_index":3555,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["operated",{"_index":875,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["opportunity",{"_index":2999,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["opt",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{}}}],["optindialog",{"_index":2667,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["optindialog(it",{"_index":2677,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["option",{"_index":1546,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["optional",{"_index":222,"title":{},"body":{"components/AdminLandingComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"miscellaneous/functions.html":{}}}],["optionen",{"_index":2823,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["options",{"_index":802,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/ItemGridComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["options/groups/allmytrees').subscribe",{"_index":3183,"title":{},"body":{"injectables/TreeService.html":{}}}],["options/groups/tree",{"_index":3185,"title":{},"body":{"injectables/TreeService.html":{}}}],["optionwollen",{"_index":2834,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["origin",{"_index":2404,"title":{},"body":{"injectables/RoutingTrackerService.html":{},"components/TrialComponent.html":{}}}],["originalamount",{"_index":1261,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["originalitem",{"_index":1259,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["originalitem.netprice",{"_index":2827,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["originalitem.vat",{"_index":2828,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["originalitem[0].brand",{"_index":2825,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["originalitem[0].name",{"_index":2824,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["originally",{"_index":2809,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["otherwise",{"_index":911,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["otion",{"_index":2700,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["out",{"_index":139,"title":{},"body":{"components/AdminHeaderComponent.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"components/ShoppingMetricsComponent.html":{},"modules/TrialModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":424,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["outlets",{"_index":1987,"title":{},"body":{"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["outline",{"_index":1671,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["output",{"_index":749,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialConfigComponent.html":{}}}],["outputs",{"_index":1107,"title":{},"body":{"directives/FixedNavDirective.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{}}}],["overflow",{"_index":967,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialShopComponent.html":{}}}],["overlay",{"_index":2793,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["overview",{"_index":3804,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrites",{"_index":2266,"title":{},"body":{"injectables/ProductService.html":{}}}],["overwritten",{"_index":1850,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["owned",{"_index":2132,"title":{},"body":{"injectables/LabelService.html":{}}}],["p",{"_index":1663,"title":{},"body":{"components/ImageDialogComponent.html":{},"injectables/ProductService.html":{}}}],["p.baseattributes",{"_index":2334,"title":{},"body":{"injectables/ProductService.html":{}}}],["p.baseattributes.length",{"_index":2335,"title":{},"body":{"injectables/ProductService.html":{}}}],["p.tags.length",{"_index":2318,"title":{},"body":{"injectables/ProductService.html":{}}}],["package",{"_index":3735,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":316,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["page",{"_index":1030,"title":{},"body":{"injectables/FilterService.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["pagesize",{"_index":1744,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["pagesizes",{"_index":1808,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["pagination",{"_index":1746,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["paginationevent",{"_index":607,"title":{},"body":{"injectables/EventsService.html":{}}}],["paginationevent(body",{"_index":645,"title":{},"body":{"injectables/EventsService.html":{}}}],["paginator",{"_index":1072,"title":{},"body":{"injectables/FilterService.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["palceholder",{"_index":1537,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["param",{"_index":248,"title":{},"body":{"components/AdminLandingComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["parameters",{"_index":221,"title":{},"body":{"components/AdminLandingComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":3446,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["params.gensubject",{"_index":3448,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["parent",{"_index":855,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"directives/ScoreDirective.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{}}}],["part",{"_index":1793,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["participant",{"_index":3024,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["participants",{"_index":3014,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["passed",{"_index":902,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["password",{"_index":2178,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["passwordmatchvalidator",{"_index":2350,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordmatchvalidator(g",{"_index":2370,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["passwort",{"_index":2191,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["path",{"_index":416,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"components/ImageDialogComponent.html":{},"modules/TrialRoutingModule.html":{}}}],["pause",{"_index":2644,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["per",{"_index":1071,"title":{},"body":{"injectables/FilterService.html":{},"components/ItemGridComponent.html":{}}}],["percent:'2.2",{"_index":1733,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["percent:\\'2.2",{"_index":1734,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["performing",{"_index":3602,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["performs",{"_index":3477,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["permanently",{"_index":2699,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["persist",{"_index":3006,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["person",{"_index":186,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/HeaderComponent.html":{}}}],["pflichtfled",{"_index":2187,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["place",{"_index":2658,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["placed",{"_index":2227,"title":{},"body":{"injectables/ProductService.html":{}}}],["placeholder",{"_index":1509,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/TrialShopComponent.html":{}}}],["placement",{"_index":1115,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["play",{"_index":240,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["play_arrow",{"_index":308,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["pointer",{"_index":975,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LoginComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{}}}],["popover",{"_index":1707,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["popover__content",{"_index":3382,"title":{},"body":{"components/TrialComponent.html":{}}}],["popover__message",{"_index":3391,"title":{},"body":{"components/TrialComponent.html":{}}}],["popover__title",{"_index":3378,"title":{},"body":{"components/TrialComponent.html":{}}}],["popover__wrapper",{"_index":3381,"title":{},"body":{"components/TrialComponent.html":{}}}],["popover__wrapper:hover",{"_index":3386,"title":{},"body":{"components/TrialComponent.html":{}}}],["popper",{"_index":3757,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":1100,"title":{},"body":{"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["positioned",{"_index":1093,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["possible",{"_index":2237,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingMetricsComponent.html":{}}}],["post",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"guards/TrialTreatmentService.html":{}}}],["posts",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["preceeding",{"_index":3425,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["preis",{"_index":1841,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["present",{"_index":773,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ImageDialogComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{}}}],["pressed",{"_index":631,"title":{},"body":{"injectables/EventsService.html":{}}}],["prevent",{"_index":1117,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["preview",{"_index":1529,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["preview(event",{"_index":1538,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["previous",{"_index":1773,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["previously",{"_index":871,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["price",{"_index":1323,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["price.additional",{"_index":1329,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["price.tax",{"_index":1485,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["prices",{"_index":2583,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["primarily",{"_index":3549,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["private",{"_index":173,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AdminUserService.html":{},"guards/AuthGuard.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["proband",{"_index":2788,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["probanden",{"_index":2777,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["probanten",{"_index":2791,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["proceed",{"_index":2705,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["process",{"_index":3629,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["prod",{"_index":3787,"title":{},"body":{"index.html":{}}}],["product",{"_index":1065,"title":{},"body":{"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"injectables/ProductService.html":{}}}],["product._id",{"_index":1446,"title":{},"body":{"components/FoodDetailsComponent.html":{},"injectables/ProductService.html":{}}}],["product.allergens",{"_index":1457,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.brand",{"_index":1273,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["product.content.displayamount",{"_index":1275,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["product.currency",{"_index":1448,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.description[0].text",{"_index":1436,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.ingredients",{"_index":1455,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.name",{"_index":1274,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["product.netprice",{"_index":1277,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.kcal",{"_index":1461,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.kj",{"_index":1459,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.protein",{"_index":1494,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.protein}}&nbsp;g",{"_index":1463,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.salt",{"_index":1499,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.salt}}&nbsp;g",{"_index":1473,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.saturatedfat",{"_index":1498,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.saturatedfat}}&nbsp;g",{"_index":1471,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.sugar",{"_index":1496,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.sugar}}&nbsp;g",{"_index":1467,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.totalcarbohydrate",{"_index":1495,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.totalcarbohydrate}}&nbsp;g",{"_index":1465,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.totalfat",{"_index":1497,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.nutritionaltable.totalfat}}&nbsp;g",{"_index":1469,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.score.amount",{"_index":1439,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.score.description",{"_index":1440,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.score.header",{"_index":1438,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["product.service",{"_index":779,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["product.tags",{"_index":2241,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.vat",{"_index":1278,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["productids",{"_index":2239,"title":{},"body":{"injectables/ProductService.html":{}}}],["production",{"_index":3788,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":1809,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/ProductService.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialRoutingModule.html":{},"guards/TrialTreatmentService.html":{}}}],["products.baseattributes",{"_index":2231,"title":{},"body":{"injectables/ProductService.html":{}}}],["products.length",{"_index":1908,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["products/:id",{"_index":3541,"title":{},"body":{"modules/TrialRoutingModule.html":{}}}],["productservice",{"_index":758,"title":{"injectables/ProductService.html":{}},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{},"injectables/ProductService.html":{},"components/SwapDialogComponent.html":{},"modules/TrialModule.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{},"overview.html":{}}}],["produkte",{"_index":996,"title":{},"body":{"components/FilterComponent.html":{},"components/ItemGridComponent.html":{},"components/TrialLandingComponent.html":{}}}],["produkten",{"_index":2549,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["produktes",{"_index":2820,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["prohibit",{"_index":641,"title":{},"body":{"injectables/EventsService.html":{}}}],["project",{"_index":3770,"title":{},"body":{"index.html":{}}}],["promise",{"_index":2248,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingMetricsComponent.html":{}}}],["promise((resolve",{"_index":2279,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["promise.all(promises",{"_index":2991,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["promisearray.push(new",{"_index":2696,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["promises",{"_index":2985,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["promises.push",{"_index":2987,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["propagate",{"_index":3180,"title":{},"body":{"injectables/TreeService.html":{}}}],["propagating",{"_index":3169,"title":{},"body":{"injectables/TreeService.html":{}}}],["propagetes",{"_index":2808,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["properly",{"_index":1102,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["properties",{"_index":128,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["protecting",{"_index":491,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protein",{"_index":1462,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["protractor",{"_index":3796,"title":{},"body":{"index.html":{}}}],["provding",{"_index":3399,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["provided",{"_index":3605,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["providedin",{"_index":447,"title":{},"body":{"injectables/AdminUserService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ImageService.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["providers",{"_index":331,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"overview.html":{}}}],["provides",{"_index":618,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"components/TrialComponent.html":{},"injectables/TrialLabelService.html":{}}}],["providing",{"_index":1694,"title":{},"body":{"injectables/ImageService.html":{},"guards/TrialTreatmentService.html":{}}}],["proxy.config.json",{"_index":3813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":889,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["puposes",{"_index":1828,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["purposes",{"_index":2092,"title":{},"body":{"components/LabelCreateComponent.html":{},"directives/ScoreDirective.html":{},"components/TaxCreateComponent.html":{},"injectables/TreeService.html":{},"components/TrialShopComponent.html":{}}}],["pushnodes",{"_index":977,"title":{},"body":{"components/FilterComponent.html":{}}}],["pushnodes(el",{"_index":844,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["put",{"_index":632,"title":{},"body":{"injectables/EventsService.html":{}}}],["putting",{"_index":3177,"title":{},"body":{"injectables/TreeService.html":{}}}],["pwd1",{"_index":2349,"title":{},"body":{"components/RegisterComponent.html":{}}}],["q1",{"_index":3016,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["q1/q1.component",{"_index":3537,"title":{},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["q1component",{"_index":3536,"title":{},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["q2",{"_index":3017,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["q2/q2.component",{"_index":3539,"title":{},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["q2component",{"_index":3538,"title":{},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["querystring",{"_index":3414,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["questionnaire",{"_index":2672,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialConfigComponent.html":{}}}],["radial",{"_index":2794,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["radius",{"_index":1360,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["rates",{"_index":282,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["react",{"_index":803,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["reactiveformsmodule",{"_index":385,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TrialModule.html":{}}}],["reader",{"_index":1583,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{}}}],["reader.addeventlistener(\"load",{"_index":1727,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["reader.onload",{"_index":1587,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["reader.readasdataurl(files[0",{"_index":1586,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["reader.readasdataurl(image",{"_index":1729,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["reader.result",{"_index":1593,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{}}}],["reading",{"_index":442,"title":{},"body":{"injectables/AdminUserService.html":{}}}],["readme",{"_index":3799,"title":{},"body":{"index.html":{}}}],["really",{"_index":2750,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["recalculated",{"_index":2591,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["recieve",{"_index":1168,"title":{},"body":{"components/FoodCardComponent.html":{},"directives/ScoreDirective.html":{}}}],["recieved",{"_index":1602,"title":{},"body":{"components/ImageDialogComponent.html":{},"injectables/TreeService.html":{}}}],["recieves",{"_index":3419,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["recieving",{"_index":2131,"title":{},"body":{"injectables/LabelService.html":{},"components/SubjectSelectComponent.html":{},"components/TaxCreateComponent.html":{},"guards/TreatmentService.html":{}}}],["record",{"_index":666,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodDetailsComponent.html":{}}}],["recorded",{"_index":671,"title":{},"body":{"injectables/EventsService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/TrialSubjectService.html":{}}}],["recordevent",{"_index":599,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["recordevent(object",{"_index":648,"title":{},"body":{"injectables/EventsService.html":{}}}],["recordfilterevents",{"_index":608,"title":{},"body":{"injectables/EventsService.html":{}}}],["recordfilterevents(filter",{"_index":651,"title":{},"body":{"injectables/EventsService.html":{}}}],["recording",{"_index":642,"title":{},"body":{"injectables/EventsService.html":{},"injectables/ShoppingCartService.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["recordoptin",{"_index":609,"title":{},"body":{"injectables/EventsService.html":{}}}],["recordoptin(data",{"_index":661,"title":{},"body":{"injectables/EventsService.html":{}}}],["records",{"_index":653,"title":{},"body":{"injectables/EventsService.html":{}}}],["recordsorting",{"_index":610,"title":{},"body":{"injectables/EventsService.html":{}}}],["recordsorting(sortoption",{"_index":663,"title":{},"body":{"injectables/EventsService.html":{}}}],["red",{"_index":1348,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{}}}],["redirect",{"_index":2671,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"components/TrialLandingComponent.html":{},"miscellaneous/variables.html":{}}}],["redirected",{"_index":3416,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["redirecturl",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["ref",{"_index":1992,"title":{},"body":{"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelCreateComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["refarray",{"_index":937,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"injectables/ProductService.html":{}}}],["refarray.includes(row._id",{"_index":944,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{}}}],["refarray.push(element.oldid",{"_index":1784,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["refarray.push(sel.oldid",{"_index":940,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["reference",{"_index":787,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ProductService.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["referenced",{"_index":2269,"title":{},"body":{"injectables/ProductService.html":{},"components/SwapDialogComponent.html":{},"injectables/TrialLabelService.html":{}}}],["referencing",{"_index":3811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":3002,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["refrencing",{"_index":1763,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["refresh",{"_index":896,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{}}}],["refreshing",{"_index":1759,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/TreeManageComponent.html":{}}}],["refreshui",{"_index":3046,"title":{},"body":{"guards/TreatmentService.html":{}}}],["register",{"_index":539,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["register'},{'name",{"_index":78,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["register.component.html",{"_index":2340,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":2339,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":537,"title":{},"body":{"modules/AuthModule.html":{}}}],["registercomponent",{"_index":77,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerdata",{"_index":557,"title":{"interfaces/RegisterData.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"coverage.html":{}}}],["registerform",{"_index":2341,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerresp",{"_index":2205,"title":{"interfaces/RegisterResp.html":{}},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"coverage.html":{}}}],["registeruser",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruser(user",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrieren",{"_index":1511,"title":{},"body":{"components/HeaderComponent.html":{},"components/LandingComponent.html":{}}}],["reinitilized",{"_index":3201,"title":{},"body":{"components/TrialComponent.html":{}}}],["reject",{"_index":2280,"title":{},"body":{"injectables/ProductService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["reject(error",{"_index":2990,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["relative",{"_index":1351,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{}}}],["relativeto",{"_index":1230,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["relevant",{"_index":3007,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["reload",{"_index":1062,"title":{},"body":{"injectables/FilterService.html":{},"components/FoodDetailsComponent.html":{},"injectables/ShoppingCartService.html":{},"components/TrialComponent.html":{},"index.html":{}}}],["reloaded",{"_index":3639,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["reloads",{"_index":3202,"title":{},"body":{"components/TrialComponent.html":{}}}],["remainder",{"_index":3215,"title":{},"body":{"components/TrialComponent.html":{}}}],["remaining",{"_index":2590,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/TrialComponent.html":{}}}],["remember",{"_index":1247,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["remembermyanswer",{"_index":2846,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["rememberstart",{"_index":1245,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["remove",{"_index":1154,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemManageComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["removefilterfromtreatment",{"_index":3155,"title":{},"body":{"injectables/TreeService.html":{}}}],["removefilterfromtreatment(treatmentid",{"_index":3166,"title":{},"body":{"injectables/TreeService.html":{}}}],["removeimg",{"_index":1530,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["removeimg(img",{"_index":1540,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["removeitemfromcart",{"_index":2575,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["removeitemfromcart(item",{"_index":2595,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["removeitemfromtreatment",{"_index":3057,"title":{},"body":{"guards/TreatmentService.html":{}}}],["removeitemfromtreatment(treatmentid",{"_index":3080,"title":{},"body":{"guards/TreatmentService.html":{}}}],["removing",{"_index":2597,"title":{},"body":{"injectables/ShoppingCartService.html":{},"guards/TreatmentService.html":{}}}],["repeat",{"_index":3498,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["repeat(1",{"_index":1656,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{}}}],["repeat(2",{"_index":1920,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["repeat(3",{"_index":1923,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["repeat(4",{"_index":1925,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["repeat(5",{"_index":1927,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["repeat(6",{"_index":1929,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["replacetreatment",{"_index":3058,"title":{},"body":{"guards/TreatmentService.html":{}}}],["replacetreatment(treatment",{"_index":3082,"title":{},"body":{"guards/TreatmentService.html":{}}}],["replacing",{"_index":3084,"title":{},"body":{"guards/TreatmentService.html":{}}}],["represent",{"_index":289,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["representing",{"_index":2244,"title":{},"body":{"injectables/ProductService.html":{}}}],["request",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/ShoppingCartService.html":{}}}],["requests",{"_index":1695,"title":{},"body":{"injectables/ImageService.html":{}}}],["required",{"_index":500,"title":{},"body":{"guards/AuthGuard.html":{}}}],["res",{"_index":700,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{}}}],["res.ended",{"_index":711,"title":{},"body":{"injectables/EventsService.html":{}}}],["res.id",{"_index":1414,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["res.started",{"_index":703,"title":{},"body":{"injectables/EventsService.html":{}}}],["resendusername",{"_index":2164,"title":{},"body":{"components/LoginComponent.html":{}}}],["reset",{"_index":341,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"injectables/FilterService.html":{},"components/ItemGridComponent.html":{},"modules/SharedModule.html":{},"components/TrialComponent.html":{},"modules/TrialModule.html":{},"overview.html":{}}}],["resetfilter",{"_index":804,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/ItemGridComponent.html":{}}}],["resetfilteremit",{"_index":1043,"title":{},"body":{"injectables/FilterService.html":{}}}],["reseting",{"_index":1823,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["resetproducts",{"_index":2224,"title":{},"body":{"injectables/ProductService.html":{}}}],["resetproducts(products",{"_index":2264,"title":{},"body":{"injectables/ProductService.html":{}}}],["resetpwd",{"_index":2165,"title":{},"body":{"components/LoginComponent.html":{}}}],["resets",{"_index":3637,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["resize",{"_index":1118,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["resolve",{"_index":422,"title":{},"body":{"modules/AdminRoutingModule.html":{},"guards/ItemResolverService.html":{},"components/ShoppingMetricsComponent.html":{},"guards/TreatmentService.html":{},"modules/TrialRoutingModule.html":{},"guards/TrialTreatmentService.html":{}}}],["resolve(bool",{"_index":2714,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["resolve(route",{"_index":3633,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["resolve(this.products.find(item",{"_index":2281,"title":{},"body":{"injectables/ProductService.html":{}}}],["resolve(val",{"_index":2989,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["resolver",{"_index":2017,"title":{},"body":{"guards/ItemResolverService.html":{},"guards/TreatmentService.html":{},"components/TrialComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["resolver.service",{"_index":392,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["resolver.service.ts",{"_index":2016,"title":{},"body":{"guards/ItemResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:19",{"_index":2018,"title":{},"body":{"guards/ItemResolverService.html":{}}}],["resp",{"_index":1620,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["resp.created",{"_index":2356,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resp.token",{"_index":2359,"title":{},"body":{"components/RegisterComponent.html":{}}}],["response",{"_index":2197,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["restricted",{"_index":2960,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["result",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result).subscribe",{"_index":2432,"title":{},"body":{"injectables/RoutingTrackerService.html":{},"components/TreatmentCreateComponent.html":{}}}],["result.amount",{"_index":1271,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["result.destination",{"_index":2429,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["result.foreach((element",{"_index":2986,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["result.item._id",{"_index":1270,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["result.origin",{"_index":2423,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["result.push(treatment.items[ind",{"_index":3096,"title":{},"body":{"guards/TreatmentService.html":{}}}],["result.time",{"_index":2430,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["resultamount",{"_index":1268,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["resultitem",{"_index":1267,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["results",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":3230,"title":{},"body":{"components/TrialComponent.html":{}}}],["retrieving",{"_index":147,"title":{},"body":{"components/AdminHeaderComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["return",{"_index":450,"title":{},"body":{"injectables/AdminUserService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["returns",{"_index":142,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AdminUserService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["reusable",{"_index":3612,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["reverse",{"_index":1911,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["rgb(228",{"_index":3379,"title":{},"body":{"components/TrialComponent.html":{}}}],["rgba(0",{"_index":1020,"title":{},"body":{"components/FilterComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["rgba(0,0,0,.12",{"_index":1688,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["rgba(0,0,0,.14",{"_index":1687,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["rgba(0,0,0,.2",{"_index":1686,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["rgba(0,0,0,0.5",{"_index":2796,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["rgba(0,0,0,0.8",{"_index":1003,"title":{},"body":{"components/FilterComponent.html":{}}}],["rgba(0,0,0,1",{"_index":1690,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["richtige",{"_index":3041,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["right",{"_index":1327,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["root",{"_index":448,"title":{},"body":{"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/ImageService.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["rotate",{"_index":1362,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["rotate(0deg",{"_index":3343,"title":{},"body":{"components/TrialComponent.html":{}}}],["rotate(120deg",{"_index":3355,"title":{},"body":{"components/TrialComponent.html":{}}}],["rotate(150deg",{"_index":3358,"title":{},"body":{"components/TrialComponent.html":{}}}],["rotate(180deg",{"_index":1364,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{}}}],["rotate(210deg",{"_index":3363,"title":{},"body":{"components/TrialComponent.html":{}}}],["rotate(240deg",{"_index":3366,"title":{},"body":{"components/TrialComponent.html":{}}}],["rotate(270deg",{"_index":3369,"title":{},"body":{"components/TrialComponent.html":{}}}],["rotate(300deg",{"_index":3372,"title":{},"body":{"components/TrialComponent.html":{}}}],["rotate(30deg",{"_index":3346,"title":{},"body":{"components/TrialComponent.html":{}}}],["rotate(330deg",{"_index":3375,"title":{},"body":{"components/TrialComponent.html":{}}}],["rotate(60deg",{"_index":3349,"title":{},"body":{"components/TrialComponent.html":{}}}],["rotate(90deg",{"_index":3352,"title":{},"body":{"components/TrialComponent.html":{}}}],["route",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"guards/AuthGuard.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemManageComponent.html":{},"components/LandingComponent.html":{},"components/NotfoundComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["route.parammap.get('treatmentid",{"_index":3656,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["routeevent",{"_index":2405,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["routeevent(router",{"_index":2408,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["router",{"_index":170,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"guards/AuthGuard.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["router.events.subscribe((event",{"_index":2421,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["router.url",{"_index":2419,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["routermodule",{"_index":412,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":436,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":487,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":498,"title":{},"body":{"guards/AuthGuard.html":{},"components/TrialComponent.html":{}}}],["routes",{"_index":411,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"modules/TrialRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routeshoppingcart",{"_index":3209,"title":{},"body":{"components/TrialComponent.html":{}}}],["routetoitemdetails",{"_index":1155,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["routetoitemdetails(id",{"_index":1186,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["routetoproducts",{"_index":3474,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["routetrackingservice",{"_index":1813,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["routing",{"_index":2400,"title":{},"body":{"injectables/RoutingTrackerService.html":{},"components/TrialLandingComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["routing.module",{"_index":348,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/TrialModule.html":{}}}],["routing.module.ts",{"_index":410,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/TrialRoutingModule.html":{}}}],["routingtrackerservice",{"_index":1814,"title":{"injectables/RoutingTrackerService.html":{}},"body":{"components/ItemGridComponent.html":{},"injectables/RoutingTrackerService.html":{},"coverage.html":{}}}],["row",{"_index":318,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["row._id",{"_index":1989,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["row.position",{"_index":956,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["rows",{"_index":908,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["run",{"_index":1558,"title":{},"body":{"components/ImageDialogComponent.html":{},"index.html":{}}}],["running",{"_index":3789,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":515,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"injectables/ProductService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1861,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/ItemService.html":{}}}],["s",{"_index":3309,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["salt",{"_index":1472,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["sanity",{"_index":3478,"title":{},"body":{"components/TrialLandingComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["sans",{"_index":1306,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["saturated",{"_index":1470,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["save",{"_index":963,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"injectables/ShoppingCartService.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["saved",{"_index":266,"title":{},"body":{"components/AdminLandingComponent.html":{},"injectables/EventsService.html":{},"components/FoodDetailsComponent.html":{},"components/ItemManageComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["saveediteditem",{"_index":2027,"title":{},"body":{"injectables/ItemService.html":{}}}],["saveediteditem(item",{"_index":2039,"title":{},"body":{"injectables/ItemService.html":{}}}],["savelabeldata",{"_index":2080,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["savenewfiltertree",{"_index":3156,"title":{},"body":{"injectables/TreeService.html":{}}}],["savenewfiltertree(tree",{"_index":3170,"title":{},"body":{"injectables/TreeService.html":{}}}],["savenewitem",{"_index":2028,"title":{},"body":{"injectables/ItemService.html":{}}}],["savenewitem(item",{"_index":2042,"title":{},"body":{"injectables/ItemService.html":{}}}],["savenewlabel",{"_index":2126,"title":{},"body":{"injectables/LabelService.html":{}}}],["savenewlabel(label",{"_index":2136,"title":{},"body":{"injectables/LabelService.html":{}}}],["savenewscore",{"_index":2493,"title":{},"body":{"injectables/ScoreService.html":{}}}],["savenewscore(body",{"_index":2498,"title":{},"body":{"injectables/ScoreService.html":{}}}],["savenewtax",{"_index":2918,"title":{},"body":{"injectables/TaxService.html":{}}}],["savenewtax(body",{"_index":2921,"title":{},"body":{"injectables/TaxService.html":{}}}],["saves",{"_index":633,"title":{},"body":{"injectables/EventsService.html":{}}}],["savescore",{"_index":2442,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["savetax",{"_index":2889,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["savetreatment",{"_index":2935,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["savetreatmentdata",{"_index":2936,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["saving",{"_index":2044,"title":{},"body":{"injectables/ItemService.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{}}}],["scaffolding",{"_index":3781,"title":{},"body":{"index.html":{}}}],["schließen",{"_index":583,"title":{},"body":{"components/EndTrialComponent.html":{}}}],["score",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["score(score",{"_index":2486,"title":{},"body":{"directives/ScoreDirective.html":{}}}],["score.description",{"_index":2464,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["score.header",{"_index":2463,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["score.maxvalue",{"_index":2468,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["score.minvalue",{"_index":2466,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["score/${body._id",{"_index":2502,"title":{},"body":{"injectables/ScoreService.html":{}}}],["score/${id",{"_index":2503,"title":{},"body":{"injectables/ScoreService.html":{}}}],["scorecreate",{"_index":435,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["scorecreatecomponent",{"_index":79,"title":{"components/ScoreCreateComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scoredata",{"_index":2470,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["scoredirective",{"_index":111,"title":{"directives/ScoreDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scores",{"_index":288,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"components/TreatmentCreateComponent.html":{}}}],["scoreservice",{"_index":2457,"title":{"injectables/ScoreService.html":{}},"body":{"components/ScoreCreateComponent.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["screen",{"_index":1918,"title":{},"body":{"components/ItemGridComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialConfigComponent.html":{}}}],["script",{"_index":1974,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["scroll",{"_index":1026,"title":{},"body":{"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/ItemAllocateDialogComponent.html":{}}}],["scrolls",{"_index":1095,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["search",{"_index":2312,"title":{},"body":{"injectables/ProductService.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["searchform",{"_index":3204,"title":{},"body":{"components/TrialComponent.html":{}}}],["searchstring",{"_index":1084,"title":{},"body":{"injectables/FilterService.html":{}}}],["security",{"_index":3748,"title":{},"body":{"dependencies.html":{}}}],["see",{"_index":2617,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/TrialLabelService.html":{}}}],["segment",{"_index":3812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sein",{"_index":2393,"title":{},"body":{"components/RegisterComponent.html":{}}}],["sel",{"_index":938,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["seleciton",{"_index":1770,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{}}}],["select",{"_index":923,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialConfigComponent.html":{}}}],["select'},{'name",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["select.component",{"_index":3433,"title":{},"body":{"components/TrialConfigComponent.html":{},"modules/TrialModule.html":{}}}],["select.component.html",{"_index":2738,"title":{},"body":{"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{}}}],["select.component.scss",{"_index":2737,"title":{},"body":{"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{}}}],["select.component.ts",{"_index":2734,"title":{},"body":{"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:12",{"_index":3030,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["select.component.ts:14",{"_index":3034,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["select.component.ts:16",{"_index":3029,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["select.component.ts:17",{"_index":2760,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["select.component.ts:19",{"_index":2758,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["select.component.ts:20",{"_index":3031,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["select.component.ts:23",{"_index":2755,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["select.component.ts:25",{"_index":2745,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["select.component.ts:27",{"_index":2744,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["select.component.ts:29",{"_index":3032,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["select.component.ts:31",{"_index":2743,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["select.component.ts:37",{"_index":2749,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["select.component.ts:48",{"_index":2751,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["select.component.ts:69",{"_index":2746,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["select/subject",{"_index":2733,"title":{},"body":{"components/SubjectSelectComponent.html":{},"modules/TrialModule.html":{},"coverage.html":{}}}],["select/treatment",{"_index":3027,"title":{},"body":{"components/TreatmentSelectComponent.html":{},"modules/TrialModule.html":{},"coverage.html":{}}}],["selectable",{"_index":2263,"title":{},"body":{"injectables/ProductService.html":{}}}],["selected",{"_index":228,"title":{},"body":{"components/AdminLandingComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialConfigComponent.html":{}}}],["selected(event",{"_index":3417,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["selectedfile",{"_index":1527,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["selectedfilter",{"_index":1037,"title":{},"body":{"injectables/FilterService.html":{}}}],["selectednode",{"_index":789,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["selecting",{"_index":2759,"title":{},"body":{"components/SubjectSelectComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["selection",{"_index":794,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"injectables/ProductService.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["selectionchange",{"_index":1833,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["selectionmodel",{"_index":930,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["selectionmodel(true",{"_index":925,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["selects",{"_index":910,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["seletion.selected",{"_index":2069,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["self",{"_index":1326,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["send",{"_index":659,"title":{},"body":{"injectables/EventsService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{}}}],["sending",{"_index":1550,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["seperate",{"_index":665,"title":{},"body":{"injectables/EventsService.html":{}}}],["serif",{"_index":1307,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["serve",{"_index":3778,"title":{},"body":{"index.html":{}}}],["server",{"_index":3776,"title":{},"body":{"index.html":{}}}],["serves",{"_index":2217,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TrialLabelService.html":{},"guards/TrialTreatmentService.html":{}}}],["service",{"_index":441,"title":{},"body":{"injectables/AdminUserService.html":{},"injectables/AuthService.html":{},"injectables/FilterService.html":{},"injectables/ImageService.html":{},"components/ItemGridComponent.html":{},"guards/ItemResolverService.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"components/SubjectSelectComponent.html":{},"injectables/TaxService.html":{},"components/TrialComponent.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["services",{"_index":797,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["services/admin",{"_index":164,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["services/events.service",{"_index":1205,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialComponent.html":{}}}],["services/events.service.ts",{"_index":591,"title":{},"body":{"injectables/EventsService.html":{},"coverage.html":{}}}],["services/events.service.ts:111",{"_index":652,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/events.service.ts:134",{"_index":664,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/events.service.ts:159",{"_index":627,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/events.service.ts:17",{"_index":670,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/events.service.ts:171",{"_index":636,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/events.service.ts:19",{"_index":677,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/events.service.ts:191",{"_index":662,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/events.service.ts:199",{"_index":646,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/events.service.ts:21",{"_index":680,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/events.service.ts:23",{"_index":615,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/events.service.ts:41",{"_index":617,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/events.service.ts:50",{"_index":649,"title":{},"body":{"injectables/EventsService.html":{}}}],["services/filter.service",{"_index":754,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemGridComponent.html":{},"components/TrialComponent.html":{},"modules/TrialModule.html":{}}}],["services/filter.service.ts",{"_index":1028,"title":{},"body":{"injectables/FilterService.html":{},"coverage.html":{}}}],["services/filter.service.ts:106",{"_index":1061,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:17",{"_index":1067,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:21",{"_index":1064,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:23",{"_index":1075,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:25",{"_index":1069,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:29",{"_index":1063,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:33",{"_index":1045,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:40",{"_index":1058,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:55",{"_index":1050,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:62",{"_index":1046,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:72",{"_index":1057,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:87",{"_index":1054,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/filter.service.ts:96",{"_index":1059,"title":{},"body":{"injectables/FilterService.html":{}}}],["services/image.service",{"_index":1561,"title":{},"body":{"components/ImageDialogComponent.html":{},"modules/SharedModule.html":{}}}],["services/item",{"_index":391,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["services/item.service",{"_index":393,"title":{},"body":{"modules/AdminModule.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{}}}],["services/label.service",{"_index":2065,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{}}}],["services/product.service",{"_index":759,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{},"components/SwapDialogComponent.html":{},"modules/TrialModule.html":{}}}],["services/product.service.ts",{"_index":2215,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["services/product.service.ts:149",{"_index":2250,"title":{},"body":{"injectables/ProductService.html":{}}}],["services/product.service.ts:16",{"_index":2268,"title":{},"body":{"injectables/ProductService.html":{}}}],["services/product.service.ts:18",{"_index":2267,"title":{},"body":{"injectables/ProductService.html":{}}}],["services/product.service.ts:20",{"_index":2225,"title":{},"body":{"injectables/ProductService.html":{}}}],["services/product.service.ts:203",{"_index":2229,"title":{},"body":{"injectables/ProductService.html":{}}}],["services/product.service.ts:28",{"_index":2265,"title":{},"body":{"injectables/ProductService.html":{}}}],["services/product.service.ts:36",{"_index":2226,"title":{},"body":{"injectables/ProductService.html":{}}}],["services/product.service.ts:61",{"_index":2247,"title":{},"body":{"injectables/ProductService.html":{}}}],["services/product.service.ts:96",{"_index":2236,"title":{},"body":{"injectables/ProductService.html":{}}}],["services/routing",{"_index":1862,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/RoutingTrackerService.html":{},"coverage.html":{}}}],["services/score.service",{"_index":2458,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["services/tax.service",{"_index":2898,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["services/treatment.service",{"_index":247,"title":{},"body":{"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["services/tree.service",{"_index":399,"title":{},"body":{"modules/AdminModule.html":{},"components/FilterAllocateDialogComponent.html":{},"components/TreeManageComponent.html":{}}}],["services/trial",{"_index":1206,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ItemGridComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{}}}],["session",{"_index":511,"title":{},"body":{"guards/AuthGuard.html":{},"components/TrialComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["session.sig",{"_index":512,"title":{},"body":{"guards/AuthGuard.html":{}}}],["sessionstorage.getitem('subjectid",{"_index":686,"title":{},"body":{"injectables/EventsService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{}}}],["sessionstorage.getitem('treatmentid",{"_index":685,"title":{},"body":{"injectables/EventsService.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["sessionstorage.setitem('subjectid",{"_index":3272,"title":{},"body":{"components/TrialComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["sessionstorage.setitem('treatmentid",{"_index":3273,"title":{},"body":{"components/TrialComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["set",{"_index":1977,"title":{},"body":{"components/ItemManageComponent.html":{},"injectables/ProductService.html":{},"directives/ScoreDirective.html":{},"injectables/ShoppingCartService.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["setdata",{"_index":1044,"title":{},"body":{"injectables/FilterService.html":{}}}],["setdata(filters",{"_index":1060,"title":{},"body":{"injectables/FilterService.html":{}}}],["setdataonreload",{"_index":3210,"title":{},"body":{"components/TrialComponent.html":{}}}],["sets",{"_index":1051,"title":{},"body":{"injectables/FilterService.html":{},"components/ItemGridComponent.html":{},"injectables/ShoppingCartService.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["setscore(score",{"_index":2484,"title":{},"body":{"directives/ScoreDirective.html":{}}}],["setsubjectid",{"_index":3590,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["setsubjectid(id",{"_index":3599,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["setter",{"_index":3098,"title":{},"body":{"guards/TreatmentService.html":{}}}],["settid(id",{"_index":2761,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["settimeout",{"_index":1435,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{}}}],["setting",{"_index":2087,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{}}}],["settings",{"_index":1033,"title":{},"body":{"injectables/FilterService.html":{}}}],["settreatment(treatment",{"_index":1975,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["settreatmentdataonreload",{"_index":3619,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["settreatmentdataonreload(treatmentdata",{"_index":3635,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["settreatmentid",{"_index":3620,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["settreatmentid(id",{"_index":3640,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["setup",{"_index":1712,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["setuptreatment",{"_index":3409,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["setuptreatment(treatmentdata",{"_index":3420,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["sh",{"_index":3578,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["shadow",{"_index":1682,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["shared/header/header.component",{"_index":3529,"title":{},"body":{"modules/TrialModule.html":{}}}],["shared/image",{"_index":394,"title":{},"body":{"modules/AdminModule.html":{}}}],["shared/shared.module",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"modules/TrialModule.html":{}}}],["sharedmodule",{"_index":466,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"modules.html":{},"overview.html":{}}}],["shop",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["shop.component",{"_index":3531,"title":{},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["shop.component.html",{"_index":1094,"title":{},"body":{"directives/FixedNavDirective.html":{},"components/TrialShopComponent.html":{}}}],["shop.component.scss",{"_index":3552,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["shop.component.ts",{"_index":3548,"title":{},"body":{"components/TrialShopComponent.html":{},"coverage.html":{}}}],["shop.component.ts:14",{"_index":3557,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["shop.component.ts:17",{"_index":3562,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["shop.component.ts:18",{"_index":3563,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["shop.component.ts:21",{"_index":3560,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["shop.component.ts:25",{"_index":3556,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["shop.component.ts:31",{"_index":3561,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["shop.component.ts:35",{"_index":3558,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["shop/cart",{"_index":3310,"title":{},"body":{"components/TrialComponent.html":{}}}],["shop/fixed",{"_index":1090,"title":{},"body":{"directives/FixedNavDirective.html":{},"modules/TrialModule.html":{},"coverage.html":{}}}],["shop/products",{"_index":3459,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["shop/trial",{"_index":3530,"title":{},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{}}}],["shoping",{"_index":3234,"title":{},"body":{"components/TrialComponent.html":{}}}],["shopping",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["shopping_cart",{"_index":1282,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/TrialComponent.html":{}}}],["shoppingcartcomponent",{"_index":81,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shoppingcartservice",{"_index":1162,"title":{"injectables/ShoppingCartService.html":{}},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{},"modules/TrialModule.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{},"overview.html":{}}}],["shoppingmetricscomponent",{"_index":84,"title":{"components/ShoppingMetricsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["short",{"_index":2914,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["shortdescription",{"_index":2906,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["show",{"_index":129,"title":{},"body":{"components/AdminHeaderComponent.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["showarray",{"_index":775,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["showback",{"_index":601,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodDetailsComponent.html":{},"components/TrialComponent.html":{}}}],["showbudget",{"_index":3214,"title":{},"body":{"components/TrialComponent.html":{}}}],["showcart",{"_index":2524,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["showcreate",{"_index":2437,"title":{},"body":{"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["showerror",{"_index":2163,"title":{},"body":{"components/LoginComponent.html":{}}}],["showform",{"_index":2075,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["showgrid",{"_index":1810,"title":{},"body":{"components/ItemGridComponent.html":{},"components/SwapDialogComponent.html":{}}}],["showimg",{"_index":1710,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["showinfo",{"_index":1379,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["showinfo(labelid",{"_index":1395,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["showing",{"_index":622,"title":{},"body":{"injectables/EventsService.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["showlabel",{"_index":1146,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["shown",{"_index":1717,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["shownav",{"_index":1937,"title":{},"body":{"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["showoptineachtime",{"_index":1241,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["showoptinstart",{"_index":1243,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialComponent.html":{}}}],["showoptions",{"_index":3626,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["showpopovercart",{"_index":3216,"title":{},"body":{"components/TrialComponent.html":{}}}],["showremainder",{"_index":2568,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/TrialComponent.html":{}}}],["showscore",{"_index":1159,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["showsearchicon",{"_index":3205,"title":{},"body":{"components/TrialComponent.html":{}}}],["showselectform",{"_index":3407,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["showsubjectselect",{"_index":3408,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["showsum",{"_index":2662,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["showswapend",{"_index":1242,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["showswaps",{"_index":1240,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialComponent.html":{}}}],["showtable",{"_index":210,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["showtagfilter",{"_index":786,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["showtax",{"_index":1160,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["showtaxinfo",{"_index":1380,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["showupload",{"_index":1528,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["shrink",{"_index":3323,"title":{},"body":{"components/TrialComponent.html":{}}}],["sich",{"_index":3490,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["sidenav",{"_index":3581,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["sie",{"_index":579,"title":{},"body":{"components/EndTrialComponent.html":{},"components/LandingComponent.html":{},"components/RegisterComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialLandingComponent.html":{}}}],["signigfyong",{"_index":1964,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["size",{"_index":1311,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["sizing",{"_index":1667,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["slice",{"_index":1747,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{}}}],["slices",{"_index":1840,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["solid",{"_index":1285,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{}}}],["sollen",{"_index":2866,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["sometimes",{"_index":2293,"title":{},"body":{"injectables/ProductService.html":{}}}],["sonderzeichen",{"_index":2388,"title":{},"body":{"components/RegisterComponent.html":{}}}],["sort",{"_index":807,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemGridComponent.html":{}}}],["sortbytagstree",{"_index":781,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["sorted",{"_index":2253,"title":{},"body":{"injectables/ProductService.html":{}}}],["sortieren",{"_index":1906,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["sorting",{"_index":667,"title":{},"body":{"injectables/EventsService.html":{},"components/ItemGridComponent.html":{},"injectables/ProductService.html":{}}}],["sortingselection",{"_index":1811,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["sortingselection($event",{"_index":1831,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["sortoption",{"_index":668,"title":{},"body":{"injectables/EventsService.html":{}}}],["sortoption.filter",{"_index":725,"title":{},"body":{"injectables/EventsService.html":{}}}],["sortoption.type",{"_index":726,"title":{},"body":{"injectables/EventsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"guards/ItemResolverService.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"injectables/ScoreService.html":{},"modules/SharedModule.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"index.html":{}}}],["sourceitem",{"_index":2854,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["space",{"_index":972,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["spacer",{"_index":193,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/HeaderComponent.html":{}}}],["spacing",{"_index":1344,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["span",{"_index":3505,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["span.call",{"_index":1478,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["special",{"_index":2203,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["specific",{"_index":280,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FoodCardComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["specificaiton",{"_index":1851,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["specificaitons",{"_index":2916,"title":{},"body":{"injectables/TaxService.html":{}}}],["specification",{"_index":220,"title":{},"body":{"components/AdminLandingComponent.html":{},"injectables/FilterService.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"injectables/ProductService.html":{},"injectables/ScoreService.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"guards/TrialTreatmentService.html":{}}}],["specificities",{"_index":3001,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["specified",{"_index":1068,"title":{},"body":{"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"injectables/ItemService.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["specifies",{"_index":1503,"title":{},"body":{"components/HeaderComponent.html":{}}}],["speichern",{"_index":2871,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["spent",{"_index":3023,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["spinner",{"_index":3332,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/.../environment.ts",{"_index":3810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":3768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/admin/admin",{"_index":117,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminRoutingModule.html":{},"coverage.html":{}}}],["src/app/admin/admin.component.ts",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/admin/admin.module.ts",{"_index":342,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/admin/filter",{"_index":884,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"coverage.html":{}}}],["src/app/admin/item",{"_index":1735,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"coverage.html":{}}}],["src/app/admin/label",{"_index":2053,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"coverage.html":{}}}],["src/app/admin/score",{"_index":2435,"title":{},"body":{"components/ScoreCreateComponent.html":{},"coverage.html":{}}}],["src/app/admin/services/admin",{"_index":439,"title":{},"body":{"injectables/AdminUserService.html":{},"coverage.html":{}}}],["src/app/admin/services/item",{"_index":2015,"title":{},"body":{"guards/ItemResolverService.html":{},"coverage.html":{}}}],["src/app/admin/services/item.service.ts",{"_index":2021,"title":{},"body":{"injectables/ItemService.html":{},"coverage.html":{}}}],["src/app/admin/services/item.service.ts:12",{"_index":2045,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/app/admin/services/item.service.ts:18",{"_index":2032,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/app/admin/services/item.service.ts:25",{"_index":2034,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/app/admin/services/item.service.ts:34",{"_index":2043,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/app/admin/services/item.service.ts:43",{"_index":2040,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/app/admin/services/item.service.ts:52",{"_index":2038,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/app/admin/services/item.service.ts:61",{"_index":2030,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/app/admin/services/label.service.ts",{"_index":2121,"title":{},"body":{"injectables/LabelService.html":{},"coverage.html":{}}}],["src/app/admin/services/label.service.ts:19",{"_index":2130,"title":{},"body":{"injectables/LabelService.html":{}}}],["src/app/admin/services/label.service.ts:28",{"_index":2134,"title":{},"body":{"injectables/LabelService.html":{}}}],["src/app/admin/services/label.service.ts:37",{"_index":2137,"title":{},"body":{"injectables/LabelService.html":{}}}],["src/app/admin/services/label.service.ts:46",{"_index":2129,"title":{},"body":{"injectables/LabelService.html":{}}}],["src/app/admin/services/label.service.ts:54",{"_index":2139,"title":{},"body":{"injectables/LabelService.html":{}}}],["src/app/admin/services/score.service.ts",{"_index":2491,"title":{},"body":{"injectables/ScoreService.html":{},"coverage.html":{}}}],["src/app/admin/services/score.service.ts:18",{"_index":2497,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/admin/services/score.service.ts:25",{"_index":2499,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/admin/services/score.service.ts:33",{"_index":2501,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/admin/services/score.service.ts:41",{"_index":2496,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/admin/services/tax.service.ts",{"_index":2915,"title":{},"body":{"injectables/TaxService.html":{},"coverage.html":{}}}],["src/app/admin/services/tax.service.ts:22",{"_index":2920,"title":{},"body":{"injectables/TaxService.html":{}}}],["src/app/admin/services/tax.service.ts:31",{"_index":2922,"title":{},"body":{"injectables/TaxService.html":{}}}],["src/app/admin/services/tax.service.ts:40",{"_index":2924,"title":{},"body":{"injectables/TaxService.html":{}}}],["src/app/admin/services/treatment.service.ts",{"_index":3045,"title":{},"body":{"guards/TreatmentService.html":{},"coverage.html":{}}}],["src/app/admin/services/treatment.service.ts:101",{"_index":3081,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:110",{"_index":3067,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:120",{"_index":3063,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:128",{"_index":3071,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:143",{"_index":3079,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:154",{"_index":3068,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:163",{"_index":3070,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:172",{"_index":3085,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:27",{"_index":3073,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:36",{"_index":3075,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:54",{"_index":3088,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:62",{"_index":3076,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:71",{"_index":3083,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:81",{"_index":3090,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/treatment.service.ts:91",{"_index":3065,"title":{},"body":{"guards/TreatmentService.html":{}}}],["src/app/admin/services/tree.service.ts",{"_index":3149,"title":{},"body":{"injectables/TreeService.html":{},"coverage.html":{}}}],["src/app/admin/services/tree.service.ts:113",{"_index":3168,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/services/tree.service.ts:122",{"_index":3160,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/services/tree.service.ts:130",{"_index":3161,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/services/tree.service.ts:137",{"_index":3162,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/services/tree.service.ts:14",{"_index":3181,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/services/tree.service.ts:16",{"_index":3179,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/services/tree.service.ts:18",{"_index":3182,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/services/tree.service.ts:24",{"_index":3163,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/services/tree.service.ts:38",{"_index":3171,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/services/tree.service.ts:53",{"_index":3165,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/services/tree.service.ts:80",{"_index":3176,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/services/tree.service.ts:97",{"_index":3174,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/admin/subject",{"_index":2727,"title":{},"body":{"components/SubjectManageComponent.html":{},"coverage.html":{}}}],["src/app/admin/tax",{"_index":2884,"title":{},"body":{"components/TaxCreateComponent.html":{},"coverage.html":{}}}],["src/app/admin/treatment",{"_index":2928,"title":{},"body":{"components/TreatmentCreateComponent.html":{},"coverage.html":{}}}],["src/app/admin/tree",{"_index":3113,"title":{},"body":{"components/TreeManageComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":483,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/_models/user.model.ts",{"_index":2195,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":490,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:12",{"_index":494,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:24",{"_index":499,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:38",{"_index":504,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:49",{"_index":506,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.module.ts",{"_index":536,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.ts",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:14",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:16",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:26",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:43",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:51",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":2159,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:15",{"_index":2172,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":2167,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:22",{"_index":2169,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:30",{"_index":2168,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:49",{"_index":2170,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:53",{"_index":2171,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/register/register.component.ts",{"_index":2338,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/register/register.component.ts:13",{"_index":2342,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:20",{"_index":2343,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:29",{"_index":2344,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/landing/landing.component.ts",{"_index":2144,"title":{},"body":{"components/LandingComponent.html":{},"coverage.html":{}}}],["src/app/notfound/notfound.component.ts",{"_index":2208,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1500,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:15",{"_index":1502,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:24",{"_index":1505,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/image",{"_index":1518,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"coverage.html":{}}}],["src/app/shared/services/image.service.ts",{"_index":1693,"title":{},"body":{"injectables/ImageService.html":{},"coverage.html":{}}}],["src/app/shared/services/image.service.ts:17",{"_index":1699,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/shared/services/image.service.ts:24",{"_index":1701,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2508,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/trial/end",{"_index":568,"title":{},"body":{"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"coverage.html":{}}}],["src/app/trial/filter/filter.component.ts",{"_index":743,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/trial/filter/filter.component.ts:110",{"_index":986,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:115",{"_index":982,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:125",{"_index":980,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:137",{"_index":981,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:147",{"_index":983,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:24",{"_index":992,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:26",{"_index":988,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:28",{"_index":990,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:30",{"_index":991,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:32",{"_index":989,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:34",{"_index":987,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:38",{"_index":979,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:50",{"_index":984,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/filter/filter.component.ts:94",{"_index":985,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/trial/food",{"_index":1140,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"directives/ScoreDirective.html":{},"coverage.html":{}}}],["src/app/trial/info",{"_index":1706,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["src/app/trial/item",{"_index":1799,"title":{},"body":{"components/ItemGridComponent.html":{},"coverage.html":{}}}],["src/app/trial/shopping",{"_index":2509,"title":{},"body":{"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"coverage.html":{}}}],["src/app/trial/subject",{"_index":2732,"title":{},"body":{"components/SubjectSelectComponent.html":{},"coverage.html":{}}}],["src/app/trial/swap",{"_index":2802,"title":{},"body":{"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"coverage.html":{}}}],["src/app/trial/treatment",{"_index":3026,"title":{},"body":{"components/TreatmentSelectComponent.html":{},"coverage.html":{}}}],["src/app/trial/trial",{"_index":590,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/HeaderComponent.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{}}}],["src/app/trial/trial.component.ts",{"_index":3198,"title":{},"body":{"components/TrialComponent.html":{},"coverage.html":{}}}],["src/app/trial/trial.component.ts:104",{"_index":3250,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:111",{"_index":3251,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:118",{"_index":3253,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:125",{"_index":3257,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:132",{"_index":3259,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:139",{"_index":3261,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:146",{"_index":3263,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:153",{"_index":3265,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:186",{"_index":3235,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:202",{"_index":3222,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:212",{"_index":3239,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:222",{"_index":3237,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:232",{"_index":3225,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:29",{"_index":3221,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:32",{"_index":3243,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:38",{"_index":3245,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:40",{"_index":3247,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:42",{"_index":3246,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:44",{"_index":3248,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:47",{"_index":3244,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:49",{"_index":3219,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.component.ts:71",{"_index":3228,"title":{},"body":{"components/TrialComponent.html":{}}}],["src/app/trial/trial.module.ts",{"_index":3512,"title":{},"body":{"modules/TrialModule.html":{}}}],["src/environments/environment",{"_index":446,"title":{},"body":{"injectables/AdminUserService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"components/InfoDialogComponent.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/SwapDialogComponent.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["src/environments/environment.prod",{"_index":169,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["src/environments/environment.ts",{"_index":3733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":780,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["started",{"_index":675,"title":{"index.html":{}},"body":{"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/FoodDetailsComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/SubjectSelectComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{}}}],["starten",{"_index":2157,"title":{},"body":{"components/LandingComponent.html":{},"components/TrialConfigComponent.html":{}}}],["starting",{"_index":1949,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["starts",{"_index":1397,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ItemManageComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["starttreatment",{"_index":3621,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["starttreatment(treatmentid",{"_index":3642,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["starttrial",{"_index":3410,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["starttrialcomponent",{"_index":3532,"title":{},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["starttrialquestionnaire",{"_index":3411,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["state",{"_index":497,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/EventsService.html":{}}}],["state.url",{"_index":520,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":3666,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1766,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["status",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilterService.html":{},"components/TrialShopComponent.html":{}}}],["step",{"_index":3645,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["steuer",{"_index":301,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["sticky",{"_index":3577,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["still",{"_index":3632,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["stimmt",{"_index":2397,"title":{},"body":{"components/RegisterComponent.html":{}}}],["storage",{"_index":3598,"title":{},"body":{"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["store",{"_index":281,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["stored",{"_index":2805,"title":{},"body":{"components/SwapDialogComponent.html":{},"index.html":{}}}],["storefront",{"_index":3769,"title":{},"body":{"index.html":{}}}],["stores",{"_index":768,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/LabelAllocateDialogComponent.html":{},"injectables/RoutingTrackerService.html":{}}}],["storing",{"_index":674,"title":{},"body":{"injectables/EventsService.html":{}}}],["str",{"_index":1232,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["str.concat(t.shortdescription",{"_index":1235,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["stretch",{"_index":1642,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["string",{"_index":238,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"injectables/LabelService.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"injectables/ProductService.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["strings",{"_index":2234,"title":{},"body":{"injectables/ProductService.html":{}}}],["structure",{"_index":297,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["style",{"_index":1011,"title":{},"body":{"components/FilterComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["sub",{"_index":2563,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["sub.complete",{"_index":731,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["sub.error('no",{"_index":3193,"title":{},"body":{"injectables/TreeService.html":{}}}],["sub.error(error",{"_index":735,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodDetailsComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["sub.next",{"_index":730,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["sub.next(dialogref",{"_index":1427,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["sub.next(false",{"_index":531,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["sub.next(this.filtertree",{"_index":1081,"title":{},"body":{"injectables/FilterService.html":{}}}],["sub.next(this.products",{"_index":2272,"title":{},"body":{"injectables/ProductService.html":{}}}],["sub.next(this.treatments",{"_index":3106,"title":{},"body":{"guards/TreatmentService.html":{}}}],["sub.next(this.treatments.filter((x",{"_index":3108,"title":{},"body":{"guards/TreatmentService.html":{}}}],["sub.next(this.trees",{"_index":3184,"title":{},"body":{"injectables/TreeService.html":{}}}],["sub.next(this.trees[ind",{"_index":3194,"title":{},"body":{"injectables/TreeService.html":{}}}],["sub.next(this.trees[newind",{"_index":3192,"title":{},"body":{"injectables/TreeService.html":{}}}],["sub.next(trialdata",{"_index":734,"title":{},"body":{"injectables/EventsService.html":{}}}],["sub.next(val",{"_index":528,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/TreeService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["sub.next(val.auth",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["subform",{"_index":2120,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["subject",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["subject.service",{"_index":682,"title":{},"body":{"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["subject.service.ts",{"_index":3585,"title":{},"body":{"injectables/TrialSubjectService.html":{},"coverage.html":{}}}],["subject.service.ts:16",{"_index":3601,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["subject.service.ts:18",{"_index":3591,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["subject.service.ts:28",{"_index":3600,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["subject.service.ts:38",{"_index":3597,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["subject.service.ts:53",{"_index":3593,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["subject.service.ts:75",{"_index":3596,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["subject/create",{"_index":3610,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["subjectform",{"_index":2740,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["subjectid",{"_index":693,"title":{},"body":{"injectables/EventsService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["subjectid).subscribe",{"_index":2605,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["subjectmanage",{"_index":419,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["subjectmanagecomponent",{"_index":86,"title":{"components/SubjectManageComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["subjects",{"_index":272,"title":{},"body":{"components/AdminLandingComponent.html":{},"directives/FixedNavDirective.html":{},"components/TreatmentCreateComponent.html":{}}}],["subjectselectcomponent",{"_index":88,"title":{"components/SubjectSelectComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["subjectservice",{"_index":1506,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subjekt",{"_index":2781,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["subjekte",{"_index":273,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["submission",{"_index":2752,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["submit",{"_index":2756,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["submiting",{"_index":2060,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["submits",{"_index":3033,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["submitted",{"_index":2835,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["subsciptions",{"_index":3127,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["subscribe",{"_index":714,"title":{},"body":{"injectables/EventsService.html":{},"injectables/ShoppingCartService.html":{},"components/SubjectSelectComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["subscribe((val",{"_index":2901,"title":{},"body":{"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["subscribes",{"_index":655,"title":{},"body":{"injectables/EventsService.html":{},"injectables/RoutingTrackerService.html":{},"components/TrialComponent.html":{}}}],["subselection",{"_index":1857,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/ProductService.html":{}}}],["subselects",{"_index":2242,"title":{},"body":{"injectables/ProductService.html":{}}}],["subset",{"_index":2245,"title":{},"body":{"injectables/ProductService.html":{}}}],["subtitle",{"_index":3502,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["success",{"_index":1269,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{}}}],["such",{"_index":3035,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["sugar",{"_index":1466,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["sum",{"_index":2527,"title":{},"body":{"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["sumcart",{"_index":3212,"title":{},"body":{"components/TrialComponent.html":{}}}],["summe",{"_index":2722,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["support",{"_index":3800,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1582,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["supports",{"_index":1839,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/ProductService.html":{}}}],["sure",{"_index":3429,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["svg",{"_index":3801,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{}}}],["swapcahin",{"_index":2663,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["swapconfig",{"_index":2836,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["swapdialog",{"_index":1156,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["swapdialogcomponent",{"_index":90,"title":{"components/SwapDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["swapended",{"_index":708,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["swapinfo",{"_index":602,"title":{},"body":{"injectables/EventsService.html":{}}}],["swapoptdialogcomponent",{"_index":92,"title":{"components/SwapOptDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["swapoptions",{"_index":1262,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["swaps",{"_index":2704,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["swapstarted",{"_index":702,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["switch",{"_index":154,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["switches",{"_index":3224,"title":{},"body":{"components/TrialComponent.html":{}}}],["switching",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"components/LabelCreateComponent.html":{}}}],["t",{"_index":698,"title":{},"body":{"injectables/EventsService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"injectables/ProductService.html":{},"injectables/RoutingTrackerService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{},"modules/TrialRoutingModule.html":{},"guards/TrialTreatmentService.html":{}}}],["t._id",{"_index":3274,"title":{},"body":{"components/TrialComponent.html":{}}}],["t.amount",{"_index":1421,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/InfoDialogComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["t.data.name",{"_index":993,"title":{},"body":{"components/FilterComponent.html":{}}}],["t.description",{"_index":1732,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["t.header",{"_index":1442,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/InfoDialogComponent.html":{}}}],["t.shortdescription",{"_index":1443,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/InfoDialogComponent.html":{}}}],["t/${this.treatmentservice.gettreatmentid()}/s/${this.subjectservice.getsubjectid()}/shop/products",{"_index":1507,"title":{},"body":{"components/HeaderComponent.html":{}}}],["t//s",{"_index":3199,"title":{},"body":{"components/TrialComponent.html":{}}}],["t/:treatmentid",{"_index":3542,"title":{},"body":{"modules/TrialRoutingModule.html":{}}}],["t/:treatmentid/s/:subjectid/end",{"_index":3546,"title":{},"body":{"modules/TrialRoutingModule.html":{}}}],["t/:treatmentid/s/:subjectid/q1",{"_index":3544,"title":{},"body":{"modules/TrialRoutingModule.html":{}}}],["t/:treatmentid/s/:subjectid/q2",{"_index":3545,"title":{},"body":{"modules/TrialRoutingModule.html":{}}}],["t/:treatmentid/s/:subjectid/shop",{"_index":3540,"title":{},"body":{"modules/TrialRoutingModule.html":{}}}],["t/:treatmentid/s/:subjectid/start",{"_index":3543,"title":{},"body":{"modules/TrialRoutingModule.html":{}}}],["t/?gensubject=yes",{"_index":3401,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["table",{"_index":237,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3734,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1818,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/ProductService.html":{}}}],["tagfilter",{"_index":865,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"injectables/ProductService.html":{}}}],["tags",{"_index":815,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/ProductService.html":{}}}],["tags',tree",{"_index":808,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["tagtreecontrol",{"_index":783,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["take",{"_index":1860,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["tap",{"_index":1672,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["target",{"_index":3470,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["tausch",{"_index":2816,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["tauschoptionen",{"_index":2860,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["tax",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["tax.description",{"_index":2905,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["tax.header",{"_index":2904,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["tax.shortdescription",{"_index":2907,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["taxcreate",{"_index":434,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["taxcreatecomponent",{"_index":94,"title":{"components/TaxCreateComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taxdata",{"_index":2908,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["taxed",{"_index":1441,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["taxes",{"_index":1236,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/ShoppingCartService.html":{},"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"components/TreatmentCreateComponent.html":{}}}],["taxservice",{"_index":2897,"title":{"injectables/TaxService.html":{}},"body":{"components/TaxCreateComponent.html":{},"injectables/TaxService.html":{},"coverage.html":{}}}],["td",{"_index":964,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["teilnahme",{"_index":578,"title":{},"body":{"components/EndTrialComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["test",{"_index":307,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/HeaderComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{},"index.html":{}}}],["tests",{"_index":3791,"title":{},"body":{"index.html":{}}}],["text",{"_index":969,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ProductService.html":{},"components/ShoppingCartComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{}}}],["th",{"_index":1488,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["then((item",{"_index":1416,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["then((val",{"_index":2992,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.$recordevent.subscribe((val",{"_index":687,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.activatedroute",{"_index":3305,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.activatedroute.queryparams.subscribe(async",{"_index":3445,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.activatedroute.snapshot.data.treatment",{"_index":2954,"title":{},"body":{"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":2964,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('treatmentid",{"_index":3437,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.activatedroute.snapshot.queryparammap.has('quest",{"_index":3457,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.adminuserservice.getuserinfo().subscribe",{"_index":175,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["this.authservice.checklogincredentials().subscribe",{"_index":526,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.isloggedin",{"_index":2184,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(logind).subscribe",{"_index":2183,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.registeruser(user).subscribe",{"_index":2355,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.baseattributes.findindex(x",{"_index":830,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.baseattributes.foreach(element",{"_index":839,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.baseattributes.push",{"_index":822,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.baseattributes.some(o",{"_index":837,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.baseattributes[ind].selected",{"_index":833,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.btndisabled",{"_index":2765,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["this.canactivate(route",{"_index":524,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.cart",{"_index":2594,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.cart.findindex(x",{"_index":2610,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.cart.foreach(element",{"_index":2646,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.cart.length",{"_index":2624,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.cart.push",{"_index":2618,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.cart.splice(ind",{"_index":2622,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.cart[ind].amount",{"_index":2621,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.cart[index].amount",{"_index":2613,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.cart[this.cart.findindex(x",{"_index":2626,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.checklogin(url",{"_index":522,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.checklogin(url).subscribe",{"_index":521,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.checkshow",{"_index":2535,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.closeedit.emit(true",{"_index":2047,"title":{},"body":{"injectables/ItemService.html":{},"injectables/TreeService.html":{}}}],["this.closeeditemitter",{"_index":1985,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["this.counter",{"_index":1223,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.createimagefromblob(blob",{"_index":1725,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.currentpage",{"_index":1867,"title":{},"body":{"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["this.data.allitems",{"_index":1779,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["this.data.alllabel",{"_index":2067,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["this.data.amount",{"_index":2815,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["this.data.filters",{"_index":939,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["this.data.filters.length",{"_index":936,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["this.data.item",{"_index":2855,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["this.data.item._id",{"_index":1573,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["this.data.item.image",{"_index":1564,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.data.item.image.full",{"_index":1569,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.data.item.img",{"_index":1570,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.data.item.itemid",{"_index":1617,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.data.items.foreach(element",{"_index":1783,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["this.data.items.includes(row._id",{"_index":1778,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["this.data.items.length",{"_index":1782,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["this.data.object",{"_index":1719,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.data.object.img",{"_index":1720,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.data.object.img.data.type",{"_index":1724,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.data.ref",{"_index":1563,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{}}}],["this.data.selecteditems.includes(row._id",{"_index":1780,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["this.data.selectedlabel.includes(row._id",{"_index":2068,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["this.datasource",{"_index":254,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["this.datasource.data",{"_index":959,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["this.datasource.data.foreach((row",{"_index":1777,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["this.datasource.data.foreach(row",{"_index":941,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["this.datasource.data.length",{"_index":950,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["this.datasource.data.slice(start",{"_index":1794,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["this.datasource.data.sort((a",{"_index":1901,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.datasource.findindex(x",{"_index":2475,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.datasource.paginator",{"_index":1785,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["this.datasource.paginator.length",{"_index":1787,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["this.datasource.push(score",{"_index":2474,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.datasource.slice",{"_index":1795,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["this.datasource.splice(ind",{"_index":2480,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.datasource[ind",{"_index":2478,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.deselectpreviousnode",{"_index":858,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.deviceheight",{"_index":3441,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.devicewidth",{"_index":3440,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.devicewidth}).topromise",{"_index":3455,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.dialog.open(filterallocatedialogcomponent",{"_index":2984,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.dialog.open(imagedialogcomponent",{"_index":1991,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":1426,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["this.dialog.open(itemallocatedialogcomponent",{"_index":2980,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.dialog.open(swapdialogcomponent",{"_index":1264,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["this.dialog.open(swapoptdialogcomponent",{"_index":1250,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{}}}],["this.dialogref.close",{"_index":957,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/SwapDialogComponent.html":{}}}],["this.dialogref.close(bol",{"_index":2859,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["this.dialogref.close(this.selection.selected",{"_index":958,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["this.dialogref.disableclose",{"_index":2844,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["this.edited",{"_index":2996,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.edittreatmentitem",{"_index":1984,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["this.el",{"_index":1139,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["this.el.nativeelement.offsetwidth",{"_index":1130,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["this.el.nativeelement.style.backgroundcolor",{"_index":2488,"title":{},"body":{"directives/ScoreDirective.html":{}}}],["this.el.nativeelement.style.height",{"_index":2487,"title":{},"body":{"directives/ScoreDirective.html":{}}}],["this.el.nativeelement.style.marginleft",{"_index":2490,"title":{},"body":{"directives/ScoreDirective.html":{}}}],["this.el.nativeelement.style.position",{"_index":1132,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["this.el.nativeelement.style.top",{"_index":1133,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["this.el.nativeelement.style.width",{"_index":1135,"title":{},"body":{"directives/FixedNavDirective.html":{},"directives/ScoreDirective.html":{}}}],["this.emitshowremainder(false",{"_index":2625,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.emitshowremainder(true",{"_index":2608,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.eventsservice.$recordevent.emit",{"_index":1258,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["this.eventsservice.emitshowback(false",{"_index":1881,"title":{},"body":{"components/ItemGridComponent.html":{},"components/TrialComponent.html":{}}}],["this.eventsservice.emitshowback(true",{"_index":1410,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/TrialComponent.html":{}}}],["this.eventsservice.endshoppingsession(this.shoppingcartservice.getcart()).subscribe",{"_index":2706,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.eventsservice.endtrial().topromise",{"_index":2709,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.eventsservice.endtrial(this.shoppingcartservice.getcart()).subscribe",{"_index":2701,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.eventsservice.paginationevent({currentpage",{"_index":1893,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.eventsservice.recordfilterevents",{"_index":3282,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.eventsservice.recordfilterevents(filter",{"_index":3284,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.eventsservice.recordoptin(data).subscribe",{"_index":2856,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["this.eventsservice.recordsorting(filter",{"_index":1900,"title":{},"body":{"components/ItemGridComponent.html":{},"components/TrialComponent.html":{}}}],["this.eventsservice.showback.subscribe((bool",{"_index":3297,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.f",{"_index":1131,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["this.fb.group",{"_index":2108,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["this.fetchtreatements",{"_index":250,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["this.filtered.emit(this.selectedfilter",{"_index":1087,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.filtereditems",{"_index":2271,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.filtereditems.foreach(element",{"_index":2305,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.filtereditems.push",{"_index":2290,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.filtereditems.push(item",{"_index":2302,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.filterservice._getnavinfo",{"_index":1864,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.filterservice._setnavinfo",{"_index":1865,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.filterservice.categoryfilter(node.name",{"_index":860,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.filterservice.filtered.subscribe((filter",{"_index":3283,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.filterservice.filtered.subscribe((val",{"_index":1877,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.filterservice.filteritems(limit",{"_index":883,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.filterservice.filteritems(node.items",{"_index":866,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.filterservice.filteritems(node.name",{"_index":864,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.filterservice.filteritems(this.searchform.controls.search.value",{"_index":3302,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.filterservice.filteritems(this.selectednode.name",{"_index":881,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.filterservice.getfiltertrees().subscribe((val",{"_index":805,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.filterservice.resetfilter.subscribe",{"_index":834,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemGridComponent.html":{},"components/TrialComponent.html":{}}}],["this.filterservice.resetfilteremit",{"_index":882,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemGridComponent.html":{},"components/TrialComponent.html":{}}}],["this.filterservice.selectedfilter",{"_index":823,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemGridComponent.html":{}}}],["this.filterservice.selectedfilter.filter",{"_index":827,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.filterservice.selectedfilter.type",{"_index":824,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemGridComponent.html":{}}}],["this.filterservice.setdata(treatmentdata.filters",{"_index":3653,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.filtertree",{"_index":1078,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.finalcheckout",{"_index":2692,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.fixed.emit",{"_index":1137,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["this.formdata",{"_index":1612,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.formdata.append('image",{"_index":1614,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.formdata.append('itemid",{"_index":1613,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.formdata.append('labelid",{"_index":1623,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.getalltreatments().subscribe((val",{"_index":3107,"title":{},"body":{"guards/TreatmentService.html":{}}}],["this.getalltrees().subscribe",{"_index":3190,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.getlabels",{"_index":2106,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["this.getnewtreatmentid",{"_index":3112,"title":{},"body":{"guards/TreatmentService.html":{}}}],["this.getscores",{"_index":2459,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.getspecifictreatmentdata(id).subscribe",{"_index":3657,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.gettaxes",{"_index":2899,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["this.gettrees",{"_index":3138,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["this.http.delete(environment.apiuri",{"_index":2052,"title":{},"body":{"injectables/ItemService.html":{},"injectables/LabelService.html":{},"injectables/ScoreService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{}}}],["this.http.get",{"_index":3609,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["this.http.get(`${environment.apiuri}/options/tax",{"_index":2925,"title":{},"body":{"injectables/TaxService.html":{}}}],["this.http.get(environment.apiuri",{"_index":182,"title":{},"body":{"components/AdminHeaderComponent.html":{},"injectables/AdminUserService.html":{},"injectables/AuthService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"injectables/ProductService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialLabelService.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["this.http.post(`${environment.apiuri}/options/tax",{"_index":2926,"title":{},"body":{"injectables/TaxService.html":{}}}],["this.http.post(`${environment.apiuri}/start/trial/${treatmentid}/${subjectid",{"_index":3663,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.http.post(environment.apiuri",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImageService.html":{},"injectables/ItemService.html":{},"injectables/LabelService.html":{},"injectables/ScoreService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"injectables/TrialSubjectService.html":{}}}],["this.http.put(`${environment.apiuri}/options/tax/${body._id",{"_index":2927,"title":{},"body":{"injectables/TaxService.html":{}}}],["this.http.put(`${environment.apiuri}/trial/filter/${treatmentandsubjecturl",{"_index":721,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.http.put(`${environment.apiuri}/trial/pagination/${treatmentid}/${subjectid",{"_index":739,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.http.put(`${environment.apiuri}/trial/swapopts/${treatmentid}/${subjectid",{"_index":737,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.http.put(environment.apiuri",{"_index":712,"title":{},"body":{"injectables/EventsService.html":{},"injectables/ItemService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{}}}],["this.id",{"_index":3443,"title":{},"body":{"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{}}}],["this.idlater",{"_index":3438,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.imagebloburl",{"_index":1728,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.imagepath",{"_index":1585,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.images.emit(this.imgurl",{"_index":1599,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.imageservice.uploadimagetoitem(this.formdata).subscribe",{"_index":1619,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.imageservice.uploadimagetolabel(this.formdata).subscribe",{"_index":1625,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.imgurl.length",{"_index":1603,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.imgurl.push('./assets/traktor_placeholder.jpeg",{"_index":1604,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.imgurl.push('assets/placeholder/placeholder",{"_index":1565,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.imgurl.push(environment.apiuri",{"_index":1568,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.imgurl.push(reader.result",{"_index":1595,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.imgurl.splice(this.imgurl.findindex(x",{"_index":1605,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.imgurl[0",{"_index":1592,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.innerwidth",{"_index":3269,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["this.isallselected",{"_index":951,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["this.isfirefox",{"_index":3565,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["this.items",{"_index":1775,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["this.items.length",{"_index":2684,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.items.push",{"_index":2814,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["this.items.splice(this.items.findindex(x",{"_index":1994,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["this.itemservice.closeedit.subscribe",{"_index":1986,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["this.itemservice.deletebaseitem(id).subscribe",{"_index":1993,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["this.itemservice.getallitems",{"_index":2020,"title":{},"body":{"guards/ItemResolverService.html":{}}}],["this.itemservice.getallitems().subscribe",{"_index":1781,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["this.iterateswaps(it",{"_index":2691,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.iterator",{"_index":1890,"title":{},"body":{"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["this.iterator(currentpage",{"_index":1792,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["this.iterator(this.paginator.pageindex",{"_index":1788,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["this.label",{"_index":2066,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["this.labeledit",{"_index":2109,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["this.labeledit.label._id",{"_index":2116,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["this.labeledit.labelform.controls.description.value",{"_index":2114,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["this.labeledit.labelform.controls.header.value",{"_index":2113,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["this.labelservice.deletespecificlabel(element._id).subscribe((val",{"_index":2111,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["this.labelservice.getallmylabel().subscribe((label",{"_index":2107,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["this.labelservice.savenewlabel(this.labeledit.label).subscribe",{"_index":2117,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["this.labelservice.updatespecificlabel(this.labeledit.label",{"_index":2118,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["this.lengthproducts",{"_index":1873,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.limitselection",{"_index":841,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.location.back",{"_index":3311,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.loginform",{"_index":2176,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.password.value",{"_index":2182,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.username.value",{"_index":2181,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.lookupinfo",{"_index":717,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.maxfilesize",{"_index":1591,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.message",{"_index":1581,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.nav",{"_index":3564,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["this.navinfo",{"_index":1052,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.newt",{"_index":2962,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.newtreatment",{"_index":2955,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.newtreatment._id",{"_index":2982,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.newtreatment.description",{"_index":2969,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.newtreatment.filters",{"_index":2957,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.newtreatment.items",{"_index":2956,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.newtreatment.name",{"_index":2968,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.newtreatment.subjectoptions",{"_index":2958,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.notrecorded.push(result",{"_index":2434,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["this.numberofitems",{"_index":3295,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.onnoclick(bol",{"_index":2857,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["this.optindialog(it",{"_index":2697,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.optindialog(null",{"_index":2690,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.origin",{"_index":2418,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["this.originalitem",{"_index":2810,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["this.pagesize",{"_index":1866,"title":{},"body":{"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["this.paginator",{"_index":1786,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["this.paginator.pagesize",{"_index":1789,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["this.param",{"_index":1413,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["this.product",{"_index":1251,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.product._id",{"_index":1260,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.product.content.amountinkg",{"_index":1215,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["this.product.content.displayamount",{"_index":1212,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["this.product.label.length",{"_index":1209,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["this.product.netprice",{"_index":1219,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["this.product.score.amount",{"_index":1227,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.product.score.maxvalue",{"_index":1225,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.product.score.minvalue",{"_index":1226,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.product.swaps",{"_index":1263,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.product.swaps.length",{"_index":1249,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.product.taxes",{"_index":1233,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.product.taxes.length",{"_index":1234,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.product.vat",{"_index":1239,"title":{},"body":{"components/FoodCardComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["this.product.vat)).tofixed(2",{"_index":1220,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["this.products",{"_index":1872,"title":{},"body":{"components/ItemGridComponent.html":{},"injectables/ProductService.html":{}}}],["this.products.filter(x",{"_index":2295,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.products.foreach((item",{"_index":2300,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.products.length",{"_index":1874,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.products.sort((a",{"_index":1883,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.productservice.filtereditems",{"_index":1905,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.productservice.getallproducts().pipe(take(1)).subscribe((res",{"_index":1871,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.productservice.getallproducts().subscribe((val",{"_index":1880,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.productservice.getbaseattributes().foreach(val",{"_index":821,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.productservice.getitemsbasedonfilter([this.data.originalitem",{"_index":2811,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["this.productservice.getitemsbasedonfilter(this.data.items",{"_index":2812,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["this.productservice.getitemsbasedonfilter(this.filterservice.selectedfilter.filter",{"_index":1876,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.productservice.getitemsbasedonfilter(val.filter",{"_index":1878,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.productservice.getproduct(this.param",{"_index":1415,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["this.productservice.gettreeoftagsofallproducts",{"_index":809,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.productservice.resetproducts(treatmentdata.items",{"_index":3652,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.pruducts",{"_index":2278,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.pushnodes(element",{"_index":812,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.recordevent(val",{"_index":688,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.recordfilterevents",{"_index":689,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.recording",{"_index":3608,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["this.refresh",{"_index":935,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["this.refreshui.emit",{"_index":3109,"title":{},"body":{"guards/TreatmentService.html":{}}}],["this.registerform",{"_index":2345,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.email.value",{"_index":2353,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.password.seterrors",{"_index":2360,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.password.value",{"_index":2354,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.username.seterrors",{"_index":2366,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.username.value",{"_index":2352,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.remember",{"_index":2845,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["this.remember.value",{"_index":2850,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["this.resetfilter.emit(true",{"_index":1089,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.route",{"_index":1231,"title":{},"body":{"components/FoodCardComponent.html":{},"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialLandingComponent.html":{}}}],["this.route.params.subscribe",{"_index":1411,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["this.route.snapshot.data.items",{"_index":1981,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["this.route.snapshot.queryparammap.get('gensubject",{"_index":3436,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.route.snapshot.url[0].path",{"_index":3139,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["this.routeevent(this.router",{"_index":2417,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["this.router.navigate",{"_index":184,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["this.router.navigate(['/admin",{"_index":2001,"title":{},"body":{"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/ScoreCreateComponent.html":{},"components/SubjectManageComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["this.router.navigate(['/admin/treatmentedit",{"_index":2976,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.router.navigate(['/login",{"_index":527,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/shop",{"_index":1418,"title":{},"body":{"components/FoodDetailsComponent.html":{},"injectables/ProductService.html":{}}}],["this.router.navigate(['/t",{"_index":3307,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["this.router.navigate(['admin/treatmentedit",{"_index":257,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["this.router.navigate(['products",{"_index":3304,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["this.router.navigate([`/t/${this.id}/s/${this.subjectid}/q1",{"_index":3458,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.router.navigate([`/t/${treatmentid}/s/${subjectid}/end",{"_index":2710,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.router.navigate([`/t/${treatmentid}/s/${subjectid}/q2",{"_index":2708,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.router.navigate([id",{"_index":1229,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["this.router.routerstate.snapshot.url.includes('products",{"_index":3303,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.router.url",{"_index":3292,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.score.data",{"_index":2461,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.score.data._id",{"_index":2476,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.score.form",{"_index":2462,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.score.form.value",{"_index":2471,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.scoreservice.deletescore(element._id).subscribe",{"_index":2479,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.scoreservice.getallscores().subscribe",{"_index":2460,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.scoreservice.savenewscore(this.score.data).subscribe",{"_index":2473,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.scoreservice.updatescoreinformation(this.score.data).subscribe",{"_index":2477,"title":{},"body":{"components/ScoreCreateComponent.html":{}}}],["this.searchform.controls.search.value",{"_index":3301,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.searchform.reset",{"_index":3280,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.selected.emit(this.subjectform.controls.subjectid.value",{"_index":2771,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["this.selected.emit(val",{"_index":2773,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["this.selectedfile",{"_index":1600,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.selectedfilter",{"_index":1082,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.selectednode",{"_index":835,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.selectednode.selected",{"_index":836,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.selection.clear",{"_index":952,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["this.selection.isselected(row",{"_index":955,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["this.selection.select(row",{"_index":946,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["this.selection.selected.length",{"_index":948,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["this.setdataonreload",{"_index":3275,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.setsubjectid(sessionstorage.getitem('subjectid",{"_index":3606,"title":{},"body":{"injectables/TrialSubjectService.html":{}}}],["this.settreatmentid(id",{"_index":3654,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.settreatmentid(sessionstorage.getitem('treatmentid",{"_index":3647,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.settreatmentid(treatmentdata._id",{"_index":3650,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.setup",{"_index":1875,"title":{},"body":{"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["this.shoppingcartservice.additemtocart(item",{"_index":2720,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.shoppingcartservice.additemtocart(result.item",{"_index":1272,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["this.shoppingcartservice.additemtocart(this.product",{"_index":1257,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.shoppingcartservice.calcsumpriceofitems",{"_index":2689,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{}}}],["this.shoppingcartservice.cart",{"_index":3286,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.shoppingcartservice.cart.length",{"_index":3287,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.shoppingcartservice.changeamountofitem(item",{"_index":2534,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.shoppingcartservice.getandsetcart",{"_index":3651,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.shoppingcartservice.getcart",{"_index":2523,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{}}}],["this.shoppingcartservice.removeitemfromcart(item",{"_index":2536,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.shoppingcartservice.removeitemfromcart(item.item",{"_index":2721,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.shoppingcartservice.showremainder.subscribe((val",{"_index":3278,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.show",{"_index":178,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{}}}],["this.showarray",{"_index":814,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.showback",{"_index":3300,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.showback.emit(bool",{"_index":692,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.showcart",{"_index":2526,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.showcreate",{"_index":2469,"title":{},"body":{"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["this.showerror",{"_index":2185,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showform",{"_index":2110,"title":{},"body":{"components/LabelCreateComponent.html":{}}}],["this.showgrid",{"_index":1882,"title":{},"body":{"components/ItemGridComponent.html":{},"components/SwapDialogComponent.html":{}}}],["this.showimg",{"_index":1721,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.showlabel",{"_index":1210,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.shownav",{"_index":1983,"title":{},"body":{"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["this.showremainder",{"_index":3279,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.showremainder.emit(bool",{"_index":2607,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.showsearchicon",{"_index":3281,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.showselectform",{"_index":3439,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.showsubjectselect",{"_index":3444,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.showsum",{"_index":2685,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.showtable",{"_index":255,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/TaxCreateComponent.html":{}}}],["this.showtagfilter",{"_index":818,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.showupload",{"_index":1596,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["this.sortbytagstree",{"_index":816,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.sortbytagstree.length",{"_index":817,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.starttrial",{"_index":3453,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.starttrialquestionnaire",{"_index":3454,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.subjectform.controls.subjectid.seterrors",{"_index":2769,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["this.subjectform.controls.subjectid.value",{"_index":2768,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["this.subjectform.invalid",{"_index":2766,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["this.subjectid",{"_index":2635,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/TrialConfigComponent.html":{}}}],["this.subjectid).topromise",{"_index":3451,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.submitted",{"_index":2848,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["this.subselection",{"_index":2304,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.subselection.push(element",{"_index":2309,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.swapdialog().subscribe",{"_index":1256,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.swapinfo",{"_index":707,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.tags.length",{"_index":819,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.tax.data",{"_index":2902,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["this.tax.form",{"_index":2903,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["this.tax.form.value",{"_index":2909,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["this.taxservice.getalltaxes",{"_index":2900,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["this.taxservice.savenewtax(this.tax.data",{"_index":2912,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["this.taxservice.updatetaxinformation(this.tax.data).subscribe",{"_index":2913,"title":{},"body":{"components/TaxCreateComponent.html":{}}}],["this.treatementservice.deletespecifictreatment(element._id).subscribe",{"_index":256,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["this.treatementservice.getalldataoftreatment(element._id).subscribe",{"_index":259,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["this.treatementservice.getalltreatments().subscribe",{"_index":251,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["this.treatementservice.getitemsoftreatment(this.data.treatmentid",{"_index":1776,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["this.treatementservice.getspecifictreatment(this.route.snapshot.url[1].path",{"_index":3141,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["this.treatementservice.refreshui.subscribe",{"_index":3143,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["this.treatementservice.replacetreatment(val",{"_index":3147,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["this.treatment",{"_index":1979,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["this.treatment.items",{"_index":1982,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["this.treatmentdata",{"_index":3649,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.treatmentdata.items[0].currency",{"_index":3658,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.treatmentdata.showoptions",{"_index":3659,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.treatmentdata.swapconfig",{"_index":3661,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["this.treatmentedit",{"_index":3140,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["this.treatmentform",{"_index":2961,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.treatmentform.controls.description.value",{"_index":2979,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.treatmentform.controls.name.value",{"_index":2978,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.treatmentform.controls.treatment.seterrors",{"_index":3038,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["this.treatmentform.disable",{"_index":2970,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.treatmentform.enable",{"_index":2995,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.treatmentform.valid",{"_index":3036,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["this.treatmentid",{"_index":2636,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/SubjectSelectComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["this.treatmentid.emit(val",{"_index":3039,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["this.treatments",{"_index":3105,"title":{},"body":{"guards/TreatmentService.html":{}}}],["this.treatments.findindex(x",{"_index":3099,"title":{},"body":{"guards/TreatmentService.html":{}}}],["this.treatments.splice(ind",{"_index":3101,"title":{},"body":{"guards/TreatmentService.html":{}}}],["this.treatments[this.treatments.findindex(x",{"_index":3093,"title":{},"body":{"guards/TreatmentService.html":{}}}],["this.treatmentservice.addfiltertotreatment(this.newtreatment._id",{"_index":2988,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.treatmentservice.additemstotreatment(this.newtreatment._id",{"_index":2983,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.treatmentservice.deletespecifictreatment(this.newtreatment._id).subscribe",{"_index":2997,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.treatmentservice.emitrefreshui",{"_index":1999,"title":{},"body":{"components/ItemManageComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["this.treatmentservice.getspecifictreatment(this.activatedroute.snapshot.parammap.get('id')).subscribe",{"_index":2966,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.treatmentservice.refreshui.subscribe",{"_index":2973,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.treatmentservice.removeitemfromtreatment(this.treatment._id",{"_index":1996,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["this.treatmentservice.replacetreatment(element",{"_index":2993,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.treatmentservice.replacetreatment(val",{"_index":1998,"title":{},"body":{"components/ItemManageComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["this.treatmentservice.updatespecifictreatment(this.newtreatment).subscribe",{"_index":2975,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.trees",{"_index":934,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{}}}],["this.trees.findindex(x",{"_index":3188,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.trees.length",{"_index":3189,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.trees.push(obj",{"_index":851,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["this.trees.push(val",{"_index":3187,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.treeservice.closeedit.subscribe",{"_index":3136,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["this.treeservice.deletebasefilter(element._id).subscribe",{"_index":3148,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["this.treeservice.getalltrees().subscribe",{"_index":3144,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["this.treeservice.getalltrees().subscribe((val",{"_index":933,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{}}}],["this.treeservice.removefilterfromtreatment(this.route.snapshot.url[1].path",{"_index":3146,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["this.treeservice.updatefilterlist.subscribe",{"_index":3137,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["this.triallabelservice.getlabelbyid(labelid).subscribe",{"_index":1424,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["this.trialsubject.recording",{"_index":695,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.trialsubjectservice.checkdatarecording(t._id",{"_index":3276,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.trialsubjectservice.checkdatarecording(this.treatmentid",{"_index":2767,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["this.trialsubjectservice.generatenewsubject(this.id).topromise",{"_index":3449,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.trialsubjectservice.generatenewsubject(this.treatmentid).subscribe((val",{"_index":2772,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["this.trialsubjectservice.getsubjectid",{"_index":2633,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/TrialComponent.html":{}}}],["this.trialsubjectservice.getsubjectid()).subscribe((val",{"_index":3277,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.trialsubjectservice.recording",{"_index":2422,"title":{},"body":{"injectables/RoutingTrackerService.html":{},"components/ShoppingMetricsComponent.html":{}}}],["this.trialsubjectservice.setsubjectid(this.activatedroute.snapshot.parammap.get('subjectid",{"_index":3271,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.trialtreatmentservice.checkroute",{"_index":3481,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["this.trialtreatmentservice.getcurrency",{"_index":2688,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"components/TrialComponent.html":{}}}],["this.trialtreatmentservice.getdisplayoptions().numofitems",{"_index":1848,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["this.trialtreatmentservice.getdisplayoptions().showbudget",{"_index":3289,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.trialtreatmentservice.getdisplayoptions().showpopovercart",{"_index":3293,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.trialtreatmentservice.getdisplayoptions().showscore",{"_index":1211,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.trialtreatmentservice.getdisplayoptions().showsum",{"_index":3288,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.trialtreatmentservice.getdisplayoptions().showtax",{"_index":1224,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{}}}],["this.trialtreatmentservice.getspecifictreatmentdata(this.treatmentform.controls.treatment.value).subscribe",{"_index":3037,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["this.trialtreatmentservice.getswapconfig",{"_index":1244,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TrialComponent.html":{}}}],["this.trialtreatmentservice.gettreatmentid",{"_index":3308,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.trialtreatmentservice.settreatmentdataonreload",{"_index":1079,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.trialtreatmentservice.settreatmentdataonreload(this.activatedroute.snapshot.data.treatment",{"_index":3306,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.trialtreatmentservice.starttreatment(this.id",{"_index":3450,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["this.trialtreatmentservice.treatmentdata.questionnaire",{"_index":2707,"title":{},"body":{"components/ShoppingMetricsComponent.html":{}}}],["this.trialtreatmentservice.treatmentdata.subjectoptions.money",{"_index":3291,"title":{},"body":{"components/TrialComponent.html":{}}}],["this.updatecartbackend",{"_index":2619,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.updatefilterlist.emit",{"_index":3197,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.uploading",{"_index":2972,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["this.user",{"_index":177,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["this.width",{"_index":1129,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["this.width}px",{"_index":1136,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["three",{"_index":1834,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["throw",{"_index":264,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["tid",{"_index":2742,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["tid(id",{"_index":2763,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["time",{"_index":720,"title":{},"body":{"injectables/EventsService.html":{},"injectables/FilterService.html":{},"injectables/RoutingTrackerService.html":{},"components/TreatmentCreateComponent.html":{}}}],["times",{"_index":3568,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["titel",{"_index":1314,"title":{},"body":{"components/FoodCardComponent.html":{},"components/HeaderComponent.html":{}}}],["title",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["todo",{"_index":1432,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/SubjectManageComponent.html":{}}}],["token",{"_index":2198,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["tomato",{"_index":3574,"title":{},"body":{"components/TrialShopComponent.html":{}}}],["tool",{"_index":205,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["toolbar",{"_index":1516,"title":{},"body":{"components/HeaderComponent.html":{}}}],["top",{"_index":1009,"title":{},"body":{"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["total",{"_index":907,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["tr:nth",{"_index":1491,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["tracker",{"_index":2401,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["tracker.service",{"_index":1863,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["tracker.service.ts",{"_index":2399,"title":{},"body":{"injectables/RoutingTrackerService.html":{},"coverage.html":{}}}],["tracker.service.ts:25",{"_index":2414,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["tracker.service.ts:26",{"_index":2407,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["tracker.service.ts:40",{"_index":2409,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["tracking",{"_index":2426,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["transform",{"_index":1363,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{}}}],["transition",{"_index":1678,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["translate(0",{"_index":3384,"title":{},"body":{"components/TrialComponent.html":{}}}],["translate3d(0,0,0",{"_index":1677,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["transmit",{"_index":595,"title":{},"body":{"injectables/EventsService.html":{}}}],["transparent",{"_index":1673,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["treament",{"_index":2953,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["treamentedit",{"_index":3124,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["treamtent",{"_index":3086,"title":{},"body":{"guards/TreatmentService.html":{},"guards/TrialTreatmentService.html":{}}}],["treamtment",{"_index":3241,"title":{},"body":{"components/TrialComponent.html":{}}}],["treatement",{"_index":3111,"title":{},"body":{"guards/TreatmentService.html":{}}}],["treatementservice",{"_index":249,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/TreeManageComponent.html":{}}}],["treatemet",{"_index":3638,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["treatment').subscribe((val",{"_index":3104,"title":{},"body":{"guards/TreatmentService.html":{}}}],["treatment(treatment",{"_index":1978,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["treatment._id",{"_index":3100,"title":{},"body":{"guards/TreatmentService.html":{}}}],["treatment.items",{"_index":1980,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["treatment.items.findindex(x",{"_index":3095,"title":{},"body":{"guards/TreatmentService.html":{}}}],["treatment.service",{"_index":1207,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ItemGridComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["treatment.service.ts",{"_index":3613,"title":{},"body":{"guards/TrialTreatmentService.html":{},"coverage.html":{}}}],["treatment.service.ts:102",{"_index":3634,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment.service.ts:118",{"_index":3624,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment.service.ts:126",{"_index":3625,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment.service.ts:133",{"_index":3630,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment.service.ts:143",{"_index":3644,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment.service.ts:21",{"_index":3622,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment.service.ts:34",{"_index":3631,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment.service.ts:48",{"_index":3623,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment.service.ts:57",{"_index":3636,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment.service.ts:72",{"_index":3628,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment.service.ts:92",{"_index":3641,"title":{},"body":{"guards/TrialTreatmentService.html":{}}}],["treatment/item",{"_index":3097,"title":{},"body":{"guards/TreatmentService.html":{}}}],["treatment/items",{"_index":3102,"title":{},"body":{"guards/TreatmentService.html":{}}}],["treatment/tree",{"_index":3103,"title":{},"body":{"guards/TreatmentService.html":{}}}],["treatmentandsubjecturl",{"_index":684,"title":{},"body":{"injectables/EventsService.html":{},"injectables/ShoppingCartService.html":{}}}],["treatmentcreate",{"_index":426,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["treatmentcreatecomponent",{"_index":96,"title":{"components/TreatmentCreateComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["treatmentdata",{"_index":3422,"title":{},"body":{"components/TrialConfigComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["treatmentdata._id",{"_index":3461,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["treatmentedit",{"_index":2949,"title":{},"body":{"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{}}}],["treatmentedit/:id",{"_index":427,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["treatmentform",{"_index":2931,"title":{},"body":{"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{}}}],["treatmentid",{"_index":694,"title":{},"body":{"injectables/EventsService.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["treatmentid)].items",{"_index":3094,"title":{},"body":{"guards/TreatmentService.html":{}}}],["treatments",{"_index":232,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/ItemManageComponent.html":{},"guards/TreatmentService.html":{}}}],["treatmentselectcomponent",{"_index":98,"title":{"components/TreatmentSelectComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["treatmentservice",{"_index":246,"title":{"guards/TreatmentService.html":{}},"body":{"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/HeaderComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"coverage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["tree).subscribe",{"_index":3186,"title":{},"body":{"injectables/TreeService.html":{}}}],["tree._id",{"_index":3196,"title":{},"body":{"injectables/TreeService.html":{}}}],["treecontrol",{"_index":845,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["treecreatecomponent",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["treeid",{"_index":3167,"title":{},"body":{"injectables/TreeService.html":{}}}],["treemanagecomponent",{"_index":100,"title":{"components/TreeManageComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["treeoutlet",{"_index":430,"title":{},"body":{"modules/AdminRoutingModule.html":{},"components/TreeManageComponent.html":{}}}],["trees",{"_index":769,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"injectables/ProductService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{}}}],["trees.findindex(x",{"_index":2329,"title":{},"body":{"injectables/ProductService.html":{}}}],["trees.push",{"_index":2327,"title":{},"body":{"injectables/ProductService.html":{}}}],["trees[ind].children.push",{"_index":2330,"title":{},"body":{"injectables/ProductService.html":{}}}],["treeservice",{"_index":339,"title":{"injectables/TreeService.html":{}},"body":{"modules/AdminModule.html":{},"components/FilterAllocateDialogComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"coverage.html":{},"overview.html":{}}}],["trial",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["trial'},{'name",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["trial.component",{"_index":588,"title":{},"body":{"modules/EndTrialModule.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["trial.component.html",{"_index":572,"title":{},"body":{"components/EndTrialComponent.html":{},"components/TrialComponent.html":{}}}],["trial.component.scss",{"_index":571,"title":{},"body":{"components/EndTrialComponent.html":{},"components/TrialComponent.html":{}}}],["trial.component.ts",{"_index":570,"title":{},"body":{"components/EndTrialComponent.html":{},"coverage.html":{}}}],["trial.component.ts:12",{"_index":574,"title":{},"body":{"components/EndTrialComponent.html":{}}}],["trial.component.ts:8",{"_index":573,"title":{},"body":{"components/EndTrialComponent.html":{}}}],["trial.model",{"_index":660,"title":{},"body":{"injectables/EventsService.html":{}}}],["trial.module#endtrialmodule",{"_index":3547,"title":{},"body":{"modules/TrialRoutingModule.html":{}}}],["trial.module.ts",{"_index":587,"title":{},"body":{"modules/EndTrialModule.html":{}}}],["trial/currentcart",{"_index":2604,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["trial/end",{"_index":569,"title":{},"body":{"components/EndTrialComponent.html":{},"modules/EndTrialModule.html":{},"modules/TrialRoutingModule.html":{},"coverage.html":{}}}],["trial/info",{"_index":719,"title":{},"body":{"injectables/EventsService.html":{}}}],["trial/routing",{"_index":2431,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["trial/start",{"_index":3533,"title":{},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{}}}],["trial/swap",{"_index":713,"title":{},"body":{"injectables/EventsService.html":{}}}],["trial/transaction",{"_index":2641,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["trial/trial.module",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["trialcomponent",{"_index":101,"title":{"components/TrialComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trialconfigcomponent",{"_index":102,"title":{"components/TrialConfigComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trialdata",{"_index":733,"title":{},"body":{"injectables/EventsService.html":{},"components/ShoppingMetricsComponent.html":{}}}],["triallabelservice",{"_index":1382,"title":{"injectables/TrialLabelService.html":{}},"body":{"components/FoodDetailsComponent.html":{},"injectables/TrialLabelService.html":{},"coverage.html":{}}}],["triallandingcomponent",{"_index":105,"title":{"components/TrialLandingComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["triallandingtodo",{"_index":3471,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["trialmodule",{"_index":467,"title":{"modules/TrialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TrialModule.html":{},"modules.html":{},"overview.html":{}}}],["trialroutingmodule",{"_index":3511,"title":{"modules/TrialRoutingModule.html":{}},"body":{"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["trials",{"_index":3394,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["trialshopcomponent",{"_index":106,"title":{"components/TrialShopComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"components/TrialShopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trialsubject",{"_index":612,"title":{},"body":{"injectables/EventsService.html":{}}}],["trialsubjectservice",{"_index":613,"title":{"injectables/TrialSubjectService.html":{}},"body":{"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"injectables/RoutingTrackerService.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialSubjectService.html":{},"coverage.html":{}}}],["trialtreatmentservice",{"_index":1165,"title":{"guards/TrialTreatmentService.html":{}},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ItemGridComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"modules/TrialModule.html":{},"modules/TrialRoutingModule.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{}}}],["trigger",{"_index":3131,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["triggered",{"_index":628,"title":{},"body":{"injectables/EventsService.html":{}}}],["triggering",{"_index":2063,"title":{},"body":{"components/LabelAllocateDialogComponent.html":{}}}],["true",{"_index":179,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["tslib",{"_index":3760,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":2294,"title":{},"body":{"injectables/ProductService.html":{}}}],["two",{"_index":2256,"title":{},"body":{"injectables/ProductService.html":{}}}],["type",{"_index":158,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"injectables/TrialLabelService.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":2238,"title":{},"body":{"injectables/ProductService.html":{}}}],["ui",{"_index":1760,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{}}}],["ul",{"_index":1007,"title":{},"body":{"components/FilterComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["und",{"_index":2387,"title":{},"body":{"components/RegisterComponent.html":{}}}],["undefined",{"_index":1417,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"injectables/ProductService.html":{},"components/ScoreCreateComponent.html":{},"components/TreeManageComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["underscore",{"_index":3762,"title":{},"body":{"dependencies.html":{}}}],["unique",{"_index":2199,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["unit",{"_index":3790,"title":{},"body":{"index.html":{}}}],["unitroundedot",{"_index":1302,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{}}}],["universität",{"_index":2150,"title":{},"body":{"components/LandingComponent.html":{}}}],["unter",{"_index":1630,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["untergruppe",{"_index":2012,"title":{},"body":{"components/ItemManageComponent.html":{}}}],["unused",{"_index":1055,"title":{},"body":{"injectables/FilterService.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["up",{"_index":2804,"title":{},"body":{"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{}}}],["update",{"_index":2639,"title":{},"body":{"injectables/ShoppingCartService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{}}}],["updatecartbackend",{"_index":2576,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatecartbackend(obj",{"_index":2598,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updated",{"_index":2008,"title":{},"body":{"components/ItemManageComponent.html":{},"injectables/ShoppingCartService.html":{},"components/TreatmentCreateComponent.html":{},"guards/TreatmentService.html":{}}}],["updatefilterlist",{"_index":3150,"title":{},"body":{"injectables/TreeService.html":{}}}],["updatefilterontreatment",{"_index":3157,"title":{},"body":{"injectables/TreeService.html":{}}}],["updatefilterontreatment(treatmentid",{"_index":3173,"title":{},"body":{"injectables/TreeService.html":{}}}],["updatefiltertree",{"_index":3158,"title":{},"body":{"injectables/TreeService.html":{}}}],["updatefiltertree(tree",{"_index":3175,"title":{},"body":{"injectables/TreeService.html":{}}}],["updateinformationofitemintreatment",{"_index":3059,"title":{},"body":{"guards/TreatmentService.html":{}}}],["updateinformationofitemintreatment(item",{"_index":3087,"title":{},"body":{"guards/TreatmentService.html":{}}}],["updateing",{"_index":2601,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatescoreinformation",{"_index":2494,"title":{},"body":{"injectables/ScoreService.html":{}}}],["updatescoreinformation(body",{"_index":2500,"title":{},"body":{"injectables/ScoreService.html":{}}}],["updatespecificlabel",{"_index":2127,"title":{},"body":{"injectables/LabelService.html":{}}}],["updatespecificlabel(label",{"_index":2138,"title":{},"body":{"injectables/LabelService.html":{}}}],["updatespecifictreatment",{"_index":3060,"title":{},"body":{"guards/TreatmentService.html":{}}}],["updatespecifictreatment(body",{"_index":3089,"title":{},"body":{"guards/TreatmentService.html":{}}}],["updatetaxinformation",{"_index":2919,"title":{},"body":{"injectables/TaxService.html":{}}}],["updatetaxinformation(body",{"_index":2923,"title":{},"body":{"injectables/TaxService.html":{}}}],["updating",{"_index":2041,"title":{},"body":{"injectables/ItemService.html":{},"components/LabelCreateComponent.html":{},"injectables/ScoreService.html":{},"injectables/ShoppingCartService.html":{},"injectables/TaxService.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{}}}],["upload",{"_index":1531,"title":{},"body":{"components/ImageDialogComponent.html":{},"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["upload(imgurl",{"_index":1542,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["uploadimagetoitem",{"_index":1696,"title":{},"body":{"injectables/ImageService.html":{}}}],["uploadimagetoitem(body",{"_index":1698,"title":{},"body":{"injectables/ImageService.html":{}}}],["uploadimagetolabel",{"_index":1697,"title":{},"body":{"injectables/ImageService.html":{}}}],["uploadimagetolabel(body",{"_index":1700,"title":{},"body":{"injectables/ImageService.html":{}}}],["uploading",{"_index":1519,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["url",{"_index":513,"title":{},"body":{"guards/AuthGuard.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"miscellaneous/variables.html":{}}}],["url(\"../../../assets/placeholder/landing/shop",{"_index":3496,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["url.includes('/cart",{"_index":3294,"title":{},"body":{"components/TrialComponent.html":{}}}],["urltree",{"_index":514,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":275,"title":{},"body":{"components/AdminLandingComponent.html":{},"injectables/EventsService.html":{},"injectables/FilterService.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ShoppingCartService.html":{},"components/SubjectSelectComponent.html":{},"index.html":{}}}],["used",{"_index":507,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"injectables/ProductService.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":130,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AdminUserService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TrialComponent.html":{},"guards/TrialTreatmentService.html":{}}}],["user.email",{"_index":191,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["user.service",{"_index":165,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["user.service.ts",{"_index":440,"title":{},"body":{"injectables/AdminUserService.html":{},"coverage.html":{}}}],["user.service.ts:20",{"_index":444,"title":{},"body":{"injectables/AdminUserService.html":{}}}],["user.username",{"_index":188,"title":{},"body":{"components/AdminHeaderComponent.html":{}}}],["username",{"_index":187,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["users",{"_index":2036,"title":{},"body":{"injectables/ItemService.html":{}}}],["using",{"_index":3227,"title":{},"body":{"components/TrialComponent.html":{}}}],["val",{"_index":252,"title":{},"body":{"components/AdminLandingComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"injectables/ProductService.html":{},"components/SubjectSelectComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["val._id",{"_index":2977,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["val.concat([{name",{"_index":806,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["val.foreach((element",{"_index":810,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["val.length",{"_index":813,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{}}}],["val.type",{"_index":1879,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["val[0",{"_index":2967,"title":{},"body":{"components/TreatmentCreateComponent.html":{}}}],["val[0].filters",{"_index":3142,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["validators",{"_index":2173,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{}}}],["validators.email",{"_index":2346,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":2348,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(6",{"_index":2347,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":2177,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TrialComponent.html":{}}}],["value",{"_index":151,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/EventsService.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":3092,"title":{},"body":{"guards/TreatmentService.html":{}}}],["var",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/AppComponent.html":{},"components/EndTrialComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{}}}],["variable",{"_index":160,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"injectables/AuthService.html":{},"injectables/FilterService.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"injectables/ShoppingCartService.html":{},"components/TaxCreateComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":3809,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vegs",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["vergeben",{"_index":2384,"title":{},"body":{"components/RegisterComponent.html":{}}}],["vergessen",{"_index":2193,"title":{},"body":{"components/LoginComponent.html":{}}}],["verify",{"_index":509,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verlauf",{"_index":2877,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["version",{"_index":3773,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1338,"title":{},"body":{"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SwapDialogComponent.html":{}}}],["verwalten",{"_index":274,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["via",{"_index":3793,"title":{},"body":{"index.html":{}}}],["view",{"_index":1190,"title":{},"body":{"components/FoodCardComponent.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{}}}],["viewchild",{"_index":751,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["viewchild(matpaginator",{"_index":1765,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{}}}],["viewed",{"_index":1433,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["visibility",{"_index":1772,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{}}}],["visibiltiy",{"_index":245,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["visible",{"_index":1676,"title":{},"body":{"components/ImageDialogComponent.html":{},"injectables/ProductService.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialComponent.html":{}}}],["visual",{"_index":202,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/TreatmentCreateComponent.html":{}}}],["void",{"_index":143,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/AdminLandingComponent.html":{},"components/EndTrialComponent.html":{},"injectables/EventsService.html":{},"interfaces/ExampleFlatNode.html":{},"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/InfoDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"injectables/ItemService.html":{},"components/LabelAllocateDialogComponent.html":{},"components/LabelCreateComponent.html":{},"injectables/LabelService.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"injectables/RoutingTrackerService.html":{},"components/ScoreCreateComponent.html":{},"directives/ScoreDirective.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectManageComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/SwapOptDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"guards/TreatmentService.html":{},"components/TreeManageComponent.html":{},"injectables/TreeService.html":{},"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialLandingComponent.html":{},"components/TrialShopComponent.html":{},"injectables/TrialSubjectService.html":{},"guards/TrialTreatmentService.html":{}}}],["vollkorn",{"_index":2262,"title":{},"body":{"injectables/ProductService.html":{}}}],["von",{"_index":2861,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["vorgeschlagen",{"_index":2880,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["waiting",{"_index":155,"title":{},"body":{"components/AdminHeaderComponent.html":{},"components/TrialConfigComponent.html":{}}}],["ware",{"_index":2864,"title":{},"body":{"components/SwapOptDialogComponent.html":{}}}],["waren",{"_index":2546,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["warenkorb",{"_index":1451,"title":{},"body":{"components/FoodDetailsComponent.html":{},"components/ShoppingCartComponent.html":{},"components/TrialComponent.html":{}}}],["warning",{"_index":1392,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["web",{"_index":2207,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/LoginResp.html":{},"interfaces/RegisterData.html":{},"interfaces/RegisterResp.html":{}}}],["webkit",{"_index":1668,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["weight",{"_index":1017,"title":{},"body":{"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/ShoppingCartComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TrialLandingComponent.html":{}}}],["weights",{"_index":1175,"title":{},"body":{"components/FoodCardComponent.html":{}}}],["weitch",{"_index":3134,"title":{},"body":{"components/TreeManageComponent.html":{}}}],["weiter",{"_index":2784,"title":{},"body":{"components/SubjectSelectComponent.html":{}}}],["welcome",{"_index":3495,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["wenn",{"_index":2779,"title":{},"body":{"components/SubjectSelectComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["went",{"_index":3483,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["werden",{"_index":1633,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["whether",{"_index":905,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{}}}],["white",{"_index":971,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/FilterComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemManageComponent.html":{},"components/TreeManageComponent.html":{}}}],["whole",{"_index":1859,"title":{},"body":{"components/ItemGridComponent.html":{},"guards/TreatmentService.html":{}}}],["width",{"_index":310,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FilterAllocateDialogComponent.html":{},"directives/FixedNavDirective.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ItemGridComponent.html":{},"components/ItemManageComponent.html":{},"components/LabelCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SubjectSelectComponent.html":{},"components/SwapDialogComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreatmentCreateComponent.html":{},"components/TreatmentSelectComponent.html":{},"components/TreeManageComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["width:200px",{"_index":1650,"title":{},"body":{"components/ImageDialogComponent.html":{}}}],["willkommen",{"_index":2145,"title":{},"body":{"components/LandingComponent.html":{},"components/TrialLandingComponent.html":{}}}],["window",{"_index":1122,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["window.innerheight",{"_index":3442,"title":{},"body":{"components/TrialConfigComponent.html":{}}}],["window.innerwidth",{"_index":3242,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialConfigComponent.html":{},"components/TrialShopComponent.html":{}}}],["window.pageyoffset",{"_index":1127,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["window.scroll(0",{"_index":1898,"title":{},"body":{"components/ItemGridComponent.html":{}}}],["window.settimeout",{"_index":3299,"title":{},"body":{"components/TrialComponent.html":{}}}],["window:resize",{"_index":3211,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["window:resize(event",{"_index":3220,"title":{},"body":{"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["window:scroll",{"_index":1109,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["window:scroll(event",{"_index":1120,"title":{},"body":{"directives/FixedNavDirective.html":{}}}],["wird",{"_index":2786,"title":{},"body":{"components/SubjectSelectComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["wollen",{"_index":2817,"title":{},"body":{"components/SwapDialogComponent.html":{}}}],["work",{"_index":1103,"title":{},"body":{"directives/FixedNavDirective.html":{},"components/FoodDetailsComponent.html":{},"injectables/ProductService.html":{}}}],["workaround",{"_index":1390,"title":{},"body":{"components/FoodDetailsComponent.html":{}}}],["works",{"_index":2214,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["wrapper",{"_index":312,"title":{},"body":{"components/AdminLandingComponent.html":{},"components/FoodCardComponent.html":{},"components/FoodDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/ShoppingCartComponent.html":{},"components/ShoppingMetricsComponent.html":{},"components/SwapDialogComponent.html":{},"components/TrialComponent.html":{},"components/TrialLandingComponent.html":{}}}],["writefile",{"_index":260,"title":{},"body":{"components/AdminLandingComponent.html":{}}}],["writes",{"_index":2402,"title":{},"body":{"injectables/RoutingTrackerService.html":{}}}],["wrong",{"_index":3484,"title":{},"body":{"components/TrialLandingComponent.html":{}}}],["wähle",{"_index":3040,"title":{},"body":{"components/TreatmentSelectComponent.html":{}}}],["wählen",{"_index":2152,"title":{},"body":{"components/LandingComponent.html":{}}}],["x",{"_index":1027,"title":{},"body":{"components/FilterComponent.html":{},"components/ImageDialogComponent.html":{},"components/TrialShopComponent.html":{}}}],["x._id",{"_index":1995,"title":{},"body":{"components/ItemManageComponent.html":{},"injectables/ProductService.html":{},"components/ScoreCreateComponent.html":{},"guards/TreatmentService.html":{},"injectables/TreeService.html":{}}}],["x.item",{"_index":2627,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["x.item._id",{"_index":2611,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["x.name",{"_index":831,"title":{},"body":{"interfaces/ExampleFlatNode.html":{},"components/FilterComponent.html":{},"injectables/ProductService.html":{}}}],["x.oldid",{"_index":2297,"title":{},"body":{"injectables/ProductService.html":{}}}],["y",{"_index":1798,"title":{},"body":{"components/ItemAllocateDialogComponent.html":{}}}],["yes",{"_index":903,"title":{},"body":{"components/FilterAllocateDialogComponent.html":{},"components/ImageDialogComponent.html":{},"components/ItemAllocateDialogComponent.html":{},"components/LabelAllocateDialogComponent.html":{},"components/TrialConfigComponent.html":{}}}],["z",{"_index":1638,"title":{},"body":{"components/ImageDialogComponent.html":{},"components/SubjectSelectComponent.html":{},"components/TrialComponent.html":{},"components/TrialShopComponent.html":{}}}],["zahlen",{"_index":2386,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zeichen",{"_index":2391,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zone.js",{"_index":3764,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":340,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EndTrialModule.html":{},"modules/SharedModule.html":{},"modules/TrialModule.html":{},"overview.html":{}}}],["zu",{"_index":2548,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["zur",{"_index":2723,"title":{},"body":{"components/ShoppingMetricsComponent.html":{},"components/SwapOptDialogComponent.html":{}}}],["zurück",{"_index":2119,"title":{},"body":{"components/LabelCreateComponent.html":{},"components/ScoreCreateComponent.html":{},"components/SubjectManageComponent.html":{},"components/TaxCreateComponent.html":{},"components/TreeManageComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Entry component for admin route.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n * Entry component for admin route.\n */\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent {\n  /**\n   * @ignore\n   */\n  constructor() { }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./admin.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminHeaderComponent.html":{"url":"components/AdminHeaderComponent.html","title":"component - AdminHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin-header/admin-header.component.ts\n\n\n    \n        Description\n    \n    \n        Custom header displayed in admin route.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-header\n            \n\n            \n                styleUrls\n                ./admin-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-header/admin-header.component.ts:40\n                \n            \n\n\n            \n                \n                    OnClick listener for logging out currently logedIn user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-header/admin-header.component.ts:25\n                \n            \n\n\n            \n                \n                    OnInit livecycle hook for retrieving necessary data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin-header/admin-header.component.ts:19\n                            \n                        \n\n                \n                    \n                        Switch for waiting on user data before displaying in header template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin-header/admin-header.component.ts:17\n                            \n                        \n\n                \n                    \n                        Variable that holds data of the authenticated user. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AdminUserService } from '../services/admin-user.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { Router } from '@angular/router';\n\n/**\n * Custom header displayed in admin route.\n */\n@Component({\n  selector: 'app-admin-header',\n  templateUrl: './admin-header.component.html',\n  styleUrls: ['./admin-header.component.scss']\n})\nexport class AdminHeaderComponent implements OnInit {\n  /**Variable that holds data of the authenticated user. */\n  user: any;\n  /**Switch for waiting on user data before displaying in header template. */\n  show = false;\n  /**@ignore */\n  constructor(private adminUserService: AdminUserService, private http: HttpClient, private router: Router) { }\n  /**\n   * OnInit livecycle hook for retrieving necessary data.\n   */\n  ngOnInit() {\n    this.adminUserService.getUserInfo().subscribe(\n      (user) => {\n        console.log(user);\n        this.user = user;\n        this.show = true;\n      },\n      (error) => {\n        console.error(error)\n      }\n    )\n  }\n  /**\n   * OnClick listener for logging out currently logedIn user.\n   */\n  logout() {\n    this.http.get(environment.apiURI + '/logout').subscribe(() => { this.router.navigate(['/']) })\n  }\n\n}\n\n    \n\n    \n        \n  \n    Administration\n    \n    \n      person\n    \n    \n      \n        \n          \n            Username: \n            {{user.username}}\n          \n          \n            E-Mail: \n            {{user.email}}\n          \n        \n      \n      Logout\n    \n  \n\n    \n\n    \n                \n                    ./admin-header.component.scss\n                \n                .example-spacer {\n    flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Administration              person                                            Username:             {{user.username}}                                E-Mail:             {{user.email}}                              Logout      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminLandingComponent.html":{"url":"components/AdminLandingComponent.html","title":"component - AdminLandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminLandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin-landing/admin-landing.component.ts\n\n\n    \n        Description\n    \n    \n        Admin landing component\nCombines access to all visual editing features.of the tool. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-landing\n            \n\n            \n                styleUrls\n                ./admin-landing.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-landing.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                showTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTreatment\n                            \n                            \n                                downloadData\n                            \n                            \n                                editTreatment\n                            \n                            \n                                fetchTreatements\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTreatment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTreatment(element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-landing/admin-landing.component.ts:53\n                \n            \n\n\n            \n                \n                    Function for deleting entire treatment specification.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            downloadData\n                        \n                        \n                    \n                \n            \n            \n                \ndownloadData(element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-landing/admin-landing.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editTreatment\n                        \n                        \n                    \n                \n            \n            \n                \neditTreatment(element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-landing/admin-landing.component.ts:63\n                \n            \n\n\n            \n                \n                    OnClick listener for navigating to selected treatment edit.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchTreatements\n                        \n                        \n                    \n                \n            \n            \n                \nfetchTreatements()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-landing/admin-landing.component.ts:39\n                \n            \n\n\n            \n                \n                    Function for fetching all treatments of authenticated user. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin-landing/admin-landing.component.ts:35\n                \n            \n\n\n            \n                \n                    OnInti livecycle hook, fetching all custom treatments of authenticated user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin-landing/admin-landing.component.ts:17\n                            \n                        \n\n                \n                    \n                        Datasource for mat-table on template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['ID', 'name', 'description', 'edit', 'play']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin-landing/admin-landing.component.ts:21\n                            \n                        \n\n                \n                    \n                        Mat-table column variable defenitions \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/admin-landing/admin-landing.component.ts:19\n                            \n                        \n\n                \n                    \n                        Switch for visibiltiy of mat-table in template. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TreatmentService } from '../services/treatment.service';\nimport { Router } from '@angular/router';\n\n/**\n * Admin landing component\n * \n * Combines access to all visual editing features.of the tool. \n */\n@Component({\n  selector: 'app-admin-landing',\n  templateUrl: './admin-landing.component.html',\n  styleUrls: ['./admin-landing.component.scss']\n})\nexport class AdminLandingComponent implements OnInit {\n  /**Datasource for mat-table on template. */\n  dataSource: any;\n  /**Switch for visibiltiy of mat-table in template. */\n  showTable = false;\n  /**Mat-table column variable defenitions */\n  displayedColumns: string[] = ['ID', 'name', 'description', 'edit', 'play'];\n  /**\n   * @ignore\n   * @param treatementService \n   * @param router \n   */\n  constructor(\n    private treatementService: TreatmentService,\n    private router: Router\n  ) { }\n\n  /**\n   * OnInti livecycle hook, fetching all custom treatments of authenticated user.\n   */\n  ngOnInit() {\n    this.fetchTreatements();\n  }\n  /**Function for fetching all treatments of authenticated user. */\n  fetchTreatements() {\n    this.treatementService.getAllTreatments().subscribe(\n      (val) => {\n        console.log(val);\n        this.dataSource = val;\n        this.showTable = true;\n      }\n    );\n    // this.showTable = true;\n  }\n  /**\n   * Function for deleting entire treatment specification.\n   * @param element \n   */\n  deleteTreatment(element) {\n    this.treatementService.deleteSpecificTreatment(element._id).subscribe(() => {\n      this.fetchTreatements();\n    });\n  }\n\n  /**\n   * OnClick listener for navigating to selected treatment edit.\n   * @param element \n   */\n  editTreatment(element) {\n    this.router.navigate(['admin/treatmentEdit/' + element._id]);\n  }\n\n  downloadData(element) {\n    // this.treatementService.getAllDataOfTreatment(element._id).subscribe(\n    //   (val) => {\n    //     writeFile('~/' + element._id + '_data.json', JSON.stringify(val), (err) => {\n    //       if (err) { throw err }\n    //       console.log('File has been saved!')\n    //     })\n    //   }\n    // );\n  }\n}\n\n    \n\n    \n        \n  \n    Manage Assortment\n    Create base item\n    \n    Manage base items\n    Subjects\n    Subjekte verwalten\n    Use Cases\n    \n      \n        \n          Label\n          \n            Create Label\n            Here you can create labels, and assign labels to specific store items.\n            Edit\n          \n        \n      \n      \n        \n          Tax\n          \n            Create Tax\n            Here you can create tax rates to additionally tax certain items. These can\n              then be\n              assigned to specific store items with individual amounts.\n            Edit\n          \n        \n      \n    \n    \n      \n        \n          Score\n          \n            Create Score\n            Here you can create scores that represent additional information for\n              subjects or for\n              assessing shopping carts. These can then be\n              assigned to specific store items with individual amounts.\n            Edit\n          \n        \n      \n      \n        \n          Filter\n          \n            Create Custom Filter\n            Create a custom filter tree with categories. Is build as dynamic tree\n              structure, the\n              leaf items have store items as children.\n            Edit\n          \n        \n      \n    \n\n    Label anlegen\n          \n          Steuer anlegen\n          \n          Score anlegen\n          \n          Filter anlegen -->\n    Items verwalten -->\n    \n      \n\n        \n        \n           ID \n           {{element._id}} \n        \n\n        \n        \n           Name \n           {{element.name}} \n        \n\n        \n        \n           Description \n           {{element.description}} \n        \n\n        \n           Edit \n          \n            \n              more_vert\n            \n            \n              Delete\n              Edit Data\n              Download Subject Data\n            \n          \n        \n\n        \n           Test \n          \n            \n              play_arrow\n            \n          \n        \n\n        \n        \n      \n    \n\n    New Treatment\n  \n\n    \n\n    \n                \n                    ./admin-landing.component.scss\n                \n                table {\n  width: 100%;\n}\n\n.wrapper {\n  margin: 25px 15px;\n  padding: 0;\n}\n\n.row {\n  margin: 15px 0;\n}\n\n.col-6 {\n  padding-left: 0 !important;\n}\n\n.card {\n  height: 100% !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Manage Assortment    Create base item        Manage base items    Subjects    Subjekte verwalten    Use Cases                            Label                      Create Label            Here you can create labels, and assign labels to specific store items.            Edit                                                Tax                      Create Tax            Here you can create tax rates to additionally tax certain items. These can              then be              assigned to specific store items with individual amounts.            Edit                                                        Score                      Create Score            Here you can create scores that represent additional information for              subjects or for              assessing shopping carts. These can then be              assigned to specific store items with individual amounts.            Edit                                                Filter                      Create Custom Filter            Create a custom filter tree with categories. Is build as dynamic tree              structure, the              leaf items have store items as children.            Edit                                Label anlegen                    Steuer anlegen                    Score anlegen                    Filter anlegen -->    Items verwalten -->                                     ID            {{element._id}}                                    Name            {{element.name}}                                    Description            {{element.description}}                            Edit                                     more_vert                                      Delete              Edit Data              Download Subject Data                                                 Test                                     play_arrow                                                            New Treatment  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminLandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHeaderComponent\n\nAdminHeaderComponent\n\nAdminModule -->\n\nAdminHeaderComponent->AdminModule\n\n\n\n\n\nAdminLandingComponent\n\nAdminLandingComponent\n\nAdminModule -->\n\nAdminLandingComponent->AdminModule\n\n\n\n\n\nFilterAllocateDialogComponent\n\nFilterAllocateDialogComponent\n\nAdminModule -->\n\nFilterAllocateDialogComponent->AdminModule\n\n\n\n\n\nItemAllocateDialogComponent\n\nItemAllocateDialogComponent\n\nAdminModule -->\n\nItemAllocateDialogComponent->AdminModule\n\n\n\n\n\nItemCreateComponent\n\nItemCreateComponent\n\nAdminModule -->\n\nItemCreateComponent->AdminModule\n\n\n\n\n\nItemManageComponent\n\nItemManageComponent\n\nAdminModule -->\n\nItemManageComponent->AdminModule\n\n\n\n\n\nLabelAllocateDialogComponent\n\nLabelAllocateDialogComponent\n\nAdminModule -->\n\nLabelAllocateDialogComponent->AdminModule\n\n\n\n\n\nLabelCreateComponent\n\nLabelCreateComponent\n\nAdminModule -->\n\nLabelCreateComponent->AdminModule\n\n\n\n\n\nScoreCreateComponent\n\nScoreCreateComponent\n\nAdminModule -->\n\nScoreCreateComponent->AdminModule\n\n\n\n\n\nSubjectManageComponent\n\nSubjectManageComponent\n\nAdminModule -->\n\nSubjectManageComponent->AdminModule\n\n\n\n\n\nTaxCreateComponent\n\nTaxCreateComponent\n\nAdminModule -->\n\nTaxCreateComponent->AdminModule\n\n\n\n\n\nTreatmentCreateComponent\n\nTreatmentCreateComponent\n\nAdminModule -->\n\nTreatmentCreateComponent->AdminModule\n\n\n\n\n\nTreeCreateComponent\n\nTreeCreateComponent\n\nAdminModule -->\n\nTreeCreateComponent->AdminModule\n\n\n\n\n\nTreeManageComponent\n\nTreeManageComponent\n\nAdminModule -->\n\nTreeManageComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nItemService\n\nItemService\n\nAdminModule -->\n\nItemService->AdminModule\n\n\n\n\n\nTreeService\n\nTreeService\n\nAdminModule -->\n\nTreeService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                        \n                            AdminHeaderComponent\n                        \n                        \n                            AdminLandingComponent\n                        \n                        \n                            FilterAllocateDialogComponent\n                        \n                        \n                            ItemAllocateDialogComponent\n                        \n                        \n                            ItemCreateComponent\n                        \n                        \n                            ItemManageComponent\n                        \n                        \n                            LabelAllocateDialogComponent\n                        \n                        \n                            LabelCreateComponent\n                        \n                        \n                            ScoreCreateComponent\n                        \n                        \n                            SubjectManageComponent\n                        \n                        \n                            TaxCreateComponent\n                        \n                        \n                            TreatmentCreateComponent\n                        \n                        \n                            TreeCreateComponent\n                        \n                        \n                            TreeManageComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FilterAllocateDialogComponent\n                        \n                        \n                            ImageDialogComponent\n                        \n                        \n                            ItemAllocateDialogComponent\n                        \n                        \n                            LabelAllocateDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ItemService\n                        \n                        \n                            TreeService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './admin.component';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { ItemCreateComponent } from './item-create/item-create.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ItemManageComponent } from './item-manage/item-manage.component';\nimport { ItemResolverService } from './services/item-resolver.service';\nimport { ItemService } from './services/item.service';\nimport { ImageDialogComponent } from '../shared/image-dialog/image-dialog.component';\nimport { TreatmentCreateComponent } from './treatment-create/treatment-create.component';\nimport { TreeCreateComponent } from './tree-create/tree-create.component';\nimport { TreeService } from './services/tree.service';\nimport { ItemAllocateDialogComponent } from './item-allocate-dialog/item-allocate-dialog.component';\nimport { LabelCreateComponent } from './label-create/label-create.component';\nimport { TaxCreateComponent } from './tax-create/tax-create.component';\nimport { ScoreCreateComponent } from './score-create/score-create.component';\nimport { TreatmentService } from './services/treatment.service';\nimport { TreeManageComponent } from './tree-manage/tree-manage.component';\nimport { FilterAllocateDialogComponent } from './filter-allocate-dialog/filter-allocate-dialog.component';\nimport { LabelAllocateDialogComponent } from './label-allocate-dialog/label-allocate-dialog.component';\nimport { SubjectManageComponent } from './subject-manage/subject-manage.component';\nimport { AdminHeaderComponent } from './admin-header/admin-header.component';\nimport { AdminLandingComponent } from './admin-landing/admin-landing.component';\n\n@NgModule({\n  declarations: [\n    AdminComponent, \n    ItemCreateComponent, \n    ItemManageComponent, \n    TreatmentCreateComponent, \n    TreeCreateComponent, \n    ItemAllocateDialogComponent, \n    LabelCreateComponent, \n    TaxCreateComponent, \n    ScoreCreateComponent, TreeManageComponent, FilterAllocateDialogComponent, LabelAllocateDialogComponent, SubjectManageComponent, AdminHeaderComponent, AdminLandingComponent,\n  ],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatTableModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatListModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatTreeModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatBadgeModule,\n    MatToolbarModule,\n    MatDividerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n  ],\n  providers:[\n    ItemResolverService,\n    ItemService,\n    TreeService,\n    TreatmentService,\n  ],\n  entryComponents: [\n    ImageDialogComponent, \n    ItemAllocateDialogComponent, \n    FilterAllocateDialogComponent,\n    LabelAllocateDialogComponent,\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { ItemCreateComponent } from './item-create/item-create.component';\nimport { ItemManageComponent } from './item-manage/item-manage.component';\nimport { ItemResolverService } from './services/item-resolver.service';\nimport { TreatmentCreateComponent } from './treatment-create/treatment-create.component';\nimport { TreeCreateComponent } from './tree-create/tree-create.component';\nimport { LabelCreateComponent } from './label-create/label-create.component';\nimport { TaxCreateComponent } from './tax-create/tax-create.component';\nimport { ScoreCreateComponent } from './score-create/score-create.component';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { TreatmentService } from './services/treatment.service';\nimport { TreeManageComponent } from './tree-manage/tree-manage.component';\nimport { SubjectManageComponent } from './subject-manage/subject-manage.component';\nimport { AdminLandingComponent } from './admin-landing/admin-landing.component';\n\nconst routes: Routes = [\n  {\n    path: 'admin', component: AdminComponent, canActivate: [AuthGuard], children: [\n      { path: '', canActivateChild: [AuthGuard], component: AdminLandingComponent },\n      { path: 'subjectManage', component: SubjectManageComponent },\n      { path: 'itemCreate', canActivateChild: [AuthGuard], component: ItemCreateComponent },\n      {\n        path: 'itemManage', canActivateChild: [AuthGuard], component: ItemManageComponent, resolve: { items: ItemResolverService },\n        children: [\n          { path: 'baseEdit/:itemID', component: ItemCreateComponent, outlet: 'itemOutlet' }\n        ]\n      },\n      {\n        path: 'treatmentCreate',\n        canActivateChild: [AuthGuard],\n        resolve: {\n          treatment: TreatmentService\n        },\n        component: TreatmentCreateComponent\n      },\n      {\n        path: 'treatmentEdit/:id',\n        canActivateChild: [AuthGuard],\n        component: TreatmentCreateComponent,\n        children: [\n          {\n            path: 'editItem/:itemID',\n            canActivateChild: [AuthGuard],\n            component: ItemCreateComponent,\n            outlet: 'itemOutlet'\n          },\n          {\n            path: 'editFilter/:treeID',\n            canActivateChild: [AuthGuard],\n            component: TreeCreateComponent,\n            outlet: 'treeOutlet'\n          }\n        ]\n      },\n      {\n        path: 'filterCreate', canActivateChild: [AuthGuard], component: TreeManageComponent, children: [\n          { path: 'new', component: TreeCreateComponent, outlet: 'treeOutlet' },\n          { path: 'edit/:treeID', component: TreeCreateComponent, outlet: 'treeOutlet' }\n        ]\n      },\n      { path: 'labelCreate', canActivateChild: [AuthGuard], component: LabelCreateComponent },\n      { path: 'taxCreate', canActivateChild: [AuthGuard], component: TaxCreateComponent },\n      { path: 'scoreCreate', canActivateChild: [AuthGuard], component: ScoreCreateComponent },\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminUserService.html":{"url":"injectables/AdminUserService.html","title":"injectable - AdminUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin/services/admin-user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for reading user data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/admin-user.service.ts:20\n                \n            \n\n\n            \n                \n                    Get user info based on authenticated user.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Service for reading user data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminUserService {\n  /**@ignore */\n  constructor(\n    private http: HttpClient\n  ) { }\n  /**\n   * Get user info based on authenticated user.\n   * @returns {Observable}\n   */\n  getUserInfo() {\n    return this.http.get(environment.apiURI + '/user');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        App component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'VEGS'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\nimport { environment } from 'src/environments/environment';\n\n/**\n * App component\n */\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor() {}\n\n  title = 'VEGS';\n}\n\n    \n\n    \n         -->\n -->\n\n -->\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' --> --> -->'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAdminModule\n\nAdminModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTrialModule\n\nTrialModule\n\nAppModule -->\n\nTrialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LandingComponent\n                        \n                        \n                            NotfoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TrialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { LandingComponent } from './landing/landing.component';\n\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { HeaderComponent } from './header/header.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { AdminModule } from './admin/admin.module';\nimport { TrialModule } from './trial/trial.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotfoundComponent,\n    LandingComponent,\n    // HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    AdminModule,\n    TrialModule,\n    \n    HttpClientModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// import { AppComponent } from './app.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { LandingComponent } from './landing/landing.component';\n\nconst routes: Routes = [\n  { path: '', component: LandingComponent },\n  { path: 'auth', loadChildren: './auth/auth.module#AuthModule'},\n  { path: '**', component: NotfoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Route Guard for protecting administration route.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                            \n                                checkLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:24\n                \n            \n\n\n            \n                \n                    Function required by Interface CanActivate.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:38\n                \n            \n\n\n            \n                \n                    Function required by interface CanActivateChild\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkLogin\n                        \n                        \n                    \n                \n            \n            \n                \ncheckLogin(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:49\n                \n            \n\n\n            \n                \n                    Used in can activate to verify user credentials (Auth session and session.sig)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router, CanActivateChild } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n/**\n * Route Guard for protecting administration route.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  /**@ginore */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n  /**\n   * Function required by Interface CanActivate.\n   * @param next \n   * @param state\n   * @returns {Observable} \n   */\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable {\n    console.log('AuthGuard#canActivate called');\n    const url: string = state.url;\n    // this.checkLogin(url).subscribe()\n    return this.checkLogin(url);\n  }\n  /**\n   * Function required by interface CanActivateChild\n   * @param {ActivatedRouteSnapshot} route \n   * @param {RouterStateSnapshot} state \n   * @returns {Observable}\n   */\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable {\n    console.log('AuthGuard#canActivateChild called');\n    return this.canActivate(route, state);\n  }\n  /**\n   * Used in can activate to verify user credentials (Auth session and session.sig)\n   * @param {String} url \n   * @returns {Observable}\n   */\n  checkLogin(url: string): Observable {\n    return new Observable((sub) => {\n      this.authService.checkLoginCredentials().subscribe(\n        (val: any) => {\n          console.log(val);\n          if (!val) {\n            this.router.navigate(['/login']);\n            return;\n          }\n          sub.next(val)\n        },\n        (error) => {\n          console.log('error happend');\n          sub.next(false);\n        }\n      )\n    })\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nAuthModule->RegisterComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n]\n\n@NgModule({\n  declarations: [\n    RegisterComponent,\n    LoginComponent,\n  ],\n  exports: [\n    RegisterComponent, \n    LoginComponent,\n    RouterModule\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Auth Service: Injectable for checking login status.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                redirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginCredentials\n                            \n                            \n                                login\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkLoginCredentials\n                        \n                        \n                    \n                \n            \n            \n                \ncheckLoginCredentials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n                    Checking Login status with existing credientials.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(credentials: LoginData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:51\n                \n            \n\n\n            \n                \n                    Function that posts login request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                LoginData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \nregisterUser(user: RegisterData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n                    Function that post register request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                RegisterData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                        Variable used for switching display based on login status. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                        Not used? \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { RegisterData, LoginData } from './_models/user.model';\n/**\n * Auth Service: Injectable for checking login status.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  /**Variable used for switching display based on login status. */\n  isLoggedIn = false;\n  /**Not used? */\n  redirectUrl: string;\n  /**\n   * @ignore\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n  /**\n   * Checking Login status with existing credientials.\n   * @returns {Observable}\n   */\n  checkLoginCredentials(): Observable {\n    return new Observable((sub) => {\n      this.http.get(environment.apiURI + '/check').subscribe(\n        (val: any) => { sub.next(val.auth) },\n        (error) => {\n          console.error(error);\n          sub.next(false)\n        }\n      );\n    })\n\n  }\n  /**\n   * Function that post register request\n   * @param user \n   * @returns {Observable}\n   */\n  registerUser(user: RegisterData) {\n    return this.http.post(environment.apiURI + '/register', user);\n  }\n  /**\n   * Function that posts login request\n   * @param credentials \n   * @returns {Observable}\n   */\n  login(credentials: LoginData) {\n    return this.http.post(environment.apiURI + '/login', credentials);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EndTrialComponent.html":{"url":"components/EndTrialComponent.html","title":"component - EndTrialComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EndTrialComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/end-trial/end-trial.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-end-trial\n            \n\n            \n                styleUrls\n                ./end-trial.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./end-trial.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/end-trial/end-trial.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/end-trial/end-trial.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-end-trial',\n  templateUrl: './end-trial.component.html',\n  styleUrls: ['./end-trial.component.scss']\n})\nexport class EndTrialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Danke für Ihre Teilnahme!\n    Sie können nun Ihren Browser schließen.\n    \n    \n  \n\n    \n\n    \n                \n                    ./end-trial.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Danke für Ihre Teilnahme!    Sie können nun Ihren Browser schließen.          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'EndTrialComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EndTrialModule.html":{"url":"modules/EndTrialModule.html","title":"module - EndTrialModule","body":"\n                   \n\n\n\n\n    Modules\n    EndTrialModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EndTrialModule\n\n\n\ncluster_EndTrialModule_declarations\n\n\n\n\nEndTrialComponent\n\nEndTrialComponent\n\n\n\nEndTrialModule\n\nEndTrialModule\n\nEndTrialModule -->\n\nEndTrialComponent->EndTrialModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/trial/end-trial/end-trial.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EndTrialComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EndTrialComponent } from './end-trial.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: EndTrialComponent }\n]\n\n@NgModule({\n  declarations: [EndTrialComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class EndTrialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/trial/trial-services/events.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles assortment of different events used to transmit application state and \ndata events between multiple components.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $recordEvent\n                            \n                            \n                                lookUpInfo\n                            \n                            \n                                showBack\n                            \n                            \n                                swapInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitShowBack\n                            \n                            \n                                endShoppingSession\n                            \n                            \n                                endTrial\n                            \n                            \n                                    Async\n                                paginationEvent\n                            \n                            \n                                recordEvent\n                            \n                            \n                                recordFilterEvents\n                            \n                            \n                                recordOptIn\n                            \n                            \n                                recordSorting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, trialSubject: TrialSubjectService, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial-services/events.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialSubject\n                                                  \n                                                        \n                                                                        TrialSubjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitShowBack\n                        \n                        \n                    \n                \n            \n            \n                \nemitShowBack(bool)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/events.service.ts:41\n                \n            \n\n\n            \n                \n                    Provides the meand of emitting event for showing nav button.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bool\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endShoppingSession\n                        \n                        \n                    \n                \n            \n            \n                \nendShoppingSession(cart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/events.service.ts:159\n                \n            \n\n\n            \n                \n                    Triggered when checkout button in shopping-metrics.component is pressed\nPUT request saves the final shopping cart to trial data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cart\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endTrial\n                        \n                        \n                    \n                \n            \n            \n                \nendTrial()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/events.service.ts:171\n                \n            \n\n\n            \n                \n                    Triggered when trial is completly finished. PUT request initiates actions that \nprohibit the application from recording more data to an already finished trial.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            paginationEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paginationEvent(body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/events.service.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            recordEvent\n                        \n                        \n                    \n                \n            \n            \n                \nrecordEvent(object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/events.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            recordFilterEvents\n                        \n                        \n                    \n                \n            \n            \n                \nrecordFilterEvents(filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/events.service.ts:111\n                \n            \n\n\n            \n                \n                    Records all filter events emitted. \nSubscribes to filtered, everytime a filter event is fired this event is send\nto be put to the filtered data in trial.model.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            recordOptIn\n                        \n                        \n                    \n                \n            \n            \n                \nrecordOptIn(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/events.service.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            recordSorting\n                        \n                        \n                    \n                \n            \n            \n                \nrecordSorting(sortOption)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/events.service.ts:134\n                \n            \n\n\n            \n                \n                    Seperate function to record sorting actions. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sortOption\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $recordEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/events.service.ts:17\n                            \n                        \n\n                \n                    \n                        Eventemitter for use if an event should be recorded (i.e. saved to DB) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lookUpInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/events.service.ts:23\n                            \n                        \n\n                \n                    \n                        For storing information between lookupinfo started and ended event. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/events.service.ts:19\n                            \n                        \n\n                \n                    \n                        Eventemitter for handling show back button in trial component. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swapInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/events.service.ts:21\n                            \n                        \n\n                \n                    \n                        For storing swap infos between swap started and swap ended event. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { TrialSubjectService } from './trial-subject.service';\nimport { Observable, of } from 'rxjs';\nimport { FilterService } from './filter.service';\n\n/**\n * Handles assortment of different events used to transmit application state and \n * data events between multiple components.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  /**Eventemitter for use if an event should be recorded (i.e. saved to DB) */\n  $recordEvent = new EventEmitter();\n  /**Eventemitter for handling show back button in trial component. */\n  showBack = new EventEmitter();\n  /**For storing swap infos between swap started and swap ended event. */\n  swapInfo: any;\n  /**For storing information between lookupinfo started and ended event. */\n  lookUpInfo: any;\n\n  // treatmentAndSubjectURL = sessionStorage.getItem('treatmentID') + '/' + sessionStorage.getItem('subjectID');\n\n  constructor(\n    private http: HttpClient,\n    private trialSubject: TrialSubjectService,\n    private filterService: FilterService\n  ) {\n    this.$recordEvent.subscribe((val) => { this.recordEvent(val) })\n    // this.recordFilterEvents();\n  }\n\n  /**\n   * Provides the meand of emitting event for showing nav button.\n   * @param bool \n   * @emits showBack with boolean\n   */\n  emitShowBack(bool) {\n    this.showBack.emit(bool);\n  }\n\n  // data recording based on event\n  /**\n   * \n   * @param object \n   */\n  recordEvent(object) {\n    const subjectID = sessionStorage.getItem('subjectID');\n    const treatmentID = sessionStorage.getItem('treatmentID');\n    const treatmentAndSubjectURL = treatmentID + '/' + subjectID;\n    if (!this.trialSubject.recording) {\n      console.log('No data recording subject ID 0');\n      return;\n    }\n    // console.log(object);\n    let t = new Date().toISOString()\n    let res: any = {};\n    if (object.event == 'swapStarted') {\n      res.started = t;\n      Object.assign(res, object.data);\n      console.log(res);\n      this.swapInfo = res;\n\n    } else if (object.event == 'swapEnded') {\n      if (!this.swapInfo) {\n        // geht nicht\n      }\n      res.ended = t;\n      Object.assign(res, object.data);\n      Object.assign(res, this.swapInfo);\n      console.log(res);\n      // send Info\n      this.http.put(environment.apiURI + '/trial/swap/' + treatmentAndSubjectURL, res)\n        .subscribe(\n          () => {\n            this.swapInfo = null;\n          },\n          (error) => { console.error(error) }\n        );\n\n    } else if (object.event == 'labelInfoOpened') {\n      res.started = t;\n      Object.assign(res, object.data);\n      console.log(res);\n      this.lookUpInfo = res;\n\n    } else if (object.event == 'labelInfoClosed') {\n      res.ended = t;\n      Object.assign(res, object.data);\n      Object.assign(res, this.lookUpInfo);\n      console.log(res);\n      // send\n      this.http.put(environment.apiURI + '/trial/info/' + treatmentAndSubjectURL, res)\n        .subscribe(\n          () => {\n            this.lookUpInfo = null;\n          },\n          (error) => { }\n        );\n    } else { }\n  }\n\n  /**\n   * Records all filter events emitted. \n   * Subscribes to filtered, everytime a filter event is fired this event is send\n   * to be put to the filtered data in trial.model.\n   */\n  recordFilterEvents(filter) {\n    if (!this.trialSubject.recording) {\n      console.log('No data recording subject ID 0');\n      return;\n    }\n    const subjectID = sessionStorage.getItem('subjectID');\n    const treatmentID = sessionStorage.getItem('treatmentID');\n    const treatmentAndSubjectURL = treatmentID + '/' + subjectID;\n    let body = {\n      filter: filter,\n      time: new Date().toISOString()\n    }\n    this.http.put(`${environment.apiURI}/trial/filter/${treatmentAndSubjectURL}`, body).subscribe(\n      (msg) => { console.log(msg) },\n      (error) => { console.error(error) }\n    )\n  }\n  /**\n   * Seperate function to record sorting actions. \n   * @param {Object} sortOption \n   * @param {String} sortOption.filter\n   * @param {String} sortOption.type\n   */\n  recordSorting(sortOption) {\n    if (!this.trialSubject.recording) {\n      console.log('No data recording subject ID 0');\n      return;\n    }\n    const subjectID = sessionStorage.getItem('subjectID');\n    const treatmentID = sessionStorage.getItem('treatmentID');\n    const treatmentAndSubjectURL = treatmentID + '/' + subjectID;\n\n    const body = {\n      filter: sortOption,\n      time: new Date().toISOString()\n    }\n\n    this.http.put(`${environment.apiURI}/trial/filter/${treatmentAndSubjectURL}`, body).subscribe(\n      (msg) => { console.log(msg) },\n      (error) => { console.error(error) }\n    );\n  }\n  /**\n   * Triggered when checkout button in shopping-metrics.component is pressed\n   * PUT request saves the final shopping cart to trial data.\n   * @param {Array} cart \n   * @returns {Observable}\n   */\n  endShoppingSession(cart) {\n    const subjectID = sessionStorage.getItem('subjectID');\n    const treatmentID = sessionStorage.getItem('treatmentID');\n    const treatmentAndSubjectURL = treatmentID + '/' + subjectID;\n    return this.http.put(environment.apiURI + '/end/shoppingCart/' + treatmentAndSubjectURL, { cart: cart })\n  }\n\n  /**\n   * Triggered when trial is completly finished. PUT request initiates actions that \n   * prohibit the application from recording more data to an already finished trial.\n   * @returns {Observable}\n   */\n  endTrial() {\n    const subjectID = sessionStorage.getItem('subjectID');\n    const treatmentID = sessionStorage.getItem('treatmentID');\n    const treatmentAndSubjectURL = treatmentID + '/' + subjectID;\n    if (!this.trialSubject.recording) {\n      console.log('End not recorded because Subject 0');\n      return new Observable((sub) => { sub.next({}); sub.complete(); });\n    }\n    return new Observable((sub) => {\n      this.http.put(environment.apiURI + '/end/trial/' + treatmentAndSubjectURL, {}).subscribe(\n        (trialData) => {\n          sub.next(trialData);\n        },\n        (error) => {\n          sub.error(error);\n        }\n      )\n    });\n  }\n\n  recordOptIn(data) {\n    console.log(data);\n    const subjectID = sessionStorage.getItem('subjectID');\n    const treatmentID = sessionStorage.getItem('treatmentID');\n    if (subjectID == '0') { return new Observable((sub) => { sub.next(); sub.complete(); }) }\n    else { return this.http.put(`${environment.apiURI}/trial/swapOpts/${treatmentID}/${subjectID}`, data); }\n  }\n\n  async paginationEvent(body) {\n    const subjectID = sessionStorage.getItem('subjectID');\n    const treatmentID = sessionStorage.getItem('treatmentID');\n    if (subjectID == '0') { return }\n    await this.http.put(`${environment.apiURI}/trial/pagination/${treatmentID}/${subjectID}`, body).toPromise();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExampleFlatNode.html":{"url":"interfaces/ExampleFlatNode.html","title":"interface - ExampleFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExampleFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/trial/filter/filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat node with expandable and level information \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expandable\n                                \n                                \n                                        level\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expandable\n                                    \n                                \n                                \n                                    \n                                        expandable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Output, EventEmitter, ElementRef, ViewChild, AfterViewInit, HostListener } from '@angular/core';\nimport { FilterService } from '../trial-services/filter.service';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { ProductService } from '../trial-services/product.service';\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n\n/**\n * Filter Comopnent contains all elements for filtering the items diplayed in item grid.\n */\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnInit {\n  /**Stores all custom filter trees created for the treatment. Used for ngFor in template. */\n  Trees: any[] = [];\n  /**Only true if any custom filters are present. Switch for diplaying custom filters in template. */\n  showArray = false;\n  /**Stores the base category filter tree automatically generated by the product.service at the start of the treatment. */\n  sortByTagsTree: any;\n  /**Tree control for mat-tree for category filter. */\n  tagTreeControl = new NestedTreeControl(node => node.children);\n  /**Switch for displaying the category filter. */\n  showTagFilter = false;\n  /**Stores reference to currently selected node. Used to highlight the tree node. */\n  selectedNode: any;\n\n  // baseAttribute Filter\n  /**Stores all selected baseAttributs included in limit selection filter. */\n  baseAttributes = [];\n\n  /**\n   * Injecting services to be used in component.\n   * @param filterService \n   * @param productService \n   */\n  constructor(private filterService: FilterService, private productService: ProductService) { }\n  /**\n   * OnInit Funtion collects all necessary data form the services and decides the display options for the filters present.\n   * Initiates listener to react to resetFilter event.\n   */\n  ngOnInit() {\n    this.filterService.getFilterTrees().subscribe((val: any[]) => {\n      // val = val.concat([{name: 'Sort by Tags',tree: this.productService.getTreeOfTagsOfAllProducts()}]);\n      val.forEach((element, i) => {\n        console.log(element);\n        this.pushNodes(element);\n        if (i == val.length - 1) {\n          this.showArray = true;\n        }\n      });\n    });\n    // sort by tags\n    this.sortByTagsTree = this.productService.getTreeOfTagsOfAllProducts();\n    if (this.sortByTagsTree.length > 0) {\n      this.showTagFilter = true\n    }\n    // if (this.tags.length > 0) { this.showTagFilter = true }\n    // console.log(this.showTagFilter);\n    this.productService.getBaseAttributes().forEach(val => this.baseAttributes.push({ name: val, selected: false }))\n    if (!!this.filterService.selectedFilter && this.filterService.selectedFilter.type == 'limitSelection') {\n      for (let l of this.filterService.selectedFilter.filter) {\n        console.log(l);\n        const ind = this.baseAttributes.findIndex(x => x.name == l);\n        console.log(ind);\n        if (ind >= 0) {\n          this.baseAttributes[ind].selected = true;\n        }\n      }\n    }\n    this.filterService.resetFilter.subscribe(() => {\n      if (this.selectedNode) {\n        this.selectedNode.selected = false;\n        this.selectedNode = null;\n      }\n      if (this.baseAttributes.some(o => o.selected == true)) {\n        this.baseAttributes.forEach(element => { element.selected = false });\n        this.limitSelection('');\n      }\n    })\n  }\n  /**\n   * https://material.angular.io/components/tree/overview\n   * @param el \n   */\n  pushNodes(el) {\n    let treeControl = new NestedTreeControl(node => node.children);\n    let dataSource = new MatTreeNestedDataSource();\n    let obj = {\n      treeControl: treeControl,\n      dataSource: dataSource,\n      data: el\n    }\n    obj.dataSource.data = el.tree;\n    obj.treeControl.dataNodes = el.tree;\n    obj.treeControl.expandAll();\n    this.Trees.push(obj)\n  }\n  /**\n   * https://material.angular.io/components/tree/overview\n   */\n  hasChild = (_: number, node: any) => !!node.children && node.children.length > 0;\n  /**\n   * OnClick listener at tree node level for parent category level (not implemented). \n   * @param node \n   */\n  filter(node) {\n    this.deselectPreviousNode()\n    node.selected = true;\n    this.selectedNode = node;\n    this.filterService.categoryFilter(node.name);\n  }\n  /**\n   * OnClick listener on leaf level of mat-tree. Here a filter action / event is started\n   * @param node \n   */\n  baseItemFilter(node) {\n    this.deselectPreviousNode();\n    node.selected = true;\n    this.selectedNode = node;\n    if (!node.items) {\n      return this.filterService.filterItems(node.name, 'tagFilter');\n    }\n    return this.filterService.filterItems(node.items, 'filterTree');\n  }\n  /**\n   * Helper funktion to be called to deselct previously selected tree node from filter tree.\n   */\n  deselectPreviousNode(): void {\n    if (!this.selectedNode) { return }\n    this.selectedNode.selected = false;\n  }\n\n  /**\n   * Used to limit the selection of current items displayed based on their base Attributes.\n   * Operated by change listener on mat-checkbox.\n   * @param {String} base \n   */\n  limitSelection(base): void {\n    let limit = [];\n    this.baseAttributes.forEach(element => {\n      if (element.selected) {\n        limit.push(element.name);\n      }\n    })\n    if (limit.length == 0) {\n      if (this.selectedNode != null) {\n        this.filterService.filterItems(this.selectedNode.name, 'tagFilter');\n        return;\n      }\n      this.filterService.resetFilterEmit();\n      return;\n    }\n    this.filterService.filterItems(limit, 'limitSelection');\n  }\n\n  /**\n   * @ignore\n   */\n  resetFilter() {\n    this.filterService.resetFilterEmit();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterAllocateDialogComponent.html":{"url":"components/FilterAllocateDialogComponent.html","title":"component - FilterAllocateDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterAllocateDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-allocate-dialog\n            \n\n            \n                styleUrls\n                ./filter-allocate-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-allocate-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                selection\n                            \n                            \n                                show\n                            \n                            \n                                trees\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxLabel\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                masterToggle\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onSubmit\n                            \n                            \n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any, treeService: TreeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        treeService\n                                                  \n                                                        \n                                                                        TreeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkboxLabel\n                        \n                        \n                    \n                \n            \n            \n                \ncheckboxLabel(row?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:66\n                \n            \n\n\n            \n                \n                    The label for the checkbox on the passed row \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAllSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:52\n                \n            \n\n\n            \n                \n                    Whether the number of selected elements matches the total number of rows. \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            masterToggle\n                        \n                        \n                    \n                \n            \n            \n                \nmasterToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:59\n                \n            \n\n\n            \n                \n                    Selects all rows if they are not all selected; otherwise clear selection. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['select', 'ID', 'name', 'description']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SelectionModel(true, [])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trees\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { TreeService } from '../services/tree.service';\n\n@Component({\n  selector: 'app-filter-allocate-dialog',\n  templateUrl: './filter-allocate-dialog.component.html',\n  styleUrls: ['./filter-allocate-dialog.component.scss']\n})\nexport class FilterAllocateDialogComponent implements OnInit {\n\n  show = false;\n  trees: any[];\n\n  displayedColumns: string[] = ['select', 'ID', 'name', 'description'];\n\n  dataSource = new MatTableDataSource();\n  selection = new SelectionModel(true, []);\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private treeService: TreeService\n  ) { }\n\n  ngOnInit() {\n    console.log(this.data);\n    this.treeService.getAllTrees().subscribe((val: any) => {\n      console.log(val);\n      this.trees = val;\n      this.refresh();\n      if (this.data.filters.length > 0) {\n        let refArray = []\n        for (let sel of this.data.filters) {\n          refArray.push(sel.oldID)\n        }\n        this.dataSource.data.forEach(row => {\n          // console.log(row);\n          // console.log(`${refArray.includes(row._id)}`)\n          if (refArray.includes(row._id)) {\n            // console.log('select row')\n            this.selection.select(row);\n          }\n        })\n      }\n    })\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    // console.log(this.selection);\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    this.dialogRef.close(this.selection.selected);\n  }\n\n  refresh() {\n    this.dataSource.data = this.trees;\n    // console.log(this.dataSource);\n    this.show = true;\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n          \n        \n        \n          \n          \n        \n      \n  \n      \n         ID \n         {{element._id}} \n      \n  \n      \n      \n         Name \n         {{element.name}} \n      \n  \n      \n      \n         Beschreibung \n         {{element.description}} \n      \n  \n      \n      \n      \n    \n  \n    Cancel\n    Save\n  \n    \n\n    \n                \n                    ./filter-allocate-dialog.component.scss\n                \n                table {\n    width: 100%;\n}\ntd {\n    max-width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    // cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                         ID          {{element._id}}                              Name          {{element.name}}                              Beschreibung          {{element.description}}                                     Cancel    Save  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'FilterAllocateDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/filter/filter.component.ts\n\n\n    \n        Description\n    \n    \n        Filter Comopnent contains all elements for filtering the items diplayed in item grid.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseAttributes\n                            \n                            \n                                hasChild\n                            \n                            \n                                selectedNode\n                            \n                            \n                                showArray\n                            \n                            \n                                showTagFilter\n                            \n                            \n                                sortByTagsTree\n                            \n                            \n                                tagTreeControl\n                            \n                            \n                                Trees\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                baseItemFilter\n                            \n                            \n                                deselectPreviousNode\n                            \n                            \n                                filter\n                            \n                            \n                                limitSelection\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                pushNodes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterService: FilterService, productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/filter/filter.component.ts:38\n                            \n                        \n\n                \n                    \n                            Injecting services to be used in component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            baseItemFilter\n                        \n                        \n                    \n                \n            \n            \n                \nbaseItemFilter(node)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/filter/filter.component.ts:125\n                \n            \n\n\n            \n                \n                    OnClick listener on leaf level of mat-tree. Here a filter action / event is started\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deselectPreviousNode\n                        \n                        \n                    \n                \n            \n            \n                \ndeselectPreviousNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/filter/filter.component.ts:137\n                \n            \n\n\n            \n                \n                    Helper funktion to be called to deselct previously selected tree node from filter tree.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(node)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/filter/filter.component.ts:115\n                \n            \n\n\n            \n                \n                    OnClick listener at tree node level for parent category level (not implemented). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            limitSelection\n                        \n                        \n                    \n                \n            \n            \n                \nlimitSelection(base)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/filter/filter.component.ts:147\n                \n            \n\n\n            \n                \n                    Used to limit the selection of current items displayed based on their base Attributes.\nOperated by change listener on mat-checkbox.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    base\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/filter/filter.component.ts:50\n                \n            \n\n\n            \n                \n                    OnInit Funtion collects all necessary data form the services and decides the display options for the filters present.\nInitiates listener to react to resetFilter event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pushNodes\n                        \n                        \n                    \n                \n            \n            \n                \npushNodes(el)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/filter/filter.component.ts:94\n                \n            \n\n\n            \n                \n                    https://material.angular.io/components/tree/overview\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseAttributes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/filter/filter.component.ts:38\n                            \n                        \n\n                \n                    \n                        Stores all selected baseAttributs included in limit selection filter. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasChild\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/filter/filter.component.ts:110\n                            \n                        \n\n                \n                    \n                        https://material.angular.io/components/tree/overview\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/filter/filter.component.ts:34\n                            \n                        \n\n                \n                    \n                        Stores reference to currently selected node. Used to highlight the tree node. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/filter/filter.component.ts:26\n                            \n                        \n\n                \n                    \n                        Only true if any custom filters are present. Switch for diplaying custom filters in template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTagFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/filter/filter.component.ts:32\n                            \n                        \n\n                \n                    \n                        Switch for displaying the category filter. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortByTagsTree\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/filter/filter.component.ts:28\n                            \n                        \n\n                \n                    \n                        Stores the base category filter tree automatically generated by the product.service at the start of the treatment. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagTreeControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new NestedTreeControl(node => node.children)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/filter/filter.component.ts:30\n                            \n                        \n\n                \n                    \n                        Tree control for mat-tree for category filter. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Trees\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/filter/filter.component.ts:24\n                            \n                        \n\n                \n                    \n                        Stores all custom filter trees created for the treatment. Used for ngFor in template. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, ElementRef, ViewChild, AfterViewInit, HostListener } from '@angular/core';\nimport { FilterService } from '../trial-services/filter.service';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { ProductService } from '../trial-services/product.service';\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n\n/**\n * Filter Comopnent contains all elements for filtering the items diplayed in item grid.\n */\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnInit {\n  /**Stores all custom filter trees created for the treatment. Used for ngFor in template. */\n  Trees: any[] = [];\n  /**Only true if any custom filters are present. Switch for diplaying custom filters in template. */\n  showArray = false;\n  /**Stores the base category filter tree automatically generated by the product.service at the start of the treatment. */\n  sortByTagsTree: any;\n  /**Tree control for mat-tree for category filter. */\n  tagTreeControl = new NestedTreeControl(node => node.children);\n  /**Switch for displaying the category filter. */\n  showTagFilter = false;\n  /**Stores reference to currently selected node. Used to highlight the tree node. */\n  selectedNode: any;\n\n  // baseAttribute Filter\n  /**Stores all selected baseAttributs included in limit selection filter. */\n  baseAttributes = [];\n\n  /**\n   * Injecting services to be used in component.\n   * @param filterService \n   * @param productService \n   */\n  constructor(private filterService: FilterService, private productService: ProductService) { }\n  /**\n   * OnInit Funtion collects all necessary data form the services and decides the display options for the filters present.\n   * Initiates listener to react to resetFilter event.\n   */\n  ngOnInit() {\n    this.filterService.getFilterTrees().subscribe((val: any[]) => {\n      // val = val.concat([{name: 'Sort by Tags',tree: this.productService.getTreeOfTagsOfAllProducts()}]);\n      val.forEach((element, i) => {\n        console.log(element);\n        this.pushNodes(element);\n        if (i == val.length - 1) {\n          this.showArray = true;\n        }\n      });\n    });\n    // sort by tags\n    this.sortByTagsTree = this.productService.getTreeOfTagsOfAllProducts();\n    if (this.sortByTagsTree.length > 0) {\n      this.showTagFilter = true\n    }\n    // if (this.tags.length > 0) { this.showTagFilter = true }\n    // console.log(this.showTagFilter);\n    this.productService.getBaseAttributes().forEach(val => this.baseAttributes.push({ name: val, selected: false }))\n    if (!!this.filterService.selectedFilter && this.filterService.selectedFilter.type == 'limitSelection') {\n      for (let l of this.filterService.selectedFilter.filter) {\n        console.log(l);\n        const ind = this.baseAttributes.findIndex(x => x.name == l);\n        console.log(ind);\n        if (ind >= 0) {\n          this.baseAttributes[ind].selected = true;\n        }\n      }\n    }\n    this.filterService.resetFilter.subscribe(() => {\n      if (this.selectedNode) {\n        this.selectedNode.selected = false;\n        this.selectedNode = null;\n      }\n      if (this.baseAttributes.some(o => o.selected == true)) {\n        this.baseAttributes.forEach(element => { element.selected = false });\n        this.limitSelection('');\n      }\n    })\n  }\n  /**\n   * https://material.angular.io/components/tree/overview\n   * @param el \n   */\n  pushNodes(el) {\n    let treeControl = new NestedTreeControl(node => node.children);\n    let dataSource = new MatTreeNestedDataSource();\n    let obj = {\n      treeControl: treeControl,\n      dataSource: dataSource,\n      data: el\n    }\n    obj.dataSource.data = el.tree;\n    obj.treeControl.dataNodes = el.tree;\n    obj.treeControl.expandAll();\n    this.Trees.push(obj)\n  }\n  /**\n   * https://material.angular.io/components/tree/overview\n   */\n  hasChild = (_: number, node: any) => !!node.children && node.children.length > 0;\n  /**\n   * OnClick listener at tree node level for parent category level (not implemented). \n   * @param node \n   */\n  filter(node) {\n    this.deselectPreviousNode()\n    node.selected = true;\n    this.selectedNode = node;\n    this.filterService.categoryFilter(node.name);\n  }\n  /**\n   * OnClick listener on leaf level of mat-tree. Here a filter action / event is started\n   * @param node \n   */\n  baseItemFilter(node) {\n    this.deselectPreviousNode();\n    node.selected = true;\n    this.selectedNode = node;\n    if (!node.items) {\n      return this.filterService.filterItems(node.name, 'tagFilter');\n    }\n    return this.filterService.filterItems(node.items, 'filterTree');\n  }\n  /**\n   * Helper funktion to be called to deselct previously selected tree node from filter tree.\n   */\n  deselectPreviousNode(): void {\n    if (!this.selectedNode) { return }\n    this.selectedNode.selected = false;\n  }\n\n  /**\n   * Used to limit the selection of current items displayed based on their base Attributes.\n   * Operated by change listener on mat-checkbox.\n   * @param {String} base \n   */\n  limitSelection(base): void {\n    let limit = [];\n    this.baseAttributes.forEach(element => {\n      if (element.selected) {\n        limit.push(element.name);\n      }\n    })\n    if (limit.length == 0) {\n      if (this.selectedNode != null) {\n        this.filterService.filterItems(this.selectedNode.name, 'tagFilter');\n        return;\n      }\n      this.filterService.resetFilterEmit();\n      return;\n    }\n    this.filterService.filterItems(limit, 'limitSelection');\n  }\n\n  /**\n   * @ignore\n   */\n  resetFilter() {\n    this.filterService.resetFilterEmit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              {{t.data.name}}\n            \n          \n\n          \n            \n              \n                \n                {{node.name}}\n              \n            \n            \n              \n                \n                  {{node.name}}\n                \n                \n                  \n                \n              \n            \n          \n          Alle Produkte\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            Sort by Tags\n          \n        \n        \n          \n            \n              {{node.name}}\n            \n          \n          \n            \n              \n                {{node.name}}\n              \n              \n                \n              \n            \n          \n        \n        Alle Produkte\n      \n    \n     0\">\n      \n        \n          \n            Auswahl einschränken\n          \n        \n        \n          {{base.name}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./filter.component.scss\n                \n                // a.pointer {\n//     cursor: pointer;\n// }\n\n// a:hover {\n//     color: rgba(0,0,0,0.8)\n// }\n\n// mat-list-item {\n//     white-space: nowrap;\n//     overflow: hidden;\n//     text-overflow: ellipsis;\n// }\n\n.example-tree-invisible {\n  display: none;\n}\n\n.example-tree ul,\n.example-tree li {\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style-type: none;\n}\n\nul {\n  padding-inline-start: 15px;\n}\n\n.mat-tree-node {\n  min-height: 34px !important;\n  cursor: pointer;\n}\n\ndiv.mat-tree-node {\n  font-weight: bold;\n}\n\n.mat-tree-node.selected {\n  background-color: rgba(0, 123, 255, 0.3);\n}\n\n.height-limitter {\n  max-height: 75vh;\n  overflow: scroll;\n  overflow-x: scroll;\n  overflow-x: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{t.data.name}}                                                                                          {{node.name}}                                                                                      {{node.name}}                                                                                                                Alle Produkte                                                              Sort by Tags                                                              {{node.name}}                                                                          {{node.name}}                                                                                                Alle Produkte               0\">                                    Auswahl einschränken                                    {{base.name}}                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/trial/trial-services/filter.service.ts\n        \n\n            \n                Description\n            \n            \n                Filter service, provides and stores information about the filter status. For consistency between page changes.\nStores information about custom filter trees configured in the treatment settings.\nHolds eventemitters for filter events.\nUsed by multiple components.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryFiltered\n                            \n                            \n                                filtered\n                            \n                            \n                                filterTree\n                            \n                            \n                                navInfo\n                            \n                            \n                                resetFilter\n                            \n                            \n                                selectedFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _getNavInfo\n                            \n                            \n                                _setNavInfo\n                            \n                            \n                                categoryFilter\n                            \n                            \n                                filterItems\n                            \n                            \n                                getFilterTrees\n                            \n                            \n                                resetFilterEmit\n                            \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial-services/filter.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _getNavInfo\n                        \n                        \n                    \n                \n            \n            \n                \n_getNavInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/filter.service.ts:62\n                \n            \n\n\n            \n                \n                    Getter for navInfo (not needed, variable not private).\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        .navInfo}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _setNavInfo\n                        \n                        \n                    \n                \n            \n            \n                \n_setNavInfo(info)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/filter.service.ts:55\n                \n            \n\n\n            \n                \n                    Sets this.navInfo (not needed, variable not private).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            categoryFilter\n                        \n                        \n                    \n                \n            \n            \n                \ncategoryFilter(filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/filter.service.ts:87\n                \n            \n\n\n            \n                \n                    Unused ...\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterItems\n                        \n                        \n                    \n                \n            \n            \n                \nfilterItems(filter, type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/filter.service.ts:72\n                \n            \n\n\n            \n                \n                    Handles filter based on custom filter tree\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFilterTrees\n                        \n                        \n                    \n                \n            \n            \n                \ngetFilterTrees()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/filter.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        current filter trees of treatment specification.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetFilterEmit\n                        \n                        \n                    \n                \n            \n            \n                \nresetFilterEmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/filter.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(filters)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/filter.service.ts:106\n                \n            \n\n\n            \n                \n                    Sets filter at start of trial and after reload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryFiltered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/filter.service.ts:29\n                            \n                        \n\n                \n                    \n                        Eventemitter for category filter NOT USED.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/filter.service.ts:21\n                            \n                        \n\n                \n                    \n                        Eventemitter that emits filtered event for use in product Service etc.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterTree\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/filter.service.ts:17\n                            \n                        \n\n                \n                    \n                        Holds all custom filters specified in a treatment. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/filter.service.ts:25\n                            \n                        \n\n                \n                    \n                        Holds currentPage and items per page information, so that the paginator is not reset each time a page change happens. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/filter.service.ts:33\n                            \n                        \n\n                \n                    \n                        Eventemitter for resetFilter event.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/filter.service.ts:23\n                            \n                        \n\n                \n                    \n                        Holds the currently selected filter for consistency during page changes. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * Filter service, provides and stores information about the filter status. For consistency between page changes.\n * Stores information about custom filter trees configured in the treatment settings.\n * Holds eventemitters for filter events.\n * Used by multiple components.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterService {\n\n  /**Holds all custom filters specified in a treatment. */\n  filterTree: any[];\n  /**Eventemitter that emits filtered event for use in product Service etc.\n   * @emits Object\n   */\n  filtered: EventEmitter = new EventEmitter();\n  /**Holds the currently selected filter for consistency during page changes. */\n  selectedFilter: any;\n  /**Holds currentPage and items per page information, so that the paginator is not reset each time a page change happens. */\n  navInfo: any;\n  /**\n   * Eventemitter for category filter NOT USED.\n   */\n  categoryFiltered: EventEmitter = new EventEmitter();\n  /**Eventemitter for resetFilter event.\n   * @emits Boolean\n   */\n  resetFilter: EventEmitter = new EventEmitter();\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * @returns {Array} current filter trees of treatment specification.\n   */\n  getFilterTrees() {\n    if (!this.filterTree) {\n      // this.trialTreatmentService.setTreatmentDataOnReload\n      console.log('no data available from filter!')\n    } else {\n      return new Observable((sub) => {\n        sub.next(this.filterTree);\n        sub.complete();\n      });\n    }\n  }\n  /**\n   * Sets this.navInfo (not needed, variable not private).\n   * @param {Object} info \n   */\n  _setNavInfo(info) {\n    this.navInfo = info;\n  }\n  /**\n   * Getter for navInfo (not needed, variable not private).\n   * @returns {this.navInfo}\n   */\n  _getNavInfo() {\n    return this.navInfo;\n  }\n\n  /**\n   * Handles filter based on custom filter tree\n   * @param filter \n   * @param type \n   * @emits filtered event\n   */\n  filterItems(filter, type) {\n    this.selectedFilter = { filter, type };\n    if (type == 'notFilterTree') {\n      let searchString = filter.toLowerCase().split(' ');\n      console.log(searchString);\n      this.selectedFilter = { filter: searchString, type };\n    }\n    this.filtered.emit(this.selectedFilter);\n  }\n\n  // not in use ... \n  /**\n   * Unused ...\n   * @param filter \n   */\n  categoryFilter(filter) {\n    console.log(filter);\n    this.selectedFilter = { filter, type: 'tagFilter' }\n    this.filtered.emit(this.selectedFilter);\n  }\n\n  /**\n   * @emits resetFilter event\n   */\n  resetFilterEmit() {\n    this.selectedFilter = null;\n    this.resetFilter.emit(true);\n  }\n\n  // also after reload\n  /**\n   * Sets filter at start of trial and after reload.\n   * @param {Array} filters \n   */\n  setData(filters) {\n    this.filterTree = filters;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FixedNavDirective.html":{"url":"directives/FixedNavDirective.html","title":"directive - FixedNavDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FixedNavDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/trial/trial-shop/fixed-nav.directive.ts\n        \n\n            \n                Description\n            \n            \n                Fixed nav directive changes element display options for app filter \npositioned in trial-shop.component.html. If subjects scrolls further down \nthen 128px app filter converted to position fixed.\nBUG: does not properly work on Chrome.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFixedNav]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                el\n                            \n                            \n                                f\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fixed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial-shop/fixed-nav.directive.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        fixed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/trial/trial-shop/fixed-nav.directive.ts:48\n                            \n                        \n                \n                    \n                        Databinding emits fixed event fro placement of div to prevent nav resize.\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:scroll(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-shop/fixed-nav.directive.ts:18\n                \n            \n\n\n            \n                \n                    Hostlistener for window scroll event. \n\n\n                \n            \n        \n    \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-shop/fixed-nav.directive.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            f\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-shop/fixed-nav.directive.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/trial/trial-shop/fixed-nav.directive.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, Output, EventEmitter } from '@angular/core';\n\n/**\n * Fixed nav directive changes element display options for app filter \n * positioned in trial-shop.component.html. If subjects scrolls further down \n * then 128px app filter converted to position fixed.\n * BUG: does not properly work on Chrome.\n */\n@Directive({\n  selector: '[appFixedNav]'\n})\nexport class FixedNavDirective {\n  /**Hostlistener for window scroll event. */\n  @HostListener('window:scroll', ['$event'])\n  /**\n   * Switch based on scroll event.\n   */\n  doSomething(event) {\n    if (window.pageYOffset > 128) {\n      if (!this.width || (this.width == 0 && this.el.nativeElement.offsetWidth != 0)) {\n        this.width = this.el.nativeElement.offsetWidth;\n      }\n      if (!this.f) {\n        // this.width = this.el.nativeElement.offsetWidth;\n        this.el.nativeElement.style.position = 'fixed';\n        this.el.nativeElement.style.top = '0px';\n        this.el.nativeElement.style.width = `${this.width}px`\n        this.fixed.emit({ fixed: true, width: `${this.width}px` });\n        console.log({ fixed: true, width: `${this.width}px` })\n        this.f = true\n      }\n\n    }\n    if (window.pageYOffset  = new EventEmitter();\n  el: ElementRef;\n  width;\n  f = false;\n\n  constructor(el: ElementRef) {\n    this.el = el;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FoodCardComponent.html":{"url":"components/FoodCardComponent.html","title":"component - FoodCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FoodCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/food-card/food-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-food-card\n            \n\n            \n                styleUrls\n                ./food-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./food-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                counter\n                            \n                            \n                                showLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addToCart\n                            \n                            \n                                calculateScore\n                            \n                            \n                                conversionGrammagePrice\n                            \n                            \n                                displayAdditionalTaxInfo\n                            \n                            \n                                displayContentAmount\n                            \n                            \n                                displayTaxDescription\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                            \n                                routeToItemDetails\n                            \n                            \n                                swapDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                product\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    showScore\n                                \n                                \n                                    environment\n                                \n                                \n                                    showTax\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, router: Router, route: ActivatedRoute, dialog: MatDialog, eventsService: EventsService, trialTreatmentService: TrialTreatmentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/food-card/food-card.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialTreatmentService\n                                                  \n                                                        \n                                                                        TrialTreatmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        product\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/trial/food-card/food-card.component.ts:21\n                            \n                        \n                \n                    \n                        Databinding to recieve product information from parent (item-grid) \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-card/food-card.component.ts:71\n                \n            \n\n\n            \n                \n                    Click listener for + button in template. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToCart\n                        \n                        \n                    \n                \n            \n            \n                \naddToCart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-card/food-card.component.ts:135\n                \n            \n\n\n            \n                \n                    Click listener for add item to shopping cart button on template.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateScore\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateScore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-card/food-card.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            conversionGrammagePrice\n                        \n                        \n                    \n                \n            \n            \n                \nconversionGrammagePrice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-card/food-card.component.ts:64\n                \n            \n\n\n            \n                \n                    Function for determining display string for different weights specified.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayAdditionalTaxInfo\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayAdditionalTaxInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-card/food-card.component.ts:122\n                \n            \n\n\n            \n                \n                    Calculation of tax amount for display in template. \n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayContentAmount\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayContentAmount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-card/food-card.component.ts:53\n                \n            \n\n\n            \n                \n                    Function that determins string diplayed for content amount of item.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayTaxDescription\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayTaxDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-card/food-card.component.ts:104\n                \n            \n\n\n            \n                \n                    Determins string to display on additional tax information on food card.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-card/food-card.component.ts:40\n                \n            \n\n\n            \n                \n                    OnInit function to initialize showLabel switch.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-card/food-card.component.ts:75\n                \n            \n\n\n            \n                \n                    Click listener for - button in template. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeToItemDetails\n                        \n                        \n                    \n                \n            \n            \n                \nrouteToItemDetails(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-card/food-card.component.ts:97\n                \n            \n\n\n            \n                \n                    Fucntion for route to details view of specific item. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            swapDialog\n                        \n                        \n                    \n                \n            \n            \n                \nswapDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-card/food-card.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/food-card/food-card.component.ts:23\n                            \n                        \n\n                \n                    \n                        Counter Value displayed on template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/food-card/food-card.component.ts:27\n                            \n                        \n\n                \n                    \n                        Switch for determining if associated labels should be disiplayd on the card. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        showScore\n                    \n                \n\n                \n                    \n                        getshowScore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/food-card/food-card.component.ts:47\n                                \n                            \n                    \n                        \n                                Databinding for template \n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        environment\n                    \n                \n\n                \n                    \n                        getenvironment()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/food-card/food-card.component.ts:81\n                                \n                            \n                    \n                        \n                                Databinding for template \n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        showTax\n                    \n                \n\n                \n                    \n                        getshowTax()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/food-card/food-card.component.ts:85\n                                \n                            \n                    \n                        \n                                Databinding for template \n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ShoppingCartService } from '../shopping-cart/shopping-cart.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SwapDialogComponent } from '../swap-dialog/swap-dialog.component';\nimport { EventsService } from '../trial-services/events.service';\nimport { environment } from 'src/environments/environment';\nimport { TrialTreatmentService } from '../trial-services/trial-treatment.service';\nimport { SwapOptDialogComponent } from '../swap-opt-dialog/swap-opt-dialog.component';\nimport { Observable } from 'rxjs';\n/**\n * \n */\n@Component({\n  selector: 'app-food-card',\n  templateUrl: './food-card.component.html',\n  styleUrls: ['./food-card.component.scss']\n})\nexport class FoodCardComponent implements OnInit {\n  /**Databinding to recieve product information from parent (item-grid) */\n  @Input() product: any;\n  /**Counter Value displayed on template. */\n  counter = 1;\n\n  // showScore = false;\n  /**Switch for determining if associated labels should be disiplayd on the card. */\n  showLabel = false;\n\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n    private eventsService: EventsService,\n    private trialTreatmentService: TrialTreatmentService\n  ) { }\n  /**\n   * OnInit function to initialize showLabel switch.\n   */\n  ngOnInit() {\n    // console.log(this.product.label.length);\n    if (this.product.label.length > 0) {\n      this.showLabel = true;\n    }\n  }\n  /**Databinding for template */\n  get showScore() {\n    return this.trialTreatmentService.getDisplayOptions().showScore;\n  }\n  /**Function that determins string diplayed for content amount of item.\n   * @returns {String}\n   */\n  displayContentAmount() {\n    if (this.product.content.displayAmount == 'g' || this.product.content.displayAmount == 'ml') {\n      return `${(this.product.content.amountInKG * 1000).toFixed(0)}`;\n    } else if (this.product.content.displayAmount == 'kg' || this.product.content.displayAmount == 'l') {\n      return `${(this.product.content.amountInKG)}`;\n    }\n  }\n  /**\n   * Function for determining display string for different weights specified.\n   * @returns {String}\n   */\n  conversionGrammagePrice() {\n    if (this.product.content.displayAmount == 'kg' || this.product.content.displayAmount == 'l') {\n      return `1${this.product.content.displayAmount} = ${((this.product.netPrice / (this.product.content.amountInKG * 1)) * (1 + this.product.vat)).toFixed(2)} €`;\n    }\n    return `100${this.product.content.displayAmount} = ${((this.product.netPrice / (this.product.content.amountInKG * 10)) * (1 + this.product.vat)).toFixed(2)} €`;\n  }\n  /**Click listener for + button in template. */\n  add() {\n    this.counter += 1;\n  }\n  /**Click listener for - button in template. */\n  remove() {\n    if (this.counter > 1) {\n      this.counter -= 1;\n    }\n  }\n  /**Databinding for template */\n  get environment() {\n    return environment;\n  }\n  /**Databinding for template */\n  get showTax() {\n    return this.trialTreatmentService.getDisplayOptions().showTax;\n  }\n\n  calculateScore() {\n    const max = this.product.score.maxValue;\n    const min = this.product.score.minValue;\n    const score = (this.product.score.amount - min) / (max - min);\n    // console.log(score)\n    return `${(1 - score) * 100}%`;\n  }\n  /**Fucntion for route to details view of specific item. */\n  routeToItemDetails(id) {\n    this.router.navigate([id], { relativeTo: this.route });\n  }\n  /**\n   * Determins string to display on additional tax information on food card.\n   * @returns {String}\n   */\n  displayTaxDescription() {\n    let str = '';\n    let i = 0;\n    for (let t of this.product.taxes) {\n      if (this.product.taxes.length == 1) {\n        str = str.concat(t.shortDescription);\n      } else if (i == this.product.taxes.length - 1) {\n        str = str.concat(t.shortDescription);\n      } else {\n        str = str.concat(t.shortDescription + ' & ');\n      }\n      i++;\n    }\n    return str;\n  }\n  /**Calculation of tax amount for display in template. \n   * @returns {Number}\n  */\n  displayAdditionalTaxInfo() {\n    let taxes = 0;\n    if (this.product.taxes.length > 0) {\n      for (let t of this.product.taxes) {\n        taxes += Math.round(t.amount * this.product.netPrice * 100) / 100;\n      }\n    }\n    // console.log(`${Math.round((taxes + this.product.netPrice) * (1 + this.product.vat) * 100) / 100}`)\n    return taxes;\n  }\n  /**Click listener for add item to shopping cart button on template.\n   * @emits $recordEvent\n   */\n  addToCart() {\n    const { showSwaps, showOptInEachTime, showSwapEnd, showOptInStart } = this.trialTreatmentService.getSwapConfig();\n    const rememberStart = localStorage.getItem('rememberStart');\n    const remember = localStorage.getItem('remember');\n    if (showSwaps && this.product.swaps.length > 0) {\n      if (!showSwapEnd) {\n        if (showOptInEachTime && !remember) {\n          const dialogRef = this.dialog.open(SwapOptDialogComponent, {\n            data: {item: this.product},\n            maxHeight: '80%',\n            maxWidth: '80%'\n          })\n          dialogRef.afterClosed().subscribe(\n            (bool) => {\n              if (bool) {\n                this.swapDialog().subscribe(\n                  () => { }\n                )\n              } else {\n                this.shoppingCartService.addItemToCart(this.product, this.counter);\n              }\n            }\n          )\n        } else if (showOptInEachTime && remember == 'true') {\n          this.swapDialog().subscribe(() => { })\n        } else if (showOptInStart && rememberStart == 'true') {\n          this.swapDialog().subscribe(() => { })\n        } else if (showSwaps && !showSwapEnd && !showOptInStart && !showOptInEachTime) {\n          this.swapDialog().subscribe(\n            () => { }\n          )\n        } else {\n          this.shoppingCartService.addItemToCart(this.product, this.counter);\n        }\n      } else if (showSwapEnd) {\n        this.shoppingCartService.addItemToCart(this.product, this.counter);\n      }\n    } else {\n      this.shoppingCartService.addItemToCart(this.product, this.counter);\n    }\n  }\n\n  swapDialog() {\n    return new Observable((sub) => {\n      this.eventsService.$recordEvent.emit(\n        {\n          event: 'swapStarted',\n          data: {\n            originalItem: this.product._id,\n            originalAmount: this.counter,\n            swapOptions: this.product.swaps\n          }\n        }\n      );\n      const dialogRef = this.dialog.open(SwapDialogComponent, {\n        maxHeight: '80vh',\n        width: '80%',\n        data: {\n          originalItem: this.product._id,\n          items: this.product.swaps,\n          amount: this.counter\n        }\n      })\n\n      dialogRef.afterClosed().subscribe((result: any) => {\n        if (!result) {\n          this.eventsService.$recordEvent.emit(\n            {\n              event: 'swapEnded',\n              data: {\n                resultItem: this.product._id,\n                resultAmount: this.counter,\n                success: false\n              }\n            }\n          )\n          this.shoppingCartService.addItemToCart(this.product, this.counter);\n          sub.next();\n          sub.complete();\n        }\n        this.eventsService.$recordEvent.emit(\n          {\n            event: 'swapEnded',\n            data: {\n              resultItem: result.item._id,\n              resultAmount: result.amount,\n              success: true\n            }\n          }\n        )\n        this.shoppingCartService.addItemToCart(result.item, result.amount);\n        sub.next();\n        sub.complete();\n      });\n    })\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n    \n    \n    \n      \n        {{product.brand}}\n      \n      \n        \n          {{product.name}}\n        \n      \n      \n        {{displayContentAmount()}} {{product.content.displayAmount}} ({{conversionGrammagePrice()}})\n      \n       0 && showTax}\">\n         0 && showTax\">\n          {{displayTaxDescription()}} {{displayAdditionalTaxInfo() | currency:product.currency}}\n        \n        {{(product.netPrice + displayAdditionalTaxInfo()) * (1 + product.vat) | currency:product.currency}}\n        \n          inkl. Mwst.\n        \n      \n    \n  \n  \n  \n    \n       -->\n      \n        favorite\n       -->\n      \n        \n          \n        \n      \n      \n        \n          remove\n        \n        \n          \n            {{counter}}\n          \n        \n        \n          add\n        \n      \n      \n        shopping_cart\n      \n       -->\n    \n  \n\n    \n\n    \n                \n                    ./food-card.component.scss\n                \n                .wrapper {\n  border: 1px solid #ccc;\n  // height: 416px;\n  width: 100%;\n  min-width: 244px;\n}\n\n.img-wrapper {\n  margin-top: 16px;\n  margin-bottom: 8px;\n  height: 152px;\n}\n\n.product-img {\n  margin: 0 auto;\n  display: block;\n  height: 152px;\n  width: 152px;\n}\n\n.mini-description-wrapper {\n  max-width: calc(100% - 32px);\n  height: 172px;\n  margin: 0 16px;\n  display: flex;\n  flex-direction: column;\n}\n\n.mini-description-brand {\n  width: 100%;\n  height: 24px;\n  font-family: UnitRoundedOT, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-weight: 500;\n  line-height: 24px;\n  color: #285f86;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  font-size: 14px;\n  font-size: 0.875rem;\n}\n\n.mini-description-titel-wrapper {\n  width: 100%;\n  max-height: 64px;\n  min-height: 20px;\n  font-family: UnitRoundedOT, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  font-size: 1.125rem;\n  line-height: 1.11;\n  color: #4a4a4a;\n}\n\n.mini-description-titel {\n  display: inline-block;\n  // max-height: 39px;\n  // overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n}\n\n.grammage {\n  width: 100%;\n  height: 32px;\n  color: #4a4a4a;\n  font-size: 14px;\n  font-size: 0.875rem;\n}\n\n.mini-description-price {\n  width: 100%;\n  height: 24px;\n  margin-top: auto;\n  margin-bottom: 12px;\n  align-self: flex-end;\n  text-align: right;\n  font-family: UnitRoundedOT, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  font-size: 1.125rem;\n  line-height: 1.33;\n  color: #4a4a4a;\n}\n\n.mini-description-price.additional-tax {\n  margin-top: 40px;\n}\n\n.action-bar-wrapper {\n  display: flex;\n  min-width: 200px;\n  height: 40px;\n  margin: 8px 10px 16px;\n}\n.action-bar-inner {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  justify-content: space-between;\n}\n\n.counter {\n  height: 100%;\n  width: 34px;\n  display: inline-block;\n  line-height: 36px;\n  // vertical-align: middle;\n}\n\n.number {\n  font-family: UnitRoundedOT, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-size: 18px;\n  color: #4a4a4a;\n  border-left: none;\n  border-right: none;\n  width: 35px;\n  height: 100%;\n  text-align: center;\n  display: inline-block;\n  vertical-align: middle;\n  background-color: #f6f6f6;\n  // padding-top: auto;\n}\n\nbutton {\n  padding: 0 !important;\n  min-width: 32px;\n}\n\n.tax-info {\n  font-family: UnitRoundedOT, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-weight: 400;\n  width: 100%;\n  height: 16px;\n  text-align: right;\n  color: #4a4a4a;\n  letter-spacing: -0.1px;\n  font-size: 12px;\n  font-size: 0.75rem;\n}\n\n.tax-info.additional {\n  color: red;\n}\n\na {\n  cursor: pointer;\n  text-decoration: none;\n}\n\n.label-container {\n  position: relative;\n}\n\n.label-container .label {\n  position: absolute;\n  top: 16px;\n  left: 16px;\n  height: 75px;\n  width: 75px;\n  //   background-color: grey;\n}\n\n.label-container .label img {\n  //   object-fit: ;\n}\n\n.score-bar-background {\n  position: absolute;\n  top: 8px;\n  // left: 8px;\n  // display: flex;\n  width: 40px;\n  height: 24px;\n  background-image: linear-gradient(90deg, #00FF00, #FF4500);\n  // border-radius: 4px;\n}\n\n.rotate {\n  width: 40px;\n  position: relative;\n  transform: rotate(180deg);\n  margin-right: -20px;\n}\n\n// .score-bar {\n//   // position: absolute;\n//   height: 24px;\n//   width: 25%;\n//   // padding-right: 2px;\n//   background-color:rgb(0, 126, 0);\n//   // animation-delay: 0;\n// }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                {{product.brand}}                              {{product.name}}                            {{displayContentAmount()}} {{product.content.displayAmount}} ({{conversionGrammagePrice()}})             0 && showTax}\">         0 && showTax\">          {{displayTaxDescription()}} {{displayAdditionalTaxInfo() | currency:product.currency}}                {{(product.netPrice + displayAdditionalTaxInfo()) * (1 + product.vat) | currency:product.currency}}                  inkl. Mwst.                                   -->              favorite       -->                                                              remove                                      {{counter}}                                    add                            shopping_cart             -->      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'FoodCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FoodDetailsComponent.html":{"url":"components/FoodDetailsComponent.html","title":"component - FoodDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FoodDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/food-details/food-details.component.ts\n\n\n    \n        Description\n    \n    \n        Food Details Component\nDisplays detail information saved to a individual product.\n\nNutritional information\nproduct details\nLabels\nScore\nImage\n...\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-food-details\n            \n\n            \n                styleUrls\n                ./food-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./food-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                counter\n                            \n                            \n                                param\n                            \n                            \n                                product\n                            \n                            \n                                show\n                            \n                            \n                                showLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addToCart\n                            \n                            \n                                calculateScore\n                            \n                            \n                                displayAdditionalTaxInfo\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                            \n                                showInfo\n                            \n                            \n                                showTaxInfo\n                            \n                            \n                                swapDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    showScore\n                                \n                                \n                                    showTax\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, productService: ProductService, router: Router, eventsService: EventsService, shoppingCartService: ShoppingCartService, dialog: MatDialog, trialLabelService: TrialLabelService, trialTreatmentService: TrialTreatmentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/food-details/food-details.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialLabelService\n                                                  \n                                                        \n                                                                        TrialLabelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialTreatmentService\n                                                  \n                                                        \n                                                                        TrialTreatmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-details/food-details.component.ts:182\n                \n            \n\n\n            \n                \n                    Click listener for + button in template. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToCart\n                        \n                        \n                    \n                \n            \n            \n                \naddToCart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-details/food-details.component.ts:194\n                \n            \n\n\n            \n                \n                    Click listener for add item to shopping cart button on template.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateScore\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateScore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-details/food-details.component.ts:102\n                \n            \n\n\n            \n                \n                    Calculates score for display in template.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayAdditionalTaxInfo\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayAdditionalTaxInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-details/food-details.component.ts:89\n                \n            \n\n\n            \n                \n                    Calculation of tax amount for display in template. \n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-details/food-details.component.ts:175\n                \n            \n\n\n            \n                \n                    Workaround for template edited after diplayed warning \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-details/food-details.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-details/food-details.component.ts:186\n                \n            \n\n\n            \n                \n                    Click listener for - button in template. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showInfo\n                        \n                        \n                    \n                \n            \n            \n                \nshowInfo(labelID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-details/food-details.component.ts:114\n                \n            \n\n\n            \n                \n                    Starts Mat-Dialog for additional iformation about displayed Labels.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    labelID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showTaxInfo\n                        \n                        \n                    \n                \n            \n            \n                \nshowTaxInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-details/food-details.component.ts:163\n                \n            \n\n\n            \n                \n                    Starts show Mat-Dialog for additional tax info.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            swapDialog\n                        \n                        \n                    \n                \n            \n            \n                \nswapDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/food-details/food-details.component.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/food-details/food-details.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            param\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/food-details/food-details.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/food-details/food-details.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/food-details/food-details.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/food-details/food-details.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        showScore\n                    \n                \n\n                \n                    \n                        getshowScore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/food-details/food-details.component.ts:79\n                                \n                            \n                    \n                        \n                                Databinding to template \n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        showTax\n                    \n                \n\n                \n                    \n                        getshowTax()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/food-details/food-details.component.ts:83\n                                \n                            \n                    \n                        \n                                Databinding to template \n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\nimport { ProductService } from '../trial-services/product.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventsService } from '../trial-services/events.service';\nimport { ShoppingCartService } from '../shopping-cart/shopping-cart.service';\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TrialLabelService } from '../trial-services/trial-label.service';\nimport { Observable } from 'rxjs';\nimport { SwapDialogComponent } from '../swap-dialog/swap-dialog.component';\nimport { environment } from 'src/environments/environment';\nimport { TrialTreatmentService } from '../trial-services/trial-treatment.service';\nimport { SwapOptDialogComponent } from '../swap-opt-dialog/swap-opt-dialog.component';\n/**\n * Food Details Component\n * \n * Displays detail information saved to a individual product.\n * - Nutritional information\n * - product details\n * - Labels\n * - Score\n * - Image\n * ...\n */\n@Component({\n  selector: 'app-food-details',\n  templateUrl: './food-details.component.html',\n  styleUrls: ['./food-details.component.scss']\n})\nexport class FoodDetailsComponent implements OnInit, AfterViewInit {\n  /** */\n  param: any;\n  show = false;\n  showLabel = false;\n  // showScore = false;\n  product: any;\n  counter = 1;\n\n  constructor(\n    private route: ActivatedRoute,\n    private productService: ProductService,\n    private router: Router,\n    private eventsService: EventsService,\n    private shoppingCartService: ShoppingCartService,\n    private dialog: MatDialog,\n    private trialLabelService: TrialLabelService,\n    private trialTreatmentService: TrialTreatmentService\n  ) { }\n\n  ngOnInit() {\n    // this.eventsService.emitShowBack(true);\n    this.route.params.subscribe(\n      res => {\n        // console.log(res.id);\n        this.param = res.id;\n        this.productService.getProduct(this.param)\n          .then((item) => {\n            if (item == undefined) {\n              this.router.navigate(['/shop']);\n              return;\n            }\n            this.product = item;\n            if (item.label.length > 0) {\n              this.showLabel = true;\n            }\n            this.show = true;\n          })\n          .catch(() => {\n            this.router.navigate(['/shop']);\n          });\n      }\n    );\n  }\n  /**@ignore */\n  get environment() {\n    return environment;\n  }\n  /**Databinding to template */\n  get showScore() {\n    return this.trialTreatmentService.getDisplayOptions().showScore;\n  }\n  /**Databinding to template */\n  get showTax() {\n    return this.trialTreatmentService.getDisplayOptions().showTax;\n  }\n  /**Calculation of tax amount for display in template. \n   * @returns {Number}\n  */\n  displayAdditionalTaxInfo() {\n    let taxes = 0;\n    if (this.product.taxes.length > 0) {\n      for (let t of this.product.taxes) {\n        taxes += t.amount * this.product.netPrice;\n      }\n    }\n    return taxes;\n  }\n  /**\n   * Calculates score for display in template.\n   * @returns {String}\n   */\n  calculateScore() {\n    const max = this.product.score.maxValue;\n    const min = this.product.score.minValue;\n    const score = (this.product.score.amount - min) / (max - min);\n    // console.log(score)\n    return `${(1 - score) * 100}%`;\n  }\n  /**\n   * Starts Mat-Dialog for additional iformation about displayed Labels.\n   * @param labelID \n   * @emits $recordEvent\n   */\n  showInfo(labelID) {\n    console.log(labelID);\n    let obs = new Observable((sub) => {\n      this.trialLabelService.getLabelByID(labelID).subscribe(\n        (labelData) => {\n          const dialogRef = this.dialog.open(InfoDialogComponent, {\n            maxHeight: '80vh',\n            width: '80%',\n            data: {\n              object: labelData,\n            }\n          });\n          sub.next(dialogRef);\n        },\n        (error) => {\n          sub.error(error);\n        }\n      );\n    })\n    obs.subscribe((dialogRef) => {\n      let t = new Date().toISOString();\n      this.eventsService.$recordEvent.emit(\n        {\n          event: 'labelInfoOpened',\n          data: {\n            infoID: labelID,\n            started: t\n          }\n        }\n      )\n      dialogRef.afterClosed().subscribe(result => {\n        let t = new Date().toISOString();\n        this.eventsService.$recordEvent.emit(\n          {\n            event: 'labelInfoClosed',\n            data: {\n              infoID: labelID,\n              ended: t\n            }\n          }\n        )\n        console.log(result);\n      })\n    });\n  }\n  /**\n   * Starts show Mat-Dialog for additional tax info.\n   * @todo not implemented...\n   */\n  showTaxInfo() {\n    // record info viewed\n    const dialogRef = this.dialog.open(InfoDialogComponent, {\n      maxHeight: '80vh',\n      width: '80%',\n      data: {\n        taxes: this.product.taxes,\n      }\n    });\n    dialogRef.afterClosed().subscribe(() => { })\n  }\n  /**Workaround for template edited after diplayed warning */\n  ngAfterViewInit() {\n    // work around for reload on food details showBack\n    setTimeout(() => {\n      this.eventsService.emitShowBack(true);\n    }, 1)\n  }\n  /**Click listener for + button in template. */\n  add() {\n    this.counter += 1;\n  }\n  /**Click listener for - button in template. */\n  remove() {\n    if (this.counter > 1) {\n      this.counter -= 1;\n    }\n  }\n  /**Click listener for add item to shopping cart button on template.\n   * @emits $recordEvent\n   */\n  addToCart(): void {\n    const { showSwaps, showOptInEachTime, showSwapEnd, showOptInStart } = this.trialTreatmentService.getSwapConfig();\n    const rememberStart = localStorage.getItem('rememberStart');\n    const remember = localStorage.getItem('remember');\n    if (showSwaps && this.product.swaps.length > 0) {\n      if (!showSwapEnd) {\n        if (showOptInEachTime && !remember) {\n          const dialogRef = this.dialog.open(SwapOptDialogComponent, {\n            data: { item: this.product },\n            maxHeight: '80%',\n            maxWidth: '80%'\n          })\n          dialogRef.afterClosed().subscribe(\n            (bool) => {\n              if (bool) {\n                this.swapDialog().subscribe(\n                  () => { }\n                )\n              } else {\n                this.shoppingCartService.addItemToCart(this.product, this.counter);\n              }\n            }\n          )\n        } else if (showOptInEachTime && remember == 'true') {\n          this.swapDialog().subscribe(() => { })\n        } else if (showOptInStart && rememberStart == 'true') {\n          this.swapDialog().subscribe(() => { })\n        } else if (showSwaps && !showSwapEnd && !showOptInStart && !showOptInEachTime) {\n          this.swapDialog().subscribe(\n            () => { }\n          )\n        } else {\n          this.shoppingCartService.addItemToCart(this.product, this.counter);\n        }\n      } else if (showSwapEnd) {\n        this.shoppingCartService.addItemToCart(this.product, this.counter);\n      }\n    } else {\n      this.shoppingCartService.addItemToCart(this.product, this.counter);\n    }\n  }\n\n  swapDialog() {\n    return new Observable((sub) => {\n      this.eventsService.$recordEvent.emit(\n        {\n          event: 'swapStarted',\n          data: {\n            originalItem: this.product._id,\n            originalAmount: this.counter,\n            swapOptions: this.product.swaps\n          }\n        }\n      )\n      const dialogRef = this.dialog.open(SwapDialogComponent, {\n        maxHeight: '80vh',\n        width: '80%',\n        data: {\n          originalItem: this.product._id,\n          items: this.product.swaps,\n          amount: this.counter\n        }\n      })\n\n      dialogRef.afterClosed().subscribe((result: any) => {\n        console.log(result);\n        if (!result) {\n          this.eventsService.$recordEvent.emit(\n            {\n              event: 'swapEnded',\n              data: {\n                resultItem: this.product._id,\n                resultAmount: this.counter,\n                success: false\n              }\n            }\n          )\n          this.shoppingCartService.addItemToCart(this.product, this.counter);\n          sub.next();\n          sub.complete();\n        }\n        this.eventsService.$recordEvent.emit(\n          {\n            event: 'swapEnded',\n            data: {\n              resultItem: result.item._id,\n              resultAmount: result.amount,\n              success: true\n            }\n          }\n        )\n        this.shoppingCartService.addItemToCart(result.item, result.amount);\n        sub.next();\n        sub.complete();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n      \n       -->\n    \n    \n      {{product.name}}\n       0\">\n        {{product.description[0].text}}\n      \n      \n        Certification\n        \n          \n            \n          \n        \n      \n      \n        \n          {{product.score.header}} Score: {{product.score.amount}}\n          {{product.score.description}}\n          \n            \n              \n            \n          \n        \n      \n       0\">\n        This item is additionally taxed by:\n        \n          \n            {{t.header}} - {{t.shortDescription}}\n            \n            \n              info\n            \n          \n        \n      \n    \n    \n      \n        Art.-Nr. {{product._id}}\n         0 && showTax\">\n          \n            \n              {{t.shortDescription}} + {{t.amount * product.netPrice | currency: product.currency}}\n            \n          \n        \n        \n          {{(product.netPrice + displayAdditionalTaxInfo()) * (1 + product.vat) | currency: product.currency}}\n        inkl. gesetzliche Mwst.\n        \n          \n            \n              remove\n            \n            \n              \n                {{counter}}\n              \n            \n            \n              add\n            \n          \n        \n        \n          shopping_cart\n          In den Warenkorb\n        \n      \n    \n  \n  \n    \n  \n   0\">\n    \n      \n        \n          {{d.header}}\n          {{d.text}}\n        \n      \n    \n  \n  \n    Inhaltsstoffe:\n    {{product.ingredients}}\n  \n  \n    Allergene:\n    {{product.allergens}}\n  \n  \n    \n  \n  \n    \n      \n        \n          Nutritional Information (100 g)\n        \n        \n          Kj.:\n          {{product.nutritionalTable.kj}}\n        \n        \n          Kcal.:\n          {{product.nutritionalTable.kcal}}\n        \n        \n          Protein:\n          {{product.nutritionalTable.protein}}&nbsp;g\n        \n        \n          Carbohydrate:\n          {{product.nutritionalTable.totalCarbohydrate}}&nbsp;g\n        \n        \n          Sugar:\n          {{product.nutritionalTable.sugar}}&nbsp;g\n        \n        \n          Fat:\n          {{product.nutritionalTable.totalFat}}&nbsp;g\n        \n        \n          saturated fat:\n          {{product.nutritionalTable.saturatedFat}}&nbsp;g\n        \n        \n          Salt:\n          {{product.nutritionalTable.salt}}&nbsp;g\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./food-details.component.scss\n                \n                .call-to-action {\n  background-color: #f5f4f2;\n  // margin: 1rem 1rem 0.5rem 1rem;\n  margin-top: 1rem;\n  padding: 0.5rem 1rem 1rem;\n  display: flex;\n  flex-direction: column;\n}\n\nspan.call-to-action-num {\n  color: #9b9b9b;\n  display: block;\n  font-size: 16px;\n  font-size: 1rem;\n  line-height: 24px;\n  line-height: 1.5rem;\n  margin-bottom: 0.5rem;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\ndiv.call-to-action-price {\n  align-self: flex-end;\n  flex-grow: 1;\n  // margin-bottom: 1rem;\n  font-size: 1.5rem;\n  padding: 0 10px;\n  color: #4a4a4a;\n}\n\ndiv.call-to-action-price.additional {\n  font-size: 0.9rem;\n  color: red;\n}\n\ndiv.call-to-action-price.tax {\n  font-size: 0.9rem;\n  margin-bottom: 1rem;\n}\n\n.action-bar-wrapper {\n  display: flex;\n  position: relative;\n  // min-width: 200px;\n  flex-direction: row;\n  height: 40px;\n  margin: 8px 10px 16px;\n}\n\n.counter-div {\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.counter {\n  height: 100%;\n  width: 34px;\n  display: inline-block;\n  line-height: 36px;\n  // vertical-align: middle;\n}\n\n.number {\n  font-family: UnitRoundedOT, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-size: 18px;\n  color: #4a4a4a;\n  border-left: none;\n  border-right: none;\n  width: 35px;\n  height: 100%;\n  text-align: center;\n  display: inline-block;\n  vertical-align: middle;\n  background-color: #f6f6f6;\n  // padding-top: auto;\n}\n\nbutton {\n  padding: 0 !important;\n  min-width: 32px;\n}\n\nimg {\n  // position: absolute;\n  margin: auto;\n  // top: 0;\n  // left: 0;\n  // right: 0;\n  // bottom: 0;\n}\n\n.label-container {\n  display: flex;\n  flex-direction: row;\n}\n\n.label {\n  height: 75px;\n  padding-right: 15px;\n}\n\n#nutritionalInfo td,\n#nutritionalInfo td {\n  border: 1px solid #ddd;\n  padding: 4px;\n}\n\n#nutritionalInfo th {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  text-align: left;\n  background-color: #3f51b5;\n  color: white;\n}\n\n#nutritionalInfo {\n  border-collapse: collapse;\n}\n\n#nutritionalInfo tr:nth-child(even) {\n  background-color: #f2f2f2;\n}\n\n.score-bar-background {\n  // position: absolute;\n  // top: 8px;\n  // left: 8px;\n  // display: flex;\n  // width: 80%;\n  height: 24px;\n  background-image: linear-gradient(90deg, #00ff00, #ff4500);\n  // border-radius: 4px;\n}\n\n.rotate {\n  width: 80%;\n  position: relative;\n  transform: rotate(180deg);\n  // margin-right: -40px;\n}\n\n.info {\n  display: flex;\n  flex-direction: row;\n  height: 40px;\n  line-height: 40px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     -->              {{product.name}}       0\">        {{product.description[0].text}}                    Certification                                                                              {{product.score.header}} Score: {{product.score.amount}}          {{product.score.description}}                                                                               0\">        This item is additionally taxed by:                              {{t.header}} - {{t.shortDescription}}                                      info                                                          Art.-Nr. {{product._id}}         0 && showTax\">                                    {{t.shortDescription}} + {{t.amount * product.netPrice | currency: product.currency}}                                                {{(product.netPrice + displayAdditionalTaxInfo()) * (1 + product.vat) | currency: product.currency}}        inkl. gesetzliche Mwst.                                            remove                                                      {{counter}}                                                    add                                                shopping_cart          In den Warenkorb                               0\">                            {{d.header}}          {{d.text}}                          Inhaltsstoffe:    {{product.ingredients}}        Allergene:    {{product.allergens}}                                        Nutritional Information (100 g)                          Kj.:          {{product.nutritionalTable.kj}}                          Kcal.:          {{product.nutritionalTable.kcal}}                          Protein:          {{product.nutritionalTable.protein}} g                          Carbohydrate:          {{product.nutritionalTable.totalCarbohydrate}} g                          Sugar:          {{product.nutritionalTable.sugar}} g                          Fat:          {{product.nutritionalTable.totalFat}} g                          saturated fat:          {{product.nutritionalTable.saturatedFat}} g                          Salt:          {{product.nutritionalTable.salt}} g                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'FoodDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header displayed in shop.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                titel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseURL\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Shop'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/header/header.component.ts:15\n                            \n                        \n\n                \n                    \n                        Specifies shop name on html. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseURL\n                    \n                \n\n                \n                    \n                        getbaseURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/header/header.component.ts:24\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TrialSubjectService } from 'src/app/trial/trial-services/trial-subject.service';\nimport { TrialTreatmentService } from 'src/app/trial/trial-services/trial-treatment.service';\n/**\n * Header displayed in shop.\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  /**Specifies shop name on html. */\n  titel = 'Shop';\n  /**\n   * @ignore \n   */\n  constructor(\n    private treatmentService: TrialTreatmentService,\n    private subjectService: TrialSubjectService\n  ) { }\n\n  get baseURL() {\n    return `/t/${this.treatmentService.getTreatmentID()}/s/${this.subjectService.getSubjectID()}/shop/products`\n  }\n}\n\n    \n\n    \n        \n  \n    {{titel}}\n    \n    \n      favorite\n     -->\n    \n      \n          shopping_cart\n      \n     -->\n    \n      \n        person\n      \n    \n    \n      \n        code\n        Placeholder\n      \n      \n        person\n        Anmelden\n      \n      \n          person\n          Registrieren\n        \n     -->\n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .example-spacer {\n    flex: 1 1 auto;\n}\n\n.example-icon {\n    padding: 0 5px;\n    display: inline-block;\n}\n\n.button-wrapper {\n    padding: 0px 0px;\n    display: inline-block;\n    line-height: 24px\n}\n\n.ic-test {\n    line-height: 0px;\n    padding: 0 13px;\n}\n\n.mat-toolbar {\n    height: 64px;\n}\n\na {\n    color: #fff;\n}\n\na:hover {\n    text-decoration: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{titel}}              favorite     -->                    shopping_cart           -->                  person                            code        Placeholder                    person        Anmelden                      person          Registrieren             -->  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageDialogComponent.html":{"url":"components/ImageDialogComponent.html","title":"component - ImageDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/image-dialog/image-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Mat-dialog for uploading an image to Label/Item\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-image-dialog\n            \n\n            \n                styleUrls\n                ./image-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bg\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                formData\n                            \n                            \n                                h\n                            \n                            \n                                    Public\n                                imagePath\n                            \n                            \n                                imgURL\n                            \n                            \n                                maxFileSize\n                            \n                            \n                                selectedFile\n                            \n                            \n                                show\n                            \n                            \n                                showUpload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                preview\n                            \n                            \n                                removeImg\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any, imageService: ImageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/image-dialog/image-dialog.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor for Mat-Dialog for adding image either to Item, Label.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:50\n                \n            \n\n\n            \n                \n                    OnInit Livecycle hook, dicides item or label has image, \nif yes display image if not display palceholder image.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            preview\n                        \n                        \n                    \n                \n            \n            \n                \npreview(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:86\n                \n            \n\n\n            \n                \n                    Function for displaying a preview image in template.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeImg\n                        \n                        \n                    \n                \n            \n            \n                \nremoveImg(img)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:127\n                \n            \n\n\n            \n                \n                    Not used yet... \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    img\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \nupload(imgURL)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:143\n                \n            \n\n\n            \n                \n                    Function for handling image upload for Item, Label.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imgURL\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'contain'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:31\n                            \n                        \n\n                \n                    \n                        Image display option. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:29\n                            \n                        \n\n                \n                    \n                        FormData reference for sending image data to API. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            h\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '248px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:33\n                            \n                        \n\n                \n                    \n                        Image display height option. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imagePath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                        image path variable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imgURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxFileSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:24\n                            \n                        \n\n                \n                    \n                        Switch for displaying error MaxFileSize \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:16\n                            \n                        \n\n                \n                    \n                        Variable for image file \"blob\" \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                        Switch for data loading, true after ngOnInit has run. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/image-dialog/image-dialog.component.ts:26\n                            \n                        \n\n                \n                    \n                        Switch for displaying upload button if no errors are present. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { environment } from 'src/environments/environment';\nimport { ImageService } from '../services/image.service';\n\n/**\n * Mat-dialog for uploading an image to Label/Item\n */\n@Component({\n  selector: 'app-image-dialog',\n  templateUrl: './image-dialog.component.html',\n  styleUrls: ['./image-dialog.component.scss']\n})\nexport class ImageDialogComponent implements OnInit {\n  /**Variable for image file \"blob\" */\n  selectedFile: File;\n  /**image path variable. */\n  public imagePath;\n  imgURL: any[] = [];\n  // @Input() host: any;\n  /** Switch for data loading, true after ngOnInit has run. */\n  show: boolean;\n  /**Switch for displaying error MaxFileSize */\n  maxFileSize: boolean = false;\n  /**Switch for displaying upload button if no errors are present. */\n  showUpload: boolean = false;\n  // show = false;\n  /**FormData reference for sending image data to API. */\n  formData: FormData;\n  /**Image display option. */\n  bg = 'contain';\n  /**Image display height option. */\n  h = '248px';\n  /**\n   * Constructor for Mat-Dialog for adding image either to Item, Label.\n   * @param dialogRef \n   * @param data \n   * @param imageService \n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private imageService: ImageService\n  ) { }\n\n  /**\n   * OnInit Livecycle hook, dicides item or label has image, \n   * if yes display image if not display palceholder image.\n   */\n  ngOnInit() {\n    console.log(this.data);\n    if (this.data.ref == 'item') {\n      if (this.data.item.image == undefined) {\n        this.imgURL.push('assets/placeholder/placeholder-images-image_large.png');\n      } else {\n        this.imgURL.push(environment.apiURI + '/images/' + this.data.item.image.full);\n      }\n    } else if (this.data.ref == 'label') {\n      if (!this.data.item.img) {\n        this.imgURL.push('assets/placeholder/placeholder-images-image_large.png');\n      } else {\n        // console.log(this.data.item.img.data);\n        this.imgURL.push(environment.apiURI + '/image/label/' + this.data.item._id);\n      }\n    } else {\n\n    }\n    this.show = true;\n  }\n  /**\n   * @ignore\n   */\n  get environment() {\n    return environment;\n  }\n  /**\n   * @ignore\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  /**\n   * Function for displaying a preview image in template.\n   * @param event \n   */\n  preview(event) {\n    const files = event.target.files;\n    console.log(files);\n    if (files.length === 0) {\n      return;\n    }\n    const mimeType = files[0].type;\n    if (mimeType.match(/image\\/*/) == null) {\n      // this.message = \"Only images are supported.\";\n      return;\n    }\n\n    const reader = new FileReader();\n    this.imagePath = files;\n    reader.readAsDataURL(files[0]);\n    reader.onload = (_event) => {\n      if (_event.loaded > environment.maxFileSizeBits) {\n        this.maxFileSize = true;\n        return;\n      }\n      if (this.show) {\n        this.imgURL[0] = reader.result;\n      } else {\n        if (this.imgURL[0] == './assets/traktor_placeholder.jpeg') {\n          this.imgURL[0] = reader.result;\n        } else {\n          this.imgURL.push(reader.result);\n        }\n      }\n      this.showUpload = true;\n    };\n    console.log(this.imagePath);\n    console.log(this.imgURL);\n    // this.images.emit(this.imgURL);\n    this.selectedFile = event.target.files[0];\n    // console.log('file recieved');\n  }\n  /**\n   * Not used yet... \n   * @param img \n   */\n  removeImg(img) {\n    if (this.imgURL.length === 0) {\n      return;\n    } else if (this.imgURL.length === 1) {\n      this.imgURL.push('./assets/traktor_placeholder.jpeg')\n    }\n    this.imgURL.splice(this.imgURL.findIndex(x => x === img), 1);\n    if (this.imgURL.length !== 1) {\n      console.log('Hier bin ich, mit dem placeholder Bild')\n      // this.images.emit(this.imgURL);\n    }\n  }\n  /**\n   * Function for handling image upload for Item, Label.\n   * @param imgURL \n   */\n  upload(imgURL) {\n    this.formData = new FormData();\n    if (this.data.ref == 'item') {\n      this.formData.append('itemID', this.data.item._id);\n      this.formData.append('image', this.selectedFile);\n      console.log(this.formData);\n      // let body = {\n      //   itemID: this.data.item.itemID,\n      //   iamge: this.selectedFile\n      // }\n      this.showUpload = false;\n      this.imageService.uploadImageToItem(this.formData).subscribe(\n        (resp) => {\n          console.log(resp);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    } else if (this.data.ref == 'label') {\n      this.formData.append('labelID', this.data.item._id);\n      this.formData.append('image', this.selectedFile);\n      console.log(this.formData);\n      // let labelBody = {\n      //   labelID: this.data.item._id,\n      //   iamge: this.selectedFile\n      // }\n      this.showUpload = false;\n      this.imageService.uploadImageToLabel(this.formData).subscribe(\n        (val) => {\n          console.log(val);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      \n      \n        \n          \n            \n          \n           -->\n        \n      \n    \n    \n      Es können nur Bilder unter {{environment.maxFileSize}} hochgeladen werden.\n    \n    \n      Bild Auswählen\n    \n    \n      \n        Hochladen\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./image-dialog.component.scss\n                \n                .inputfile {\n\twidth: 0.1px;\n\theight: 0.1px;\n\topacity: 0;\n\toverflow: hidden;\n\tposition: absolute;\n\tz-index: -1;\n}\n\n.inputfile + a {\n    height: 100%;\n    width: 100%;\n    /* text-align: center;\n    vertical-align: middle;\n    line-height: 100%; */\n    display: inline-block;\n}\n\n.inputfile:focus + label,\n.inputfile + label:hover {\n    /* background-color: red; */\n    cursor: pointer;\n}\n\n.img-container {\n    /* position: relative; */\n    cursor: pointer;\n    display: flex;\n    flex-direction: row;\n}\n\n.cont {\n    justify-self: stretch; \n}\n\n.main {\n    width: 200px;\n    /* margin: 0 auto; */\n    overflow: hidden;\n    position: relative;\n    height: 200px;\n}\n\nimg.avatar {\n    // border-radius: 50%;\n    height:250px;\n    width: 250px;\n    object-fit: cover;\n}\n\nimg.absolute {\n    /* left: 50%;\n    margin-left: -100px; */\n    position: absolute;\n    max-height: 200px;\n    /* display: block;\n    min-width: 200px; */\n    /* min-height: 200px; */\n    /* max-width:200px; */\n    /* overflow: hidden;\n    max-height:200px;\n    width: auto;\n    height: auto; */\n  }\n\nimg.dims {\n    width: 200px;\n    height: 200px;\n    /* border: 1px solid #000; */\n}\nimg.object {\n    object-fit: cover;\n}\n\n.wrapper {\n    display: grid;\n    grid-template-columns: repeat(1, 1fr);\n    justify-items: start;\n    grid-gap: 15px;\n}\n\n.action {\n    padding: 5px 0 0 0;\n    display: flex;\n    width: 100%;\n}\n\n.alert {\n    padding: 5px 15px;\n    background-color: #d6604d;\n    color: white;\n    border-color: #a20900;\n}\n\ndiv.alert p {\n    margin: 0 !important;\n}\n\n.upload-btn {\n    width: 250px;\n    margin-bottom: 5px;\n}\n\nlabel.upload-btn {\n    box-sizing: border-box;\n    position: relative;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    cursor: pointer;\n    outline: 0;\n    border: none;\n    -webkit-tap-highlight-color: transparent;\n    display: inline-block;\n    white-space: nowrap;\n    text-decoration: none;\n    vertical-align: baseline;\n    text-align: center;\n    margin: 0;\n    min-width: 88px;\n    line-height: 36px;\n    padding: 0 16px;\n    border-radius: 2px;\n    overflow: visible;\n    transform: translate3d(0,0,0);\n    transition: background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);\n    box-shadow: 0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12);\n}\n\n\n.close {\n    position: absolute;\n    top: 0;\n    right: 0;\n    cursor: pointer;\n}\n.close:hover {\n    color: rgba(0,0,0,1)\n}\n\n@media(max-width: 375px) {\n    img.avatar {\n        height: 200px;\n        width: 200px;\n    }\n    .upload-btn {\n        width: 200px;\n    }\n} \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close                                                                       -->                            Es können nur Bilder unter {{environment.maxFileSize}} hochgeladen werden.              Bild Auswählen                      Hochladen            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImageDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageService.html":{"url":"injectables/ImageService.html","title":"injectable - ImageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/image.service.ts\n        \n\n            \n                Description\n            \n            \n                Image upload: Service for providing API requests to components.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                uploadImageToItem\n                            \n                            \n                                uploadImageToLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadImageToItem\n                        \n                        \n                    \n                \n            \n            \n                \nuploadImageToItem(body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/image.service.ts:17\n                \n            \n\n\n            \n                \n                    Upload Image to Item function\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadImageToLabel\n                        \n                        \n                    \n                \n            \n            \n                \nuploadImageToLabel(body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/image.service.ts:24\n                \n            \n\n\n            \n                \n                    Upload image to lable function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n/**\n * Image upload: Service for providing API requests to components.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  /**@ignore */\n  constructor(private http: HttpClient) { }\n  /**\n   * Upload Image to Item function\n   * @param body \n   */\n  uploadImageToItem(body) {\n    return this.http.post(environment.apiURI + '/add/image', body);\n  }\n  /**\n   * Upload image to lable function.\n   * @param body \n   */\n  uploadImageToLabel(body) {\n    console.log(body);\n    return this.http.post(environment.apiURI + '/label/image', body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/info-dialog/info-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Popover modal for displaying additional information.\nCan handle information for Label, Score, Taxes.\nImplemented as a mat-dialog.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                showImg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/info-dialog/info-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/info-dialog/info-dialog.component.ts:25\n                \n            \n\n\n            \n                \n                    Setup logic to determine what should be displayed. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/info-dialog/info-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                        Data holds the additional data to be displayed, either of ObjectModel Tax, Label, Score. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/info-dialog/info-dialog.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/info-dialog/info-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                        Switch for determining if an image needs to be shown, only if information is connected to a label. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Popover modal for displaying additional information.\n * Can handle information for Label, Score, Taxes.\n * Implemented as a mat-dialog.\n */\n@Component({\n  selector: 'app-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  /**Switch for determining if an image needs to be shown, only if information is connected to a label. */\n  showImg = false;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    /**Data holds the additional data to be displayed, either of ObjectModel Tax, Label, Score. */\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n  /**Setup logic to determine what should be displayed. */\n  ngOnInit() {\n    if (this.data.object) {\n      if (!this.data.object.img) {\n        this.showImg = false;\n      }\n      console.log(this.data.object);\n      // let blob = new Blob(this.data.object.img.data.data, {type: this.data.object.img.data.type});\n      // this.createImageFromBlob(blob);\n      this.showImg = true;\n    } else { }\n  }\n  /**@ignore */\n  get environment() {\n    return environment;\n  }\n\n  // createImageFromBlob(image: Blob) {\n  //   let reader = new FileReader();\n  //   reader.addEventListener(\"load\", () => {\n  //     this.imageBlobUrl = reader.result;\n  //   }, false);\n  //   if (image) {\n  //     reader.readAsDataURL(image);\n  //   }\n  // }\n  /**@ignore */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  {{data.object.header}}\n  \n    \n  \n  \n    {{data.object.description}}\n  \n\n\n  \n    {{t.header}} ({{t.shortDescription}})\n    {{t.description}}\n    Amount: {{t.amount | percent:'2.2'}}\n  \n\nCancel\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                .image img {\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{data.object.header}}              {{data.object.description}}        {{t.header}} ({{t.shortDescription}})    {{t.description}}    Amount: {{t.amount | percent:\\'2.2\\'}}  Cancel'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemAllocateDialogComponent.html":{"url":"components/ItemAllocateDialogComponent.html","title":"component - ItemAllocateDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ItemAllocateDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Addition dialog used for Swap, Item, and filter tree. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-allocate-dialog\n            \n\n            \n                styleUrls\n                ./item-allocate-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-allocate-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                items\n                            \n                            \n                                paginator\n                            \n                            \n                                selection\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxLabel\n                            \n                            \n                                handlePage\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                iterator\n                            \n                            \n                                masterToggle\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkboxLabel\n                        \n                        \n                    \n                \n            \n            \n                \ncheckboxLabel(row?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:99\n                \n            \n\n\n            \n                \n                    The label for the checkbox on the passed row \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handlePage\n                        \n                        \n                    \n                \n            \n            \n                \nhandlePage($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAllSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:85\n                \n            \n\n\n            \n                \n                    Whether the number of selected elements matches the total number of rows. \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            iterator\n                        \n                        \n                    \n                \n            \n            \n                \niterator(currentPage, pageSize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:142\n                \n            \n\n\n            \n                \n                    Iterator for handling pagination and slice definition for datasource of mat-table.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            masterToggle\n                        \n                        \n                    \n                \n            \n            \n                \nmasterToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:92\n                \n            \n\n\n            \n                \n                    Selects all rows if they are not all selected; otherwise clear selection. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:43\n                \n            \n\n\n            \n                \n                    OnInit lifecyce hook for data initialization; Initializes differently for\nItem addition, label addition, or swap addition.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:114\n                \n            \n\n\n            \n                \n                    OnClick listener function for confirming selection. Emits result to onclose listener. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:120\n                \n            \n\n\n            \n                \n                    Function for refreshing the UI components in template.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:25\n                            \n                        \n\n                \n                    \n                        Datasource for mat-table in template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['select', 'ID', 'name', 'brand']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:23\n                            \n                        \n\n                \n                    \n                        Mat-table column definition variable names. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:21\n                            \n                        \n\n                \n                    \n                        Variable for refrencing all items of a treatment. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:29\n                            \n                        \n\n                \n                    \n                        DOM binding for mat-paginator.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SelectionModel(true, [])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:27\n                            \n                        \n\n                \n                    \n                        Selection model for seleciton boxes on mat-table. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts:19\n                            \n                        \n\n                \n                    \n                        Switch value for visibility of dialog content, false previous to variable initializaiton. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ItemService } from '../services/item.service';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { TreatmentService } from '../services/treatment.service';\n\n/**\n * Addition dialog used for Swap, Item, and filter tree. \n */\n@Component({\n  selector: 'app-item-allocate-dialog',\n  templateUrl: './item-allocate-dialog.component.html',\n  styleUrls: ['./item-allocate-dialog.component.scss']\n})\nexport class ItemAllocateDialogComponent implements OnInit {\n  /**Switch value for visibility of dialog content, false previous to variable initializaiton. */\n  show = false;\n  /**Variable for refrencing all items of a treatment. */\n  items: any[];\n  /**Mat-table column definition variable names. */\n  displayedColumns: string[] = ['select', 'ID', 'name', 'brand'];\n  /**Datasource for mat-table in template. */\n  dataSource: any;\n  /**Selection model for seleciton boxes on mat-table. */\n  selection = new SelectionModel(true, []);\n  /**DOM binding for mat-paginator.  */\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  /**@ignore */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private itemService: ItemService,\n    private treatementService: TreatmentService\n  ) { }\n\n  /**\n   * OnInit lifecyce hook for data initialization; Initializes differently for\n   * Item addition, label addition, or swap addition.\n   */\n  ngOnInit() {\n    if (this.data.ref == 'tree') {\n      this.items = this.treatementService.getItemsofTreatment(this.data.treatmentID);\n      this.refresh();\n      this.dataSource.data.forEach((row) => {\n        if (this.data.items.includes(row._id)) {\n          this.selection.select(row);\n        }\n      });\n      return;\n    }\n    if (this.data.ref == 'swap') {\n      this.items = this.data.allItems;\n      this.refresh();\n      this.dataSource.data.forEach((row) => {\n        if (this.data.selectedItems.includes(row._id)) {\n          this.selection.select(row);\n        }\n      });\n      return;\n    }\n    this.itemService.getAllItems().subscribe(\n      (val: any[]) => {\n        this.items = val;\n        this.refresh();\n        if (this.data.items.length > 0) {\n          let refArray = [];\n          this.data.items.forEach(element => {\n            refArray.push(element.oldID);\n          });\n          this.dataSource.data.forEach((row) => {\n            if (refArray.includes(row._id)) {\n              this.selection.select(row);\n            }\n          });\n          this.show = true;\n        }\n      }\n    );\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    // console.log(this.selection);\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n  /**@ignore */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  /**\n   * OnClick listener function for confirming selection. Emits result to onclose listener. \n   */\n  onSubmit() {\n    this.dialogRef.close(this.selection.selected);\n  }\n  /**\n   * Function for refreshing the UI components in template.\n   */\n  refresh() {\n    this.dataSource = new MatTableDataSource();\n    this.dataSource.data = this.items;\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.paginator.length = this.dataSource.data.length;\n    this.iterator(this.paginator.pageIndex, this.paginator.pageSize)\n    this.show = true;\n  }\n\n  handlePage($event) {\n    const currentPage = $event.pageIndex;\n    const pageSize = $event.pageSize;\n    this.iterator(currentPage, pageSize);\n    if (!this.show) {\n      this.show = true;\n    }\n\n  }\n\n  /**\n   * Iterator for handling pagination and slice definition for datasource of mat-table.\n   */\n  iterator(currentPage, pageSize) {\n    const end = (currentPage + 1) * pageSize;\n    const start = currentPage * pageSize;\n    const part = this.dataSource.data.slice(start, end);\n    this.dataSource.slice = part;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n        \n        \n          \n          \n        \n      \n\n      \n         ID \n         {{element._id}} \n      \n\n      \n      \n         Name \n         {{element.name}} \n      \n\n      \n      \n         Marke \n         {{element.brand}} \n      \n\n      \n      \n      \n    \n  \n  \n\n  Cancel\n  Save\n\n    \n\n    \n                \n                    ./item-allocate-dialog.component.scss\n                \n                table {\n    width: 100%;\n}\ntd {\n    max-width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    // cursor: pointer;\n}\n\n.max-height {\n    max-height: 80%;\n    overflow: hidden;\n    overflow-y: scroll;\n}\n\n.wrapper {\n    overflow-y: scroll;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                         ID          {{element._id}}                            Name          {{element.name}}                            Marke          {{element.brand}}                                   Cancel  Save'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'ItemAllocateDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemGridComponent.html":{"url":"components/ItemGridComponent.html","title":"component - ItemGridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ItemGridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/item-grid/item-grid.component.ts\n\n\n    \n        Description\n    \n    \n        Central component that displays the item grid. \nNested Components: app-food-card\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-grid\n            \n\n            \n                styleUrls\n                ./item-grid.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-grid.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                dataSource\n                            \n                            \n                                filterOptions\n                            \n                            \n                                lengthProducts\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizes\n                            \n                            \n                                paginator\n                            \n                            \n                                products\n                            \n                            \n                                showGrid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handlePage\n                            \n                            \n                                iterator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetFilter\n                            \n                            \n                                setUp\n                            \n                            \n                                sortingSelection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, filterService: FilterService, trialTreatmentService: TrialTreatmentService, eventsService: EventsService, routeTrackingService: RoutingTrackerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/item-grid/item-grid.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialTreatmentService\n                                                  \n                                                        \n                                                                        TrialTreatmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeTrackingService\n                                                  \n                                                        \n                                                                        RoutingTrackerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handlePage\n                        \n                        \n                    \n                \n            \n            \n                \nhandlePage(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/item-grid/item-grid.component.ts:120\n                \n            \n\n\n            \n                \n                    Page event listener of the mat-paginator tag.\nSets navInfo in filter Service.\nInvoces the iterator function to handle page changes.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            iterator\n                        \n                        \n                    \n                \n            \n            \n                \niterator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/item-grid/item-grid.component.ts:103\n                \n            \n\n\n            \n                \n                    Handles the paginator at the bottom of the item display grid.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/item-grid/item-grid.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetFilter\n                        \n                        \n                    \n                \n            \n            \n                \nresetFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/item-grid/item-grid.component.ts:158\n                \n            \n\n\n            \n                \n                    Function that handles the logic for reseting all filters applied.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUp\n                        \n                        \n                    \n                \n            \n            \n                \nsetUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/item-grid/item-grid.component.ts:89\n                \n            \n\n\n            \n                \n                    Function handling the assignment of all necessary data for itemgrid display puposes.\nInturn call the iterator function that handles the pagination.\nAfter this the item grid is displayes (showGrid = true).\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortingSelection\n                        \n                        \n                    \n                \n            \n            \n                \nsortingSelection($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/item-grid/item-grid.component.ts:135\n                \n            \n\n\n            \n                \n                    Listener for selectionChange event on mat-select tag.\nHandles all three displayd options (reset, ascending price, decinding price).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/item-grid/item-grid.component.ts:40\n                            \n                        \n\n                \n                    \n                        Holds reference to the current page. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/item-grid/item-grid.component.ts:29\n                            \n                        \n\n                \n                    \n                        Holds items for display in item grid, also supports slices for pagination. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Preis aufsteigend', 'Preis absteigend']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/item-grid/item-grid.component.ts:31\n                            \n                        \n\n                \n                    \n                        Names of sorting options for use in dropdown selection of sorting options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lengthProducts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/item-grid/item-grid.component.ts:27\n                            \n                        \n\n                \n                    \n                        For reference, used in ngIf display reset filter tag at top of item grid.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.trialTreatmentService.getDisplayOptions().numOfItems\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/item-grid/item-grid.component.ts:38\n                            \n                        \n\n                \n                    \n                        Holds currently selected page size, can e overwritten by user specificaiton. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [5, 10, 20, 100]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/item-grid/item-grid.component.ts:33\n                            \n                        \n\n                \n                    \n                        Selection options for pagination. For dropdown seleciton of displayed products per page. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/item-grid/item-grid.component.ts:23\n                            \n                        \n\n                \n                    \n                        Viewchild reference to paginator of item grid. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/item-grid/item-grid.component.ts:25\n                            \n                        \n\n                \n                    \n                        All products that are selected, either all, or subselection of all after filtering. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showGrid\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/item-grid/item-grid.component.ts:36\n                            \n                        \n\n                \n                    \n                        Switch for displaying the whole item grid. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProductService } from '../trial-services/product.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FilterService } from '../trial-services/filter.service';\nimport { TrialTreatmentService } from '../trial-services/trial-treatment.service';\nimport { EventsService } from '../trial-services/events.service';\nimport { take } from 'rxjs/operators';\nimport { RoutingTrackerService } from '../trial-services/routing-tracker.service';\nimport { Router } from '@angular/router';\n\n/**\n * Central component that displays the item grid. \n * Nested Components: app-food-card\n */\n@Component({\n  selector: 'app-item-grid',\n  templateUrl: './item-grid.component.html',\n  styleUrls: ['./item-grid.component.scss']\n})\nexport class ItemGridComponent implements OnInit {\n  /**Viewchild reference to paginator of item grid. */\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  /**All products that are selected, either all, or subselection of all after filtering. */\n  products: any[] = [];\n  /**For reference, used in ngIf display reset filter tag at top of item grid.  */\n  lengthProducts: number;\n  /**Holds items for display in item grid, also supports slices for pagination. */\n  dataSource: any;\n  /**Names of sorting options for use in dropdown selection of sorting options. */\n  filterOptions = ['Preis aufsteigend', 'Preis absteigend'];\n  /**Selection options for pagination. For dropdown seleciton of displayed products per page. */\n  pageSizes = [5, 10, 20, 100];\n  // show = false;\n  /**Switch for displaying the whole item grid. */\n  showGrid = false;\n  /**Holds currently selected page size, can e overwritten by user specificaiton. */\n  pageSize = this.trialTreatmentService.getDisplayOptions().numOfItems;\n  /**Holds reference to the current page. */\n  currentPage = 0;\n\n  constructor(\n    private productService: ProductService,\n    private filterService: FilterService,\n    private trialTreatmentService: TrialTreatmentService,\n    private eventsService: EventsService,\n    private routeTrackingService: RoutingTrackerService\n  ) { }\n\n  /**\n   * \n   */\n  ngOnInit() {\n    if (this.filterService._getNavInfo() == undefined) { this.filterService._setNavInfo({ pageSize: this.pageSize, currentPage: this.currentPage }) }\n    else {\n      const navInfo = this.filterService._getNavInfo();\n      console.log(navInfo);\n      this.currentPage = navInfo.currentPage;\n      this.pageSize = navInfo.pageSize;\n    }\n    if (!this.filterService.selectedFilter) {\n      this.productService.getAllProducts().pipe(take(1)).subscribe((res: any) => {\n        this.products = res;\n        this.lengthProducts = this.products.length;\n        this.setUp();\n      })\n    } else {\n      this.products = this.productService.getItemsBasedOnFilter(this.filterService.selectedFilter.filter, this.filterService.selectedFilter.type);\n      this.setUp()\n    }\n    this.filterService.filtered.subscribe((val) => {\n      this.products = this.productService.getItemsBasedOnFilter(val.filter, val.type);\n      this.setUp();\n    });\n    this.filterService.resetFilter.subscribe(() => {\n      this.productService.getAllProducts().subscribe((val: any[]) => {\n        this.products = val;\n        this.setUp();\n      })\n    });\n    this.eventsService.emitShowBack(false);\n    // console.log(this.dataSource);\n  }\n  /**\n   * Function handling the assignment of all necessary data for itemgrid display puposes.\n   * Inturn call the iterator function that handles the pagination.\n   * After this the item grid is displayes (showGrid = true).\n   */\n  setUp() {\n    this.currentPage = 0;\n    this.showGrid = false;\n    this.dataSource = new MatTableDataSource();\n    this.products.sort((a, b) => a.niceness - b.niceness); // sort niceness ascending least nicest products first\n    this.dataSource.data = [...this.products];\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.paginator.length = this.dataSource.data.length;\n    this.iterator();\n    setTimeout(() => { this.showGrid = true; })\n  }\n  /**\n   * Handles the paginator at the bottom of the item display grid.\n   */\n  iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.dataSource.data.slice(start, end);\n    this.dataSource.slice = part;\n    let ids = [];\n    for (let i of part) {\n      ids.push(i._id);\n    }\n    this.eventsService.paginationEvent({currentPage: this.currentPage, pageSize: this.pageSize, itemsOnPage: ids, numInTotal: this.dataSource.data.length})\n  }\n  /**\n   * Page event listener of the mat-paginator tag.\n   * Sets navInfo in filter Service.\n   * Invoces the iterator function to handle page changes.\n   * @param e \n   */\n  handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.filterService._setNavInfo({ pageSize: this.pageSize, currentPage: this.currentPage })\n    this.iterator();\n    // if (!this.show) {\n    //   this.show = true;\n    // }\n    window.scroll(0, 0);\n  }\n  /**\n   * Listener for selectionChange event on mat-select tag.\n   * Handles all three displayd options (reset, ascending price, decinding price).\n   * @param $event \n   */\n  sortingSelection($event) {\n    const filter = { filter: !$event.value ? 'reset' : $event.value, type: 'sorting' }\n    this.eventsService.recordSorting(filter);\n    if (!$event.value) {\n      this.dataSource.data = this.products;\n      this.iterator();\n      return;\n    }\n    if ($event.value == 'Preis aufsteigend') {\n      this.dataSource.data.sort((a, b) => a.netPrice - b.netPrice);\n      this.iterator();\n      return;\n    }\n    if ($event.value == 'Preis absteigend') {\n      this.dataSource.data.sort((a, b) => b.netPrice - a.netPrice);\n      this.iterator();\n      return;\n    }\n  }\n  /**\n   * Function that handles the logic for reseting all filters applied.\n   * @emits resetFilter Event.\n   */\n  resetFilter() {\n    const filter = { filter: 'reset', type: 'general' }\n    // this.eventsService.recordSorting(filter);\n    this.productService.filteredItems = undefined;\n    this.filterService.resetFilterEmit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Sortieren nach...\n        \n          None\n          {{opt}}\n        \n      \n    \n     products.length\">\n       -->\n      Produkte gefiltert\n      close\n       -->\n    \n    \n      some content\n      \n        close\n      \n     -->\n  \n  \n    \n      \n    \n  \n  \n    \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./item-grid.component.scss\n                \n                .cont {\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  // grid-gap: 15px;\n}\n\n.filter-bar {\n  height: 48px;\n  width: 100%;\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  margin-left: 5px;\n  margin-right: 6px;\n}\n\n.filter-bar .content {\n  line-height: 48px;\n  // margin-right: 6px;\n}\n\n.filter-bar .content.item-filter {\n  //   min-width: 90px;\n  max-width: 350px;\n  flex-grow: 2;\n}\n\n.alert {\n  height: 48px;\n  margin: 0;\n  padding: 0 0 0 15px;\n}\n\n.filter-alert-text {\n  display: inline-flex;\n  line-height: 48px;\n  vertical-align: middle;\n}\n\n.filter-alert-icon {\n  display: inline-flex;\n  vertical-align: middle;\n  cursor: pointer;\n  margin-left: 10px;\n  margin-right: 5px;\n}\n\nmat-form-field {\n  width: 100%;\n}\n\n@media only screen and (min-width: 675px) {\n  .cont {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media only screen and (min-width: 890px) {\n  .cont {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media only screen and (min-width: 1105px) {\n  .cont {\n    grid-template-columns: repeat(3, 1fr);\n  }\n}\n\n@media only screen and (min-width: 1320px) {\n  .cont {\n    grid-template-columns: repeat(4, 1fr);\n  }\n}\n\n@media only screen and (min-width: 1535px) {\n  .cont {\n    grid-template-columns: repeat(5, 1fr);\n  }\n}\n\n@media only screen and (min-width: 1750px) {\n  .cont {\n    grid-template-columns: repeat(6, 1fr);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Sortieren nach...                  None          {{opt}}                       products.length\">       -->      Produkte gefiltert      close       -->              some content              close           -->                                            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'ItemGridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemManageComponent.html":{"url":"components/ItemManageComponent.html","title":"component - ItemManageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ItemManageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/item-manage/item-manage.component.ts\n\n\n    \n        Description\n    \n    \n        Item manage component. \nHandles base item creation and edit, and edit of items saved to a treatment.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-manage\n            \n\n            \n                styleUrls\n                ./item-manage.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-manage.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeEditEmitter\n                            \n                            \n                                currentPage\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayCols\n                            \n                            \n                                editTreatmentItem\n                            \n                            \n                                items\n                            \n                            \n                                pageSize\n                            \n                            \n                                paginator\n                            \n                            \n                                show\n                            \n                            \n                                showNav\n                            \n                            \n                                treatment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImage\n                            \n                            \n                                deleteItem\n                            \n                            \n                                editItem\n                            \n                            \n                                handlePage\n                            \n                            \n                                iterator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setUp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                treatment\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Treatment\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        treatment\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:21\n                            \n                        \n                \n                    \n                        Databinding input for treatment specification. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addImage\n                        \n                        \n                    \n                \n            \n            \n                \naddImage(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-manage/item-manage.component.ts:125\n                \n            \n\n\n            \n                \n                    Funciton that starts dialog for adding image to an item.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteItem(element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-manage/item-manage.component.ts:137\n                \n            \n\n\n            \n                \n                    OnClick listener for deleting base item / treatment item.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editItem\n                        \n                        \n                    \n                \n            \n            \n                \neditItem(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-manage/item-manage.component.ts:113\n                \n            \n\n\n            \n                \n                    OnClick listener starting edit of an item (base Item or treatment item).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handlePage\n                        \n                        \n                    \n                \n            \n            \n                \nhandlePage(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-manage/item-manage.component.ts:89\n                \n            \n\n\n            \n                \n                    Mat-pagination handler function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            iterator\n                        \n                        \n                    \n                \n            \n            \n                \niterator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-manage/item-manage.component.ts:101\n                \n            \n\n\n            \n                \n                    Iterator for handling pagination and slice definition for datasource of mat-table.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-manage/item-manage.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUp\n                        \n                        \n                    \n                \n            \n            \n                \nsetUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/item-manage/item-manage.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeEditEmitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:42\n                            \n                        \n\n                \n                    \n                        Databinding emitter for ending edit of specific item. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:32\n                            \n                        \n\n                \n                    \n                        Variable for current page reference. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:34\n                            \n                        \n\n                \n                    \n                        Datasource for mat-table on template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayCols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['_id', 'brand', 'name', 'edit']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:48\n                            \n                        \n\n                \n                    \n                        Variable names for mat-table column definition. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editTreatmentItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:46\n                            \n                        \n\n                \n                    \n                        Switch for signigfyong if item that is edited is a treatment specific item. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:38\n                            \n                        \n\n                \n                    \n                        Variable holds treatment specific items. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 25\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:30\n                            \n                        \n\n                \n                    \n                        Variable that controls the pagesize of paginator. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:28\n                            \n                        \n\n                \n                    \n                        DOM binding for mat-paginator.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:40\n                            \n                        \n\n                \n                    \n                        Switch for changing visibility if all data is loaded. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showNav\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:44\n                            \n                        \n\n                \n                    \n                        Switch for displaying back button only on base item edit / creation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            treatment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:36\n                            \n                        \n\n                \n                    \n                        Holds treatment data for use in component script. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Treatment\n                    \n                \n\n\n                \n                    \n                        setTreatment(treatment: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/admin/item-manage/item-manage.component.ts:21\n                                \n                            \n                    \n                        \n                                Databinding input for treatment specification. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            treatment\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ImageDialogComponent } from 'src/app/shared/image-dialog/image-dialog.component';\nimport { TreatmentService } from '../services/treatment.service';\nimport { ItemService } from '../services/item.service';\n\n/**\n * Item manage component. \n * Handles base item creation and edit, and edit of items saved to a treatment.\n */\n@Component({\n  selector: 'app-item-manage',\n  templateUrl: './item-manage.component.html',\n  styleUrls: ['./item-manage.component.scss']\n})\nexport class ItemManageComponent implements OnInit {\n  /**Databinding input for treatment specification. */\n  @Input('treatment') set Treatment(treatment: any) {\n    this.treatment = treatment;\n    this.items = treatment.items;\n  };\n\n  // paginator \n  /**DOM binding for mat-paginator.  */\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  /**Variable that controls the pagesize of paginator. */\n  pageSize: number = 25;\n  /**Variable for current page reference. */\n  currentPage = 0;\n  /**Datasource for mat-table on template. */\n  dataSource: any;\n  /**Holds treatment data for use in component script. */\n  treatment: any;\n  /**Variable holds treatment specific items. */\n  items: any[];\n  /**Switch for changing visibility if all data is loaded. */\n  show = false;\n  /**Databinding emitter for ending edit of specific item. */\n  closeEditEmitter: any;\n  /**Switch for displaying back button only on base item edit / creation */\n  showNav = true;\n  /**Switch for signigfyong if item that is edited is a treatment specific item. */\n  editTreatmentItem = false;\n  /**Variable names for mat-table column definition. */\n  displayCols = ['_id', 'brand', 'name', 'edit'];\n\n  /**@ignore */\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private dialog: MatDialog,\n    private treatmentService: TreatmentService,\n    private itemService: ItemService\n  ) { }\n  /**\n   * \n   */\n  ngOnInit() {\n    if (!this.route.snapshot.data.items) {\n      this.items = this.treatment.items;\n      this.showNav = false;\n      this.editTreatmentItem = true;\n    } else {\n      this.items = this.route.snapshot.data.items;\n    }\n    this.closeEditEmitter = this.itemService.closeEdit.subscribe(() => {\n      this.router.navigate([{ outlets: { itemOutlet: null } }], { relativeTo: this.route });\n    });\n    this.setUp();\n  }\n  /**\n   * \n   */\n  setUp() {\n    this.dataSource = new MatTableDataSource();\n    this.dataSource.data = this.items;\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.paginator.length = this.dataSource.data.length;\n    this.iterator();\n    this.show = true;\n  }\n  /**\n   * Mat-pagination handler function.\n   * @param event \n   */\n  handlePage(event) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.iterator();\n    if (!this.show) {\n      this.show = true;\n    }\n  }\n\n  /**\n   * Iterator for handling pagination and slice definition for datasource of mat-table.\n   */\n  iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.dataSource.data.slice(start, end);\n    this.dataSource.slice = part;\n  }\n\n  // get items() { return this.route.snapshot.data.items }\n  /**\n   * OnClick listener starting edit of an item (base Item or treatment item).\n   * @param row \n   */\n  editItem(row) {\n    console.log(this.editTreatmentItem);\n    if (this.editTreatmentItem) {\n      this.router.navigate([{ outlets: { itemOutlet: 'editItem/' + row._id } }], { relativeTo: this.route });\n      return;\n    }\n    this.router.navigate([{ outlets: { itemOutlet: 'baseEdit/' + row._id } }], { relativeTo: this.route });\n  }\n  /**\n   * Funciton that starts dialog for adding image to an item.\n   * @param item \n   */\n  addImage(item): void {\n    const dialogRef = this.dialog.open(ImageDialogComponent, {\n      width: '80%',\n      data: { ref: 'item', item: item }\n    });\n\n    dialogRef.afterClosed().subscribe(result => { });\n  }\n  /**\n   * OnClick listener for deleting base item / treatment item.\n   * @param element \n   */\n  deleteItem(element) {\n    const id = element._id;\n    console.log(this.editTreatmentItem);\n    if (!this.editTreatmentItem) {\n      this.itemService.deleteBaseItem(id).subscribe(() => {\n        this.items.splice(this.items.findIndex(x => x._id == id), 1);\n      });\n      // return;\n    } else {\n      this.treatmentService.removeItemFromTreatment(this.treatment._id, element._id).subscribe(\n        (val) => {\n          console.log(val);\n          this.treatmentService.replaceTreatment(val);\n          this.treatmentService.emitRefreshUI();\n        },\n        (error) => { console.log(error) }\n      );\n    }\n  }\n  /**\n   * @ignore\n   */\n  onBack() {\n    this.router.navigate(['/admin']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{item.name}}\n      {{item.brand}}\n    \n  \n -->\n\n  \n    \n      \n        arrow_back\n      \n      Back to administration\n    \n\n    \n      Manage Items\n      Here you can edit and delete your base items. Note that if you edit the base item the corresponding item\n        allocated\n        to a treatment is not updated. If you delete a base item however, it is also deleted from all treatments.\n    \n  \n  \n    \n       Item ID \n       {{element._id}} \n    \n\n    \n       Obergruppe \n       {{element.superGroup}} \n    \n\n    \n       Untergruppe \n       {{element.subGroup}} \n     -->\n\n    \n       Marke \n       {{element.brand}} \n    \n\n    \n       Name \n       {{element.name}} \n    \n\n    \n       Edit \n      \n        \n          more_vert\n        \n        \n          Edit\n          Bild hinzufügen\n          Remove\n        \n      \n    \n\n    \n    \n  \n  \n\n  \n\n    \n\n    \n                \n                    ./item-manage.component.scss\n                \n                table {\n    width: 100%;\n}\ntd {\n    max-width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    // cursor: pointer;\n}\n\n.mini-nav {\n    display: flex;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{item.name}}      {{item.brand}}       -->                    arrow_back            Back to administration              Manage Items      Here you can edit and delete your base items. Note that if you edit the base item the corresponding item        allocated        to a treatment is not updated. If you delete a base item however, it is also deleted from all treatments.                   Item ID        {{element._id}}                Obergruppe        {{element.superGroup}}                Untergruppe        {{element.subGroup}}      -->           Marke        {{element.brand}}                Name        {{element.name}}                Edit                         more_vert                          Edit          Bild hinzufügen          Remove                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'ItemManageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ItemResolverService.html":{"url":"guards/ItemResolverService.html","title":"guard - ItemResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ItemResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/admin/services/item-resolver.service.ts\n            \n\n                \n                Description\n                \n                \n                    Service for item resolver service.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/item-resolver.service.ts:19\n                \n            \n\n\n            \n                \n                    Function for router resolver.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ItemService } from './item.service';\n\n/**\n * Service for item resolver service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemResolverService implements Resolve> {\n  /**@ignore */\n  constructor(private itemService: ItemService) { }\n  /**\n   * Function for router resolver.\n   * @returns {Observable}\n   */\n  resolve() {\n    return this.itemService.getAllItems();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemService.html":{"url":"injectables/ItemService.html","title":"injectable - ItemService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin/services/item.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteBaseItem\n                            \n                            \n                                emitCloseEdit\n                            \n                            \n                                getAllItems\n                            \n                            \n                                getItemsByArray\n                            \n                            \n                                saveEditedItem\n                            \n                            \n                                saveNewItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBaseItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBaseItem(itemID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/item.service.ts:61\n                \n            \n\n\n            \n                \n                    Delete base item on the basis of itemID.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    itemID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitCloseEdit\n                        \n                        \n                    \n                \n            \n            \n                \nemitCloseEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/item.service.ts:18\n                \n            \n\n\n            \n                \n                    Emitter for closing edit view.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllItems\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/item.service.ts:25\n                \n            \n\n\n            \n                \n                    Function for getting all base items of specified by authenticated users. \n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsByArray\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsByArray(items)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/item.service.ts:52\n                \n            \n\n\n            \n                \n                    Getting items based on items array on ref ids. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveEditedItem\n                        \n                        \n                    \n                \n            \n            \n                \nsaveEditedItem(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/item.service.ts:43\n                \n            \n\n\n            \n                \n                    Function for updating item. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveNewItem\n                        \n                        \n                    \n                \n            \n            \n                \nsaveNewItem(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/item.service.ts:34\n                \n            \n\n\n            \n                \n                    Function for saving new item.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/services/item.service.ts:12\n                            \n                        \n\n                \n                    \n                        EventEmitter close edit \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { of, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n  /**EventEmitter close edit */\n  closeEdit: EventEmitter = new EventEmitter();\n  /**@ignore */\n  constructor(private http: HttpClient) { }\n  /**\n   * Emitter for closing edit view.\n   */\n  emitCloseEdit() {\n    this.closeEdit.emit(true);\n  }\n  /**\n   * Function for getting all base items of specified by authenticated users. \n   * @returns {Observable}\n   */\n  getAllItems() {\n    return this.http.get(environment.apiURI + '/my/items').pipe(catchError(val => of(`I caught: ${val}`)));\n  }\n\n  /**\n   * Function for saving new item.\n   * @param item \n   * @returns {Observable}\n   */\n  saveNewItem(item) {\n    return this.http.post(environment.apiURI + '/item', item);\n  }\n\n  /**\n   * Function for updating item. \n   * @param item \n   * @returns {Observable}\n   */\n  saveEditedItem(item) {\n    return this.http.put(environment.apiURI + '/item', item);\n  }\n\n  /**\n   * Getting items based on items array on ref ids. \n   * @param items \n   * @returns {Observable}\n   */\n  getItemsByArray(items) {\n    return this.http.post(environment.apiURI + '/get/array/items', {items: items});\n  }\n\n  /**\n   * Delete base item on the basis of itemID.\n   * @param itemID \n   * @returns {Observable}\n   */\n  deleteBaseItem(itemID) {\n    return this.http.delete(environment.apiURI + '/item/' + itemID);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelAllocateDialogComponent.html":{"url":"components/LabelAllocateDialogComponent.html","title":"component - LabelAllocateDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LabelAllocateDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Mat-dialog entry component. \nDialog modal for adding labels to a treatment item specification.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-label-allocate-dialog\n            \n\n            \n                styleUrls\n                ./label-allocate-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./label-allocate-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                label\n                            \n                            \n                                selection\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxLabel\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                masterToggle\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkboxLabel\n                        \n                        \n                    \n                \n            \n            \n                \ncheckboxLabel(row?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts:70\n                \n            \n\n\n            \n                \n                    The label for the checkbox on the passed row \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAllSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts:50\n                \n            \n\n\n            \n                \n                    Whether the number of selected elements matches the total number of rows. \nMat-table specific.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            masterToggle\n                        \n                        \n                    \n                \n            \n            \n                \nmasterToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts:60\n                \n            \n\n\n            \n                \n                    Selects all rows if they are not all selected; otherwise clear selection. \nMat-table specific.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts:36\n                \n            \n\n\n            \n                \n                    Intializes data for view, and checks if label are already allocated to item.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts:88\n                \n            \n\n\n            \n                \n                    OnClick listener for submiting label selection for treatment item.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts:93\n                \n            \n\n\n            \n                \n                    Function for refreshing UI components. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts:24\n                            \n                        \n\n                \n                    \n                        Datasource for mat-table on template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['select', 'ID', 'header', 'description']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                        Mat-table column definition, variable names. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts:20\n                            \n                        \n\n                \n                    \n                        Stores all labels passed by injected data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SelectionModel(true, [])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts:26\n                            \n                        \n\n                \n                    \n                        SelectionModel for Mat-table selection. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                        Switch for triggering visibility of template after data is loaded. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { LabelService } from '../services/label.service';\n\n/**\n * Mat-dialog entry component. \n * Dialog modal for adding labels to a treatment item specification.\n */\n@Component({\n  selector: 'app-label-allocate-dialog',\n  templateUrl: './label-allocate-dialog.component.html',\n  styleUrls: ['./label-allocate-dialog.component.scss']\n})\nexport class LabelAllocateDialogComponent implements OnInit {\n  /**Switch for triggering visibility of template after data is loaded. */\n  show = false;\n  /**Stores all labels passed by injected data. */\n  label: any[];\n  /**Mat-table column definition, variable names. */\n  displayedColumns: string[] = ['select', 'ID', 'header', 'description'];\n  /**Datasource for mat-table on template. */\n  dataSource = new MatTableDataSource();\n  /**SelectionModel for Mat-table selection. */\n  selection = new SelectionModel(true, []);\n  /**@ignore */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private labelService: LabelService\n  ) { }\n  /**\n   * Intializes data for view, and checks if label are already allocated to item.\n   */\n  ngOnInit() {\n    this.label = this.data.allLabel;\n    this.refresh();\n    this.dataSource.data.forEach((row) => {\n      if (this.data.selectedLabel.includes(row._id)) {\n        this.selection.select(row);\n      }\n    });\n  }\n\n  /** \n   * Whether the number of selected elements matches the total number of rows. \n   * Mat-table specific.\n   * */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** \n   * Selects all rows if they are not all selected; otherwise clear selection. \n   * Mat-table specific.\n   * */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** \n   * The label for the checkbox on the passed row \n   * @param {Object} row\n   * */\n  checkboxLabel(row?: any): string {\n    // console.log(this.selection);\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n  /**\n   * @ignore\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  /**\n   * OnClick listener for submiting label selection for treatment item.\n   * @emits seletion.selected\n   */\n  onSubmit() {\n    this.dialogRef.close(this.selection.selected);\n  }\n\n  /**Function for refreshing UI components. */\n  refresh() {\n    this.dataSource.data = this.label;\n    this.show = true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n      \n        \n        \n      \n    \n\n    \n       ID \n       {{element._id}} \n    \n\n    \n    \n       Name \n       {{element.header}} \n    \n\n    \n    \n       Description \n       {{element.description}} \n    \n\n    \n    \n    \n  \n\n  Cancel\n  Save\n\n    \n\n    \n                \n                    ./label-allocate-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                             ID        {{element._id}}                    Name        {{element.header}}                    Description        {{element.description}}                     Cancel  Save'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'LabelAllocateDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelCreateComponent.html":{"url":"components/LabelCreateComponent.html","title":"component - LabelCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LabelCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/label-create/label-create.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-label-create\n            \n\n            \n                styleUrls\n                ./label-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./label-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayCols\n                            \n                            \n                                labelEdit\n                            \n                            \n                                showForm\n                            \n                            \n                                showTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImage\n                            \n                            \n                                deleteLabel\n                            \n                            \n                                editLabel\n                            \n                            \n                                getLabels\n                            \n                            \n                                newLabel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveLabelData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addImage\n                        \n                        \n                    \n                \n            \n            \n                \naddImage(element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-create/label-create.component.ts:80\n                \n            \n\n\n            \n                \n                    Function for starting mat-dialog for adding a image to label.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteLabel\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteLabel(element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-create/label-create.component.ts:94\n                \n            \n\n\n            \n                \n                    OnClick listener function for deleting base label.\nUpdating UI elements.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editLabel\n                        \n                        \n                    \n                \n            \n            \n                \neditLabel(element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-create/label-create.component.ts:63\n                \n            \n\n\n            \n                \n                    Funciton for setting existing label data to edit form and switching \nthe visibility switch.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabels\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-create/label-create.component.ts:52\n                \n            \n\n\n            \n                \n                    Function for getting all labels asociated with an authenticated user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newLabel\n                        \n                        \n                    \n                \n            \n            \n                \nnewLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-create/label-create.component.ts:102\n                \n            \n\n\n            \n                \n                    OnClick listener for starting a new label data edit.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-create/label-create.component.ts:46\n                \n            \n\n\n            \n                \n                    OnInit livecycle hook for getting data for display purposes.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveLabelData\n                        \n                        \n                    \n                \n            \n            \n                \nsaveLabelData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/label-create/label-create.component.ts:117\n                \n            \n\n\n            \n                \n                    Function for saving label definition to API.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/label-create/label-create.component.ts:33\n                            \n                        \n\n                \n                    \n                        Datasource for displaying all label in mat-table. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayCols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['_id', 'header', 'description', 'edit']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/label-create/label-create.component.ts:28\n                            \n                        \n\n                \n                    \n                        Variable names for mat-table column definitions. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LabelEdit\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/label-create/label-create.component.ts:26\n                            \n                        \n\n                \n                    \n                        Object for holding label data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/label-create/label-create.component.ts:30\n                            \n                        \n\n                \n                    \n                        Switch for showing edit form for label creation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/label-create/label-create.component.ts:35\n                            \n                        \n\n                \n                    \n                        Switch for displaying mat-table, true if datasource.length > 0. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LabelService } from '../services/label.service';\nimport { Router } from '@angular/router';\nimport { ImageDialogComponent } from 'src/app/shared/image-dialog/image-dialog.component';\n\n/**\n * @ignore \n */\nexport interface LabelEdit {\n  label: any;\n  labelForm: FormGroup;\n}\n\n/**\n * \n */\n@Component({\n  selector: 'app-label-create',\n  templateUrl: './label-create.component.html',\n  styleUrls: ['./label-create.component.scss']\n})\nexport class LabelCreateComponent implements OnInit {\n  /**Object for holding label data. */\n  labelEdit: LabelEdit;\n  /**Variable names for mat-table column definitions. */\n  displayCols = ['_id', 'header', 'description', 'edit']\n  /**Switch for showing edit form for label creation. */\n  showForm = false;\n\n  /**Datasource for displaying all label in mat-table. */\n  dataSource: any;\n  /**Switch for displaying mat-table, true if datasource.length > 0. */\n  showTable = false;\n  /**@ignore */\n  constructor(\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private labelService: LabelService,\n    private router: Router\n  ) { }\n  /**\n   * OnInit livecycle hook for getting data for display purposes.\n   */\n  ngOnInit() {\n    this.getLabels();\n  }\n  /**\n   * Function for getting all labels asociated with an authenticated user.\n   */\n  getLabels() {\n    this.labelService.getAllMyLabel().subscribe((label) => {\n      this.dataSource = label;\n      this.showTable = true;\n    });\n  }\n  /**\n   * Funciton for setting existing label data to edit form and switching \n   * the visibility switch.\n   * @param element \n   */\n  editLabel(element) {\n    console.log(element);\n    let obj = {\n      label: element,\n      labelForm: this.fb.group({\n        header: [element.header],\n        description: [element.description]\n      })\n    }\n    this.labelEdit = obj;\n    this.showForm = true;\n  }\n\n  /**\n   * Function for starting mat-dialog for adding a image to label.\n   * @param element \n   */\n  addImage(element) {\n    const dialogRef = this.dialog.open(ImageDialogComponent, {\n      width: '80%',\n      data: { ref: 'label', item: element }\n    });\n\n    dialogRef.afterClosed().subscribe(result => { });\n  }\n\n  /**\n   * OnClick listener function for deleting base label.\n   * Updating UI elements.\n   * @param element \n   */\n  deleteLabel(element) {\n    this.labelService.deleteSpecificLabel(element._id).subscribe((val) => { });\n    this.getLabels();\n  }\n\n  /**\n   * OnClick listener for starting a new label data edit.\n   */\n  newLabel() {\n    let obj = {\n      label: {},\n      labelForm: this.fb.group({\n        header: [''],\n        description: ['']\n      })\n    }\n    this.labelEdit = obj;\n    this.showForm = true;\n  }\n\n  /**\n   * Function for saving label definition to API.\n   */\n  saveLabelData() {\n    let newData = {\n      header: this.labelEdit.labelForm.controls.header.value,\n      description: this.labelEdit.labelForm.controls.description.value\n    }\n    Object.assign(this.labelEdit.label, newData);\n    if (!this.labelEdit.label._id) {\n      this.labelService.saveNewLabel(this.labelEdit.label).subscribe(\n        () => {\n          this.getLabels();\n          this.showForm = false;\n        }\n      );\n    } else {\n      this.labelService.updateSpecificLabel(this.labelEdit.label)\n    }\n  }\n\n  /**@ignore */\n  onBack() {\n    this.router.navigate(['/admin'])\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      arrow_back\n    \n    Zurück\n  \n  \n    \n      \n         Item ID \n         {{element._id}} \n      \n\n      \n         Header \n         {{element.header}} \n      \n\n      \n         Description \n         {{element.description}} \n      \n\n      \n         Edit \n        \n          \n            more_vert\n          \n          \n            Delete\n            Edit Data\n            Add Image\n          \n        \n      \n      \n      \n    \n  \n\n  \n    Edit Label Data\n    \n      \n        \n      \n      \n        \n      \n      Cancel\n      Save\n    \n  \n\n  \n    New Label\n  \n\n    \n\n    \n                \n                    ./label-create.component.scss\n                \n                form {\n    width: 100%;\n}\n\n.mat-form-field {\n    width: 100%;\n}\n\n.subform {\n    margin: 15px 0;\n}\n\n.mini-nav {\n    display: flex;\n}\n\ntable {\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            arrow_back        Zurück                       Item ID          {{element._id}}                      Header          {{element.header}}                      Description          {{element.description}}                      Edit                               more_vert                                Delete            Edit Data            Add Image                                                Edit Label Data                                                  Cancel      Save            New Label  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'LabelCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelService.html":{"url":"injectables/LabelService.html","title":"injectable - LabelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LabelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin/services/label.service.ts\n        \n\n            \n                Description\n            \n            \n                CRUD Service for label data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteSpecificLabel\n                            \n                            \n                                getAllMyLabel\n                            \n                            \n                                getLabelByArray\n                            \n                            \n                                saveNewLabel\n                            \n                            \n                                updateSpecificLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteSpecificLabel\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteSpecificLabel(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/label.service.ts:46\n                \n            \n\n\n            \n                \n                    Function for deleting specific label. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllMyLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllMyLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/label.service.ts:19\n                \n            \n\n\n            \n                \n                    Function for recieving the all the labels owned by authenticated user.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabelByArray\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabelByArray(label)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/label.service.ts:28\n                \n            \n\n\n            \n                \n                    Function for getting labels from backend.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveNewLabel\n                        \n                        \n                    \n                \n            \n            \n                \nsaveNewLabel(label)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/label.service.ts:37\n                \n            \n\n\n            \n                \n                    Function for saving new label.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSpecificLabel\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSpecificLabel(label)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/label.service.ts:54\n                \n            \n\n\n            \n                \n                    Not implemented.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * CRUD Service for label data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelService {\n  /**@ignore */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Function for recieving the all the labels owned by authenticated user.\n   * @returns {Observable}\n   */\n  getAllMyLabel() {\n    return this.http.get(environment.apiURI + '/my/label');\n  }\n\n  /**\n   * Function for getting labels from backend.\n   * @param {Object} label \n   * @returns {Observable}\n   */\n  getLabelByArray(label) {\n    return this.http.post(environment.apiURI + '/array/label', { label: label })\n  }\n\n  /**\n   * Function for saving new label.\n   * @param {Object} label \n   * @returns {Observable}\n   */\n  saveNewLabel(label) {\n    return this.http.post(environment.apiURI + '/label/data', label);\n  }\n\n  /**\n   * Function for deleting specific label. \n   * @param {String} id\n   * @returns {Observable} \n   */\n  deleteSpecificLabel(id) {\n    return this.http.delete(environment.apiURI + '/label/' + id);\n  }\n\n  /**\n   * Not implemented.\n   * @param label \n   */\n  updateSpecificLabel(label) {\n    console.log(label);\n    // ...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingComponent.html":{"url":"components/LandingComponent.html","title":"component - LandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing/landing.component.ts\n\n\n    \n        Description\n    \n    \n        Component Landing: Displayed on root route=\"/\"\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n            \n                styleUrls\n                ./landing.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Component Landing: Displayed on root route=\"/\"\n */\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent {\n  /**@ignore */\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n    \n      Willkommen!\n      Dies ist der Forschungsshop der Universität Göttingen. Wählen Sie eine Aktion aus!\n    \n  \n  \n    \n      Administration\n    \n  \n  \n    \n      Einloggen\n    \n   -->\n  \n    \n      Registrieren\n    \n  \n  \n    \n      Treatment starten\n    \n  \n  \n    \n      Beispiel Shop\n    \n   -->\n\n    \n\n    \n                \n                    ./landing.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Willkommen!      Dies ist der Forschungsshop der Universität Göttingen. Wählen Sie eine Aktion aus!                  Administration                  Einloggen       -->            Registrieren                  Treatment starten                  Beispiel Shop       -->'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resendUsername\n                            \n                            \n                                resetPwd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resendUsername\n                        \n                        \n                    \n                \n            \n            \n                \nresendUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPwd\n                        \n                        \n                    \n                \n            \n            \n                \nresetPwd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LoginData, LoginResp } from '../_models/user.model';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  showError = false;\n\n  constructor(private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    console.log(environment.apiURI);\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  login() {\n    console.log(JSON.stringify(this.loginForm.value));\n    const loginD: LoginData = {\n      username: this.loginForm.controls.username.value,\n      password: this.loginForm.controls.password.value\n    };\n    this.authService.login(loginD).subscribe(\n      (resp: LoginResp) => {\n        console.log(resp);\n        this.authService.isLoggedIn = true;\n        this.router.navigate(['/admin']);\n      },\n      error => {\n        console.log(error);\n        this.showError = true;\n      }\n    );\n  }\n\n  resendUsername() {\n    console.error('not implemented');\n  }\n\n  resetPwd() {\n    console.error('not implemented');\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Pflichtfled\n        \n      \n    \n    \n      \n        \n          \n          Pflichtfled\n        \n      \n    \n    \n      \n        Absenden\n      \n    \n  \n  \n    \n      Benutzername bzw. Passwort falsch.\n      Benutzername vergessen?\n      \n      Passwort vergessen?\n    \n  \n\n    \n\n    \n                \n                    ./login.component.sass\n                \n                .cont-width \n    display: flex\n    flex-direction: column\n\na:not([href]):not([tabindex])\n    cursor: pointer\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Pflichtfled                                                        Pflichtfled                                    Absenden                        Benutzername bzw. Passwort falsch.      Benutzername vergessen?            Passwort vergessen?      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginData.html":{"url":"interfaces/LoginData.html","title":"interface - LoginData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/_models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Model inforcment for login data \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginData {\n    username: string;\n    password: string;\n}\n/**Model inforcment for login response */\nexport interface LoginResp {\n    /**Unused */\n    auth: boolean;\n    /**Unused  */\n    token: string;\n}\n/**Model inforcment for register data */\nexport interface RegisterData {\n    /**Unique username */\n    username: string;\n    /**unique email */\n    email: string;\n    /**Password at least 6 characters and one special character. */\n    password: string;\n}\n/**Model inforcment for register response */\nexport interface RegisterResp {\n    /**Boolean unused in code. */\n    created: boolean;\n    /**JSON Web token not used any more */\n    token: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResp.html":{"url":"interfaces/LoginResp.html","title":"interface - LoginResp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/_models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Model inforcment for login response \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unused \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unused  \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LoginData {\n    username: string;\n    password: string;\n}\n/**Model inforcment for login response */\nexport interface LoginResp {\n    /**Unused */\n    auth: boolean;\n    /**Unused  */\n    token: string;\n}\n/**Model inforcment for register data */\nexport interface RegisterData {\n    /**Unique username */\n    username: string;\n    /**unique email */\n    email: string;\n    /**Password at least 6 characters and one special character. */\n    password: string;\n}\n/**Model inforcment for register response */\nexport interface RegisterResp {\n    /**Boolean unused in code. */\n    created: boolean;\n    /**JSON Web token not used any more */\n    token: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notfound/notfound.component.ts\n\n\n    \n        Description\n    \n    \n        Fallback component if route is not found. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n            \n                styleUrls\n                ./notfound.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**Fallback component if route is not found. */\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.scss']\n})\nexport class NotfoundComponent {\n  /**@ignore */\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  notfound works!\n\n\n    \n\n    \n                \n                    ./notfound.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  notfound works!'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/trial/trial-services/product.service.ts\n        \n\n            \n                Description\n            \n            \n                Trial Product Service, manages the items associated with a treatment.\nServes multiple components.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredItems\n                            \n                            \n                                products\n                            \n                            \n                                subSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllProducts\n                            \n                            \n                                getBaseAttributes\n                            \n                            \n                                getItemsBasedOnFilter\n                            \n                            \n                                getProduct\n                            \n                            \n                                getTreeOfTagsOfAllProducts\n                            \n                            \n                                resetProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial-services/product.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllProducts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/product.service.ts:36\n                \n            \n\n\n            \n                \n                    Return all products placed into memory.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBaseAttributes\n                        \n                        \n                    \n                \n            \n            \n                \ngetBaseAttributes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/product.service.ts:203\n                \n            \n\n\n            \n                \n                    Base Funtion: Limit selection based on baseAttributes of items / products.\nGets all products.baseAttributes in a set (no duplicate entries).\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        of strings \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsBasedOnFilter\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsBasedOnFilter(filter: any, type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/product.service.ts:96\n                \n            \n\n\n            \n                \n                    Called by item grid if displayed items are filtered.\npossible filter types: 'filterTree', 'tagFilter', 'limitSelection'\n\nfilterTree filters by array of productIDs /itemIDs.\ntagFilter filters by tag specification (product.tags contains selected tag).\nlimitSelection checks if already a filtered selection and subselects based on item.baseAttributes contains string.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        of items representing a subset of all products matching filter. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \ngetProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/product.service.ts:61\n                \n            \n\n\n            \n                \n                    Get specific product from all products based on product._id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        containing product \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreeOfTagsOfAllProducts\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreeOfTagsOfAllProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/product.service.ts:149\n                \n            \n\n\n            \n                \n                    Base Function: Generates Filter based on tags array on products.\nFor this to work there need to be items with a tag array (product.tags representing categories).\nTags / categories in this array must be sorted from general to specific.\nNow only supports tag sorting generation two levels deep.\ne.g.: ['Lebenmittel', 'Brot', 'Vollkorn'] only first two entries would be selectable and visible in filter component.\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetProducts\n                        \n                        \n                    \n                \n            \n            \n                \nresetProducts(products)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/product.service.ts:28\n                \n            \n\n\n            \n                \n                    Overwrites central product reference. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    products\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/product.service.ts:18\n                            \n                        \n\n                \n                    \n                        Holds the filtered selection of items when filters are applied. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/product.service.ts:16\n                            \n                        \n\n                \n                    \n                        Holds all products referenced in a given treatment. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/product.service.ts:20\n                            \n                        \n\n                \n                    \n                        Holds the subselection either based on this.products or this.filteredItems. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Trial Product Service, manages the items associated with a treatment.\n * Serves multiple components.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  /**Holds all products referenced in a given treatment. */\n  products: any[];\n  /**Holds the filtered selection of items when filters are applied. */\n  filteredItems: any;\n  /**Holds the subselection either based on this.products or this.filteredItems. */\n  subSelection: any;\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Overwrites central product reference. \n   * @param products \n   */\n  resetProducts(products) {\n    this.products = products;\n  }\n\n  /**\n   * Return all products placed into memory.\n   * @returns {Observable}\n   */\n  getAllProducts() {\n    return new Observable((sub) => {\n      sub.next(this.products);\n    })\n    // not used anymore\n    // return new Observable((sub) => {\n    //   const id = sessionStorage.getItem('treatmentID')\n    //   if (id) {\n    //     this.http.get(environment.apiURI + '/t/' + id).subscribe((val: any[]) => {\n    //       this.products = val;\n    //       sub.next(this.products);\n    //     });\n    //   } else {\n    //     this.http.get(environment.apiURI + '/allItems').subscribe((val: any[]) => {\n    //       this.products = val;\n    //       sub.next(this.products);\n    //     });\n    //   }\n    // })\n  }\n  /**\n   * Get specific product from all products based on product._id\n   * @param {string} id\n   * @returns {Promise} containing product \n   */\n  getProduct(id: string): Promise {\n    // if not moliciously used id is noever not in this.pruducts\n    return new Promise((resolve, reject) => {\n      resolve(this.products.find(item => item._id === id));\n    });\n    // console.log('fetching items');\n    // return new Promise((resolve, reject) => {\n    //   this.http.get(environment.apiURI + '/allItems').subscribe(\n    //     (items: any[]) => {\n    //       // console.log(items);\n    //       this.products = items;\n    //       console.log(this.products.find(item => item._id === id));\n    //       resolve(this.products.find(item => item._id === id));\n    //     },\n    //     (error) => {\n    //       console.log('loading items failed');\n    //       reject();\n    //       // this.router.navigate(['/shop']);\n    //     }\n    //   );\n    // });\n  }\n\n  /**\n   * Called by item grid if displayed items are filtered.\n   * \n   * possible filter types: 'filterTree', 'tagFilter', 'limitSelection'\n   * - filterTree filters by array of productIDs /itemIDs.\n   * - tagFilter filters by tag specification (product.tags contains selected tag).\n   * - limitSelection checks if already a filtered selection and subselects based on item.baseAttributes contains string.\n   * \n   * @param {Array} filter \n   * @param {string} type\n   * @returns {Array} of items representing a subset of all products matching filter. \n   */\n  getItemsBasedOnFilter(filter: any, type) {\n    // handle if no products available?\n    // let filteredItems = [];\n    if (type == 'filterTree') {\n      this.filteredItems = [];\n      filter.forEach(filterItem => {\n        this.filteredItems.push(\n          // checks for old IDs and the product ids ... maybe sometimes items twice or included that should not be\n          this.products.filter(x => (x._id == filterItem || x.oldID == filterItem))[0]\n        );\n      });\n      // console.log(filteredItems);\n    } else if (type == 'tagFilter') {\n      this.filteredItems = [];\n      this.products.forEach((item) => {\n        if (item.tags.includes(filter)) {\n          this.filteredItems.push(item);\n        }\n      })\n    } else if (type == 'limitSelection') {\n      console.log('triggered subselection');\n      this.subSelection = [];\n      if (!this.filteredItems) { this.filteredItems = [...this.products] }\n      this.filteredItems.forEach(element => {\n        if (element.baseAttributes != null && element.baseAttributes.some(val => filter.includes(val))) {\n          this.subSelection.push(element);\n        }\n      });\n      console.log(this.subSelection);\n      return this.subSelection;\n    } else {\n      // free text search filter\n      this.filteredItems = [];\n      this.products.forEach((item) => {\n        // for name and brand?\n        filter.forEach(word => {\n          if (item.name.toLowerCase().includes(word) || item.brand.toLowerCase().includes(word)) {\n            this.filteredItems.push(item);\n          }\n        });\n      });\n    }\n    return this.filteredItems;\n  }\n\n  /**\n   * Base Function: Generates Filter based on tags array on products.\n   * \n   * For this to work there need to be items with a tag array (product.tags representing categories).\n   * Tags / categories in this array must be sorted from general to specific.\n   * Now only supports tag sorting generation two levels deep.\n   * e.g.: ['Lebenmittel', 'Brot', 'Vollkorn'] only first two entries would be selectable and visible in filter component.\n   */\n  getTreeOfTagsOfAllProducts() {\n    console.log(this.products != undefined);\n    if (this.products) {\n      let mokData = [];\n      for (let p of this.products) {\n        if (p.tags.length > 0) {\n          mokData.push(p.tags);\n        }\n      }\n      let trees = [];\n      let branches = [];\n      for (let mok of mokData) {\n        for (let i = 0; i  x.name == obj.name) == -1) {\n            branches.push(obj);\n          }\n        }\n      }\n      // build root:\n      const refArray = [...branches];\n      // while (branches.length > 0) {\n      branches.forEach((element, index) => {\n        if (!element.parent) {\n          trees.push({ name: element.name, children: [] });\n          branches.splice(index, 1);\n        }\n      });\n      branches.forEach((element, index) => {\n        const ind = trees.findIndex(x => x.name == element.parent)\n        if (ind != -1) {\n          trees[ind].children.push({ name: element.name, children: [] });\n          branches.splice(index, 1);\n        }\n      })\n      return trees;\n      // } \n      // // iterate each root object\n      // console.log(trees);\n      // console.log(branches);\n    }\n  }\n\n  /**\n   * Base Funtion: Limit selection based on baseAttributes of items / products.\n   * \n   * Gets all products.baseAttributes in a set (no duplicate entries).\n   * @returns {array} of strings \n   */\n  getBaseAttributes() {\n    let baseAttributes = new Set();\n    for (let p of this.products) {\n      if (p.baseAttributes != null && p.baseAttributes.length > 0) {\n        for (let attr of p.baseAttributes) {\n          baseAttributes.add(attr);\n        }\n      }\n    }\n    return [...baseAttributes];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/register/register.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { RegisterData, RegisterResp } from '../_models/user.model';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]],\n      pwd1: ['', Validators.required]\n    }, { validators: passwordMatchValidator });\n  }\n\n  register() {\n    // console.log(this.registerForm);\n    const user: RegisterData = {\n      username: this.registerForm.controls.username.value,\n      email: this.registerForm.controls.email.value,\n      password: this.registerForm.controls.password.value\n    };\n    this.authService.registerUser(user).subscribe(\n      (resp: RegisterResp) => {\n        if (resp.created) {\n          console.log('User created confirm now: ' + resp.token);\n        }\n      },\n      error => {\n        this.registerForm.controls.password.setErrors(\n          {\n            minLength: error.error.pwdError.minLength,\n            maxLength: error.error.pwdError.maxLength,\n            content: error.error.pwdError.content\n          }\n        );\n        this.registerForm.controls.username.setErrors({\n          exists: error.error.usName.exists\n        });\n        // console.error(error.error);\n      }\n    );\n  }\n\n}\n\nfunction passwordMatchValidator(g: FormGroup) {\n  // console.log('hello' + g.get('pwd1'));\n  if (g.get('password').value === g.get('pwd1').value) {\n    return null;\n  } else {\n    // mat error only displays error message if error is associated to the formControl!\n    g.controls.pwd1.setErrors({ incorrect: true });\n    return { mismatch: true };\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Pflichtfled\n          Bitte geben Sie eine gültige Email an\n          \n        \n      \n    \n    \n      \n        \n          \n          Pflichtfled\n          \n            Benutzername bereits vergeben.\n        \n      \n    \n    \n      \n        \n          \n          Pflichtfled\n          Passwort muss Zahlen und Sonderzeichen\n            enthalten.\n          \n            Passwort muss mindestens 6 Zeichen lang sein.\n          \n            Passwort darf nicht länger sein als 20 Zeichen.\n        \n      \n    \n    \n      \n        \n          \n          Pflichtfled\n          Passwort stimmt nicht überein\n        \n      \n    \n    \n       -->\n      \n        Absenden\n      \n       -->\n    \n  \n  \n\n  \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                .cont-width {\n    display: flex;\n    flex-direction: column;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Pflichtfled          Bitte geben Sie eine gültige Email an                                                                  Pflichtfled                      Benutzername bereits vergeben.                                                        Pflichtfled          Passwort muss Zahlen und Sonderzeichen            enthalten.                      Passwort muss mindestens 6 Zeichen lang sein.                      Passwort darf nicht länger sein als 20 Zeichen.                                                        Pflichtfled          Passwort stimmt nicht überein                             -->              Absenden             -->          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterData.html":{"url":"interfaces/RegisterData.html","title":"interface - RegisterData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/_models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Model inforcment for register data \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unique email \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Password at least 6 characters and one special character. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique username \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LoginData {\n    username: string;\n    password: string;\n}\n/**Model inforcment for login response */\nexport interface LoginResp {\n    /**Unused */\n    auth: boolean;\n    /**Unused  */\n    token: string;\n}\n/**Model inforcment for register data */\nexport interface RegisterData {\n    /**Unique username */\n    username: string;\n    /**unique email */\n    email: string;\n    /**Password at least 6 characters and one special character. */\n    password: string;\n}\n/**Model inforcment for register response */\nexport interface RegisterResp {\n    /**Boolean unused in code. */\n    created: boolean;\n    /**JSON Web token not used any more */\n    token: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterResp.html":{"url":"interfaces/RegisterResp.html","title":"interface - RegisterResp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterResp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/_models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Model inforcment for register response \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        created\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                    \n                                \n                                \n                                    \n                                        created:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean unused in code. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    JSON Web token not used any more \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LoginData {\n    username: string;\n    password: string;\n}\n/**Model inforcment for login response */\nexport interface LoginResp {\n    /**Unused */\n    auth: boolean;\n    /**Unused  */\n    token: string;\n}\n/**Model inforcment for register data */\nexport interface RegisterData {\n    /**Unique username */\n    username: string;\n    /**unique email */\n    email: string;\n    /**Password at least 6 characters and one special character. */\n    password: string;\n}\n/**Model inforcment for register response */\nexport interface RegisterResp {\n    /**Boolean unused in code. */\n    created: boolean;\n    /**JSON Web token not used any more */\n    token: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingTrackerService.html":{"url":"injectables/RoutingTrackerService.html","title":"injectable - RoutingTrackerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoutingTrackerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/trial/trial-services/routing-tracker.service.ts\n        \n\n            \n                Description\n            \n            \n                Routing tracker service subscribes to router events and writes \nroute changes to trial data (API).\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notRecorded\n                            \n                            \n                                origin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                routeEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, trialSubjectService: TrialSubjectService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial-services/routing-tracker.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialSubjectService\n                                                  \n                                                        \n                                                                        TrialSubjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeEvent\n                        \n                        \n                    \n                \n            \n            \n                \nrouteEvent(router: Router)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/routing-tracker.service.ts:40\n                \n            \n\n\n            \n                \n                    Listens for router events and writes route changes to the trial data collection. \nData collected: {origin: String, destination: String, time: String}\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notRecorded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/routing-tracker.service.ts:25\n                            \n                        \n\n                \n                    \n                        Array that stores routing data not recorded because of any error from api. NOT IMPLEMENTED \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            origin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/routing-tracker.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { TrialSubjectService } from './trial-subject.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { TrialTreatmentService } from './trial-treatment.service';\n\n\n/**\n * Routing tracker service subscribes to router events and writes \n * route changes to trial data (API).\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingTrackerService {\n\n  /**@ignore */\n  subjectID = sessionStorage.getItem('subjectID')\n  /**@ignore */\n  treatmentID = sessionStorage.getItem('treatmentID');\n\n  //fall back not recorded?\n  /**Array that stores routing data not recorded because of any error from api. NOT IMPLEMENTED */\n  notRecorded = [];\n  origin: any;\n  \n  constructor(\n    private router: Router,\n    private trialSubjectService: TrialSubjectService,\n    private http: HttpClient\n  ) {\n    this.routeEvent(this.router);\n  }\n  /**\n   * Listens for router events and writes route changes to the trial data collection. \n   * Data collected: {origin: String, destination: String, time: String}\n   * @param {Router} router \n   */\n  routeEvent(router: Router) {\n    this.origin = router.url\n    console.log('Router tracker started');\n    router.events.subscribe((event) => {\n      if (!this.trialSubjectService.recording) {\n        return;\n      }\n      let t = new Date().toISOString();\n      let result: any = {};\n      // result.origin = this.origin;\n      if (event instanceof NavigationEnd) {\n        console.log(event);\n        const subjectID = sessionStorage.getItem('subjectID');\n        const treatmentID = sessionStorage.getItem('treatmentID');\n        // send Information to tracking in backend?\n        if (!this.trialSubjectService.recording) {\n          return;\n        }\n        console.log(`destination: ${event.url}`);\n        result.origin = this.origin;\n        result.destination = event.url;\n        this.origin = event.url;\n        result.time = t;\n        this.http.put(environment.apiURI + '/trial/routing/' + treatmentID + '/' + subjectID, result).subscribe(\n          () => {\n            console.log('recorded route!')\n          },\n          (error) => {\n            this.notRecorded.push(result);\n          }\n        )\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreCreateComponent.html":{"url":"components/ScoreCreateComponent.html","title":"component - ScoreCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScoreCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/score-create/score-create.component.ts\n\n\n    \n        Description\n    \n    \n        Score Create component, for creating and editing scores.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-score-create\n            \n\n            \n                styleUrls\n                ./score-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./score-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayCols\n                            \n                            \n                                score\n                            \n                            \n                                showCreate\n                            \n                            \n                                showTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteScore\n                            \n                            \n                                editScore\n                            \n                            \n                                getScores\n                            \n                            \n                                newScore\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteScore\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteScore(element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/score-create/score-create.component.ts:120\n                \n            \n\n\n            \n                \n                    OnClick listener function for handling deleting a score.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editScore\n                        \n                        \n                    \n                \n            \n            \n                \neditScore(score)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/score-create/score-create.component.ts:64\n                \n            \n\n\n            \n                \n                    OnClick listener function for showing edit form for existing score. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScores\n                        \n                        \n                    \n                \n            \n            \n                \ngetScores()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/score-create/score-create.component.ts:47\n                \n            \n\n\n            \n                \n                    Function for getting all scores of authenticated user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newScore\n                        \n                        \n                    \n                \n            \n            \n                \nnewScore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/score-create/score-create.component.ts:78\n                \n            \n\n\n            \n                \n                    Onclick listener for setting form for new form creation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/score-create/score-create.component.ts:40\n                \n            \n\n\n            \n                \n                    OnInit livecyle hook Gets necessary data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveScore\n                        \n                        \n                    \n                \n            \n            \n                \nsaveScore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/score-create/score-create.component.ts:91\n                \n            \n\n\n            \n                \n                    OnClick listener for saving created score.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/score-create/score-create.component.ts:18\n                            \n                        \n\n                \n                    \n                        Datasource for Mat-table in template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayCols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['_id', 'header', 'description', 'edit']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/score-create/score-create.component.ts:24\n                            \n                        \n\n                \n                    \n                        Mat-tree variable name for column description. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/score-create/score-create.component.ts:16\n                            \n                        \n\n                \n                    \n                        Object for holding specific score definition. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showCreate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/score-create/score-create.component.ts:20\n                            \n                        \n\n                \n                    \n                        Switch for displaying form for score creation.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/score-create/score-create.component.ts:22\n                            \n                        \n\n                \n                    \n                        Switch for displaying table, true if datasource.length > 0\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ScoreService } from '../services/score.service';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n/**\n * Score Create component, for creating and editing scores.\n */\n@Component({\n  selector: 'app-score-create',\n  templateUrl: './score-create.component.html',\n  styleUrls: ['./score-create.component.scss']\n})\nexport class ScoreCreateComponent implements OnInit {\n  /**Object for holding specific score definition. */\n  score: any = {};\n  /**Datasource for Mat-table in template. */\n  dataSource = [];\n  /**Switch for displaying form for score creation.*/\n  showCreate = false;\n  /**Switch for displaying table, true if datasource.length > 0*/\n  showTable = false;\n  /**Mat-tree variable name for column description. */\n  displayCols = ['_id', 'header', 'description', 'edit']\n  /**\n   * @ignore\n   * @param scoreService \n   * @param fb \n   * @param router \n   */\n  constructor(\n    private scoreService: ScoreService,\n    private fb: FormBuilder,\n    private router: Router\n  ) { }\n\n  /**\n   * OnInit livecyle hook Gets necessary data.\n   */\n  ngOnInit() {\n    this.getScores();\n  }\n\n  /**\n   * Function for getting all scores of authenticated user.\n   */\n  getScores() {\n    this.scoreService.getAllScores().subscribe(\n      (scores: any) => {\n        this.dataSource = scores;\n        this.showTable = true;\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n    this.showTable = true;\n  }\n\n  /**\n   * OnClick listener function for showing edit form for existing score. \n   * @param score \n   */\n  editScore(score) {\n    this.score.data = score;\n    this.score.form = this.fb.group({\n      header: [score.header],\n      description: [score.description],\n      minValue: [score.minValue],\n      maxValue: [score.maxValue]\n    });\n    this.showCreate = true;\n  }\n\n  /**\n   * Onclick listener for setting form for new form creation.\n   */\n  newScore() {\n    this.score.form = this.fb.group({\n      header: [''],\n      description: [''],\n      maxValue: [0],\n      minValue: [0],\n    });\n    this.showCreate = true;\n  }\n\n  /**\n   * OnClick listener for saving created score.\n   */\n  saveScore() {\n    this.showTable = false;\n    let scoreData = this.score.form.value;\n    if (this.score.data == undefined) {\n      this.score.data = {};\n      Object.assign(this.score.data, scoreData);\n      this.scoreService.saveNewScore(this.score.data).subscribe(\n        (score) => {\n          this.dataSource.push(score);\n          this.showCreate = false;\n          this.showTable = true;\n        }\n      )\n    } else {\n      let ind = this.dataSource.findIndex(x => x._id == this.score.data._id);\n      Object.assign(this.score.data, scoreData);\n      this.scoreService.updateScoreInformation(this.score.data).subscribe(\n        (score) => {\n          this.dataSource[ind] = score;\n          this.showCreate = false;\n          this.showTable = true;\n        }\n      );\n    }\n  }\n  /**\n   * OnClick listener function for handling deleting a score.\n   * @param element \n   */\n  deleteScore(element) {\n    this.showTable = false;\n    let ind = this.dataSource.findIndex(x => x._id == element._id);\n    if (ind == -1) {\n      return;\n    }\n    this.scoreService.deleteScore(element._id).subscribe(\n      () => {\n        this.dataSource.splice(ind, 1);\n        this.showTable = true;\n      },\n      (error) => {\n        console.error(error);\n      }\n    )\n  }\n  /**@ignore */\n  onBack() {\n    this.router.navigate(['/admin']);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      arrow_back\n    \n    Zurück\n  \n  \n    \n      \n         Item ID \n         {{element._id}} \n      \n\n      \n         Header \n         {{element.header}} \n      \n\n      \n         Description \n         {{element.description}} \n      \n\n      \n         Edit \n        \n          \n            more_vert\n          \n          \n            Delete\n            Edit Data\n            Add Image -->\n          \n        \n      \n      \n      \n    \n  \n\n  \n    \n      \n        \n          \n            Header\n            \n          \n        \n      \n      \n        \n          \n            Description\n            \n          \n        \n      \n      \n        \n          \n            Min. Value\n            \n          \n        \n        \n          \n            Max. Value\n            \n          \n        \n      \n      Cancel\n      Save\n    \n  \n\n  \n    New Score\n  \n\n    \n\n    \n                \n                    ./score-create.component.scss\n                \n                .subform {\n  margin: 15px 0;\n}\n\ntable {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            arrow_back        Zurück                       Item ID          {{element._id}}                      Header          {{element.header}}                      Description          {{element.description}}                      Edit                               more_vert                                Delete            Edit Data            Add Image -->                                                                                    Header                                                                        Description                                                                        Min. Value                                                            Max. Value                                          Cancel      Save            New Score  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ScoreDirective.html":{"url":"directives/ScoreDirective.html","title":"directive - ScoreDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ScoreDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/trial/food-card/score.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive for score display purposes. (On food-card, and food details)\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appScore]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                score\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    score\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/food-card/score.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n                        \n                            \n                                    Defined in src/app/trial/food-card/score.directive.ts:11\n                            \n                        \n                \n                    \n                        Databinding to recieve score from parent \n\n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n\n\n                \n                    \n                        setscore(score)\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/food-card/score.directive.ts:11\n                                \n                            \n                    \n                        \n                                Databinding to recieve score from parent \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            score\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input } from '@angular/core';\n\n/**\n * Directive for score display purposes. (On food-card, and food details)\n */\n@Directive({\n  selector: '[appScore]'\n})\nexport class ScoreDirective {\n  /**Databinding to recieve score from parent */\n  @Input('score') set score(score) {\n    this.el.nativeElement.style.width = score;\n  }\n\n  constructor(private el: ElementRef) {\n    this.el.nativeElement.style.height = '24px';\n    this.el.nativeElement.style.backgroundColor = '#f1f1f1';\n    this.el.nativeElement.style.marginLeft = '-1px';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScoreService.html":{"url":"injectables/ScoreService.html","title":"injectable - ScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin/services/score.service.ts\n        \n\n            \n                Description\n            \n            \n                CRUD Service for score specification.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteScore\n                            \n                            \n                                getAllScores\n                            \n                            \n                                saveNewScore\n                            \n                            \n                                updateScoreInformation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteScore\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteScore(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/score.service.ts:41\n                \n            \n\n\n            \n                \n                    Function for deleting score information.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllScores\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllScores()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/score.service.ts:18\n                \n            \n\n\n            \n                \n                    Function for getting all scores.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveNewScore\n                        \n                        \n                    \n                \n            \n            \n                \nsaveNewScore(body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/score.service.ts:25\n                \n            \n\n\n            \n                \n                    Function for saving new score information.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateScoreInformation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateScoreInformation(body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/score.service.ts:33\n                \n            \n\n\n            \n                \n                    Function for updating score information.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * CRUD Service for score specification.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScoreService {\n  /**@ignore */\n  constructor(private http: HttpClient) { }\n  /**\n   * Function for getting all scores.\n   * @returns {Observable}\n   */\n  getAllScores() {\n    return this.http.get(environment.apiURI + '/score');\n  }\n  /**\n   * Function for saving new score information.\n   * @param {Object} body \n   */\n  saveNewScore(body) {\n    return this.http.post(environment.apiURI + '/score', body);\n  }\n  /**\n   * Function for updating score information.\n   * @param {Object} body\n   * @returns {Observable} \n   */\n  updateScoreInformation(body) {\n    return this.http.put(environment.apiURI + `/score/${body._id}`, body);\n  }\n  /**\n   * Function for deleting score information.\n   * @param {String} id \n   * @returns {Observable}\n   */\n  deleteScore(id) {\n    return this.http.delete(environment.apiURI + `/score/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nImageDialogComponent\n\nImageDialogComponent\n\nSharedModule -->\n\nImageDialogComponent->SharedModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nImageDialogComponent \n\nImageDialogComponent \n\nImageDialogComponent  -->\n\nSharedModule->ImageDialogComponent \n\n\n\n\n\nImageService\n\nImageService\n\nSharedModule -->\n\nImageService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            ImageDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ImageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            ImageDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageDialogComponent } from './image-dialog/image-dialog.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ImageService } from './services/image.service';\nimport { HeaderComponent } from './header/header.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    ImageDialogComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    RouterModule,\n    CommonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule\n  ],\n  exports: [\n    ImageDialogComponent,\n    HeaderComponent,\n  ],\n  providers: [\n    ImageService\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/shopping-cart/shopping-cart.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                styleUrls\n                ./shopping-cart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateGrossSum\n                            \n                            \n                                changeItemAmount\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                host\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, eventsService: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/shopping-cart/shopping-cart.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        host\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/trial/shopping-cart/shopping-cart.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateGrossSum\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateGrossSum(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-cart/shopping-cart.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeItemAmount\n                        \n                        \n                    \n                \n            \n            \n                \nchangeItemAmount(item, delta, amount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-cart/shopping-cart.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delta\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-cart/shopping-cart.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.shoppingCartService.getCart()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/shopping-cart/shopping-cart.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { EventsService } from '../trial-services/events.service';\nimport { environment } from 'src/environments/environment';\n\n/**\n * \n */\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.scss']\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  @Input() host: string;\n\n  items = this.shoppingCartService.getCart();\n  // showCart: boolean;\n\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private eventsService: EventsService\n  ) { }\n\n  /**\n   * \n   */\n  ngOnInit() {\n    console.log(this.items);\n    // this.showCart = true;\n    this.eventsService.emitShowBack(true);\n  }\n  /**\n   * @ignore\n   */\n  get environment() {\n    return environment;\n  }\n\n  /**\n   * \n   * @param item \n   */\n  calculateGrossSum(item) {\n    let sum = 0;\n    if (item.taxes.length > 0) {\n      for (let t of item.taxes) {\n        sum += Math.round(item.netPrice * t.amount * 100) / 100;\n      }\n    }\n    sum += item.netPrice;\n    sum = Math.round(sum * (1 + item.vat) * 100) / 100;\n    return sum;\n  }\n  /**\n   * \n   * @param {Object} item \n   * @param {Number} delta \n   * @param {Number} amount \n   */\n  changeItemAmount(item, delta, amount) {\n    if (amount >= 1) {\n      if (amount + delta > 0) {\n        this.shoppingCartService.changeAmountOfItem(item, delta);\n      } else if (amount + delta == 0) {\n        // this.checkShow();\n        this.shoppingCartService.removeItemFromCart(item);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n   0; else nItems\">\n    \n      \n        \n      \n      \n        {{it.item.name}}\n        {{it.item.brand}}\n      \n      \n        \n          \n            remove\n          \n          \n            \n              {{it.amount}}\n            \n          \n          \n            add\n          \n        \n        \n      \n      \n        {{calculateGrossSum(it.item) | currency:it.item.currency}}\n      \n      \n        \n      \n    \n  \n  \n    \n  \n\n\n\n  \n    \n      Sie haben noch keine Waren in Ihrem Warenkorb.\n      \n      Zu den Produkten\n    \n  \n\n    \n\n    \n                \n                    ./shopping-cart.component.scss\n                \n                .wrapper {\n  display: grid;\n  grid-gap: 15px;\n  grid-template-areas:\n    \"cart\"\n    \"metrics\";\n}\n\n@media (min-width: 900px) {\n  .wrapper {\n    grid-template-columns: 4fr 1.5fr;\n    grid-template-areas: \"cart  metrics\";\n  }\n}\n\n.cart {\n  grid-area: cart;\n}\n\n.metrics {\n  grid-area: metrics;\n}\n\n.cart-wrapper {\n  display: grid;\n  grid-template-columns: 155px auto auto;\n  grid-template-rows: 75px auto auto;\n  //   height: 150px;\n  grid-template-areas:\n    \"image description description\"\n    \"image amount price\"\n    \"divider divider divider\";\n  grid-column-gap: 15px;\n  // grid-auto-rows: 250px;\n}\n\n.popover-wrapper {\n  display: grid;\n  grid-template-columns: 75px auto auto;\n  grid-template-rows: 75px auto auto;\n  //   height: 150px;\n  grid-template-areas:\n    \"image description description\"\n    \"image amount price\"\n    \"divider divider divider\";\n  grid-column-gap: 15px;\n  // grid-auto-rows: 250px;\n}\n\n@media (min-width: 500px) {\n  .cart-wrapper {\n    grid-template-columns: 155px auto 102px 90px;\n    grid-template-rows: 150px auto;\n    //   height: 150px;\n    grid-template-areas:\n      \"image description amount price\"\n      \"divider divider divider divider\";\n  }\n\n  .popover-wrapper {\n    grid-template-columns: 75px auto 102px 45px;\n    grid-template-rows: 75px auto;\n    //   height: 150px;\n    grid-template-areas:\n      \"image description amount price\"\n      \"divider divider divider divider\";\n  } \n}\n\n.image {\n  // grid-column-start: 1;\n  // grid-column-end: 1;\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n  grid-area: image;\n}\n\n.image img {\n  max-width: 155px;\n  max-height: 155px;\n}\n\n.popover-wrapper .image img {\n  max-width: 75px;\n  max-height: 75px;\n}\n\n.description {\n  // grid-column-start: 2;\n  // grid-column-end: 2;\n  grid-area: description;\n}\n\n.description .header {\n  font-size: 1.2rem;\n  margin: 0;\n}\n\n.description .sub-header {\n  font-size: 1rem;\n}\n\n.divider {\n  //   grid-column-start: 1;\n  //   grid-column-end: 3;\n  grid-area: divider;\n}\n\n.divider hr {\n  display: block;\n  height: 1px;\n  border: 0;\n  border-top: 1px solid #ccc;\n  margin: 0.6em 0;\n  padding: 0;\n}\n\n.amount {\n  // grid-column-start: 3;\n  // grid-column-end: 3;\n  grid-area: amount;\n}\n\n.price {\n  text-align: end;\n  grid-area: price;\n}\n\n.amount button {\n  padding: 0 !important;\n  min-width: 32px;\n}\n\n.amount .counter {\n  height: 100%;\n  width: 34px;\n  display: inline-block;\n  line-height: 36px;\n  // vertical-align: middle;\n}\n\n.amount .number {\n  font-family: UnitRoundedOT, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-size: 18px;\n  color: #4a4a4a;\n  border-left: none;\n  border-right: none;\n  width: 35px;\n  height: 100%;\n  text-align: center;\n  display: inline-block;\n  vertical-align: middle;\n  background-color: #f6f6f6;\n  // padding-top: auto;\n}\n\n.text-bold {\n  font-weight: bold;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   0; else nItems\">                                      {{it.item.name}}        {{it.item.brand}}                                          remove                                              {{it.amount}}                                            add                                              {{calculateGrossSum(it.item) | currency:it.item.currency}}                                                    Sie haben noch keine Waren in Ihrem Warenkorb.            Zu den Produkten      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/trial/shopping-cart/shopping-cart.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart\n                            \n                            \n                                showRemainder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToCart\n                            \n                            \n                                calcSumPriceOfItems\n                            \n                            \n                                changeAmountOfItem\n                            \n                            \n                                emitShowRemainder\n                            \n                            \n                                getAndSetCart\n                            \n                            \n                                getCart\n                            \n                            \n                                removeItemFromCart\n                            \n                            \n                                updateCartBackend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(trialSubjectService: TrialSubjectService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/shopping-cart/shopping-cart.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trialSubjectService\n                                                  \n                                                        \n                                                                        TrialSubjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addItemToCart\n                        \n                        \n                    \n                \n            \n            \n                \naddItemToCart(item, amount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-cart/shopping-cart.service.ts:66\n                \n            \n\n\n            \n                \n                    Function for item addition to cart.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calcSumPriceOfItems\n                        \n                        \n                    \n                \n            \n            \n                \ncalcSumPriceOfItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-cart/shopping-cart.service.ts:170\n                \n            \n\n\n            \n                \n                    Function for calculating the sum of all item prices.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeAmountOfItem\n                        \n                        \n                    \n                \n            \n            \n                \nchangeAmountOfItem(item, delta)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-cart/shopping-cart.service.ts:115\n                \n            \n\n\n            \n                \n                    Funtion for changing the amount of an item already in the shopping cart.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delta\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitShowRemainder\n                        \n                        \n                    \n                \n            \n            \n                \nemitShowRemainder(bool)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-cart/shopping-cart.service.ts:48\n                \n            \n\n\n            \n                \n                    Function for external use of event emission if remaining sum should be recalculated.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bool\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAndSetCart\n                        \n                        \n                    \n                \n            \n            \n                \ngetAndSetCart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-cart/shopping-cart.service.ts:29\n                \n            \n\n\n            \n                \n                    Function for getting current cart from API (in the event of a page reload).\nSets the cart variable.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCart\n                        \n                        \n                    \n                \n            \n            \n                \ngetCart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-cart/shopping-cart.service.ts:56\n                \n            \n\n\n            \n                \n                    Getter for current cart.\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        this.cart\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeItemFromCart\n                        \n                        \n                    \n                \n            \n            \n                \nremoveItemFromCart(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-cart/shopping-cart.service.ts:96\n                \n            \n\n\n            \n                \n                    Function for removing item from cart.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCartBackend\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCartBackend(obj)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-cart/shopping-cart.service.ts:128\n                \n            \n\n\n            \n                \n                    Function for updating the shopping cart and recording the shopping cart event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/shopping-cart/shopping-cart.service.ts:16\n                            \n                        \n\n                \n                    \n                        Holds current shopping cart. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRemainder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/shopping-cart/shopping-cart.service.ts:18\n                            \n                        \n\n                \n                    \n                        Eventemitter for updateing remaining budget if items are added to a cart. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TrialSubjectService } from '../trial-services/trial-subject.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * \n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n  /**Holds current shopping cart. */\n  cart: any[] = [];\n  /**Eventemitter for updateing remaining budget if items are added to a cart. */\n  showRemainder = new EventEmitter();\n\n  constructor(\n    private trialSubjectService: TrialSubjectService,\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Function for getting current cart from API (in the event of a page reload).\n   * Sets the cart variable.\n   */\n  getAndSetCart() {\n    const subjectID = sessionStorage.getItem('subjectID');\n    const treatmentID = sessionStorage.getItem('treatmentID');\n    // const treatmentAndSubjectURL = treatmentID + '/' + subjectID;\n    this.http.get(environment.apiURI + '/trial/currentCart/' + treatmentID + '/' + subjectID).subscribe(\n      (cart: any) => {\n        console.log(cart);\n        this.cart = cart;\n      },\n      (error) => {\n        console.log('No current cart yet');\n      }\n    );\n  }\n\n  /**\n   * Function for external use of event emission if remaining sum should be recalculated.\n   * @param {Boolean} bool \n   */\n  emitShowRemainder(bool) {\n    this.showRemainder.emit(bool)\n  }\n\n  /**\n   * Getter for current cart.\n   * @returns {Array} this.cart\n   */\n  getCart() {\n    return this.cart;\n  }\n\n  /**\n   * Function for item addition to cart.\n   * @emits showRemainder\n   * @param item \n   * @param amount \n   */\n  addItemToCart(item, amount) {\n    this.emitShowRemainder(true);\n    console.log(item);\n    if (this.cart) {\n      let index = this.cart.findIndex(x => x.item._id == item._id);\n      if (index != -1) {\n        // send info that item amount was changed may be delta?\n        this.cart[index].amount += amount;\n        console.log(this.cart);\n        return;\n      }\n    }\n    if (!this.cart) {\n      // erst ein http request to see if their is any cart\n      this.cart = [];\n    }\n    // send Information which item and amount\n    this.cart.push({\n      item: item,\n      amount: amount\n    });\n    console.log(this.cart);\n    this.updateCartBackend({ itemID: item._id, delta: amount, identifier: 'addition' });\n  }\n\n  /**\n   * Function for removing item from cart.\n   * @emits showRemainder\n   * @param {Object} item \n   */\n  removeItemFromCart(item) {\n    // send Information that item was deleted\n    const ind = this.cart.findIndex(x => x.item._id == item._id);\n    console.log(ind);\n    console.log(this.cart);\n    const amount = this.cart[ind].amount;\n    this.cart.splice(ind, 1);\n    console.log(this.cart);\n    this.updateCartBackend({ itemID: item._id, identifier: 'deletion', delta: -amount });\n    if (this.cart.length == 0) {\n      this.emitShowRemainder(false);\n    }\n  }\n\n  /**\n   * Funtion for changing the amount of an item already in the shopping cart.\n   * @param {Object} item \n   * @param {Number} delta \n   */\n  changeAmountOfItem(item, delta) {\n    //post Info to backend or info service?\n    this.cart[this.cart.findIndex(x => x.item == item)].amount += delta;\n    this.updateCartBackend({ identifier: 'change', itemID: item._id, delta: delta });\n  }\n\n  /**\n   * Function for updating the shopping cart and recording the shopping cart event.\n   * @param {Object} obj \n   * @param {String} obj.identifier ('change' | 'deletion' | 'addition')\n   * @param {String} obj.itemID\n   * @param {Number} obj.delta\n   */\n  updateCartBackend(obj) {\n    console.log(typeof obj.delta);\n    if (this.trialSubjectService.getSubjectID() == '0') {\n      console.log('Cart not updated. Subject: 0');\n      return;\n    }\n    // if (!this.subjectID || !this.treatmentID) {\n    //   this.subjectID = sessionStorage.getItem('subjectID')\n    //   this.treatmentID = sessionStorage.getItem('treatmentID');\n    // }\n    const subjectID = sessionStorage.getItem('subjectID');\n    const treatmentID = sessionStorage.getItem('treatmentID');\n    // const treatmentAndSubjectURL = treatmentID + '/' + subjectID;\n    // set current cart\n    this.http.put(environment.apiURI + '/trial/currentCart/' + treatmentID + '/' + subjectID, { cart: this.cart }).subscribe(\n      (cart) => {\n        console.log('updated');\n        console.log(cart);\n      },\n      (error) => {\n        console.log(\"can't save current cart\");\n        console.log(error);\n      }\n    );\n    // update data Object\n    let t = new Date().toISOString();\n    obj.time = t;\n    this.http.put(environment.apiURI + '/trial/transaction/' + treatmentID + '/' + subjectID, obj).subscribe(\n      () => {\n        console.log('recorded');\n      },\n      (error) => {\n        // would be detremental so pause experiment?\n        console.log(error);\n      }\n    );\n  }\n\n  /**\n   * Function for calculating the sum of all item prices.\n   * @returns {Number}\n   */\n  calcSumPriceOfItems() {\n    // console.log(this.cart);\n    let sum = 0;\n    if (!this.cart) {\n      return sum;\n    }\n    this.cart.forEach(element => {\n      // console.log('HERE!!!!', element);\n      let taxes = 0;\n      if (element.item.taxes.length > 0) {\n        for (let t of element.item.taxes) {\n          taxes += Math.round(t.amount * element.item.netPrice * 100) / 100;\n          // console.log(sum);\n        }\n      }\n      sum += Math.round(((element.item.netPrice + taxes) * (1 + element.item.vat)) * 100) / 100 * element.amount\n      // console.log(sum);\n    });\n    // console.log(`${(taxes + this.product.netPrice) * (1 + this.product.vat)}`)\n    // console.log(sum);\n    return sum;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingMetricsComponent.html":{"url":"components/ShoppingMetricsComponent.html","title":"component - ShoppingMetricsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShoppingMetricsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/shopping-metrics/shopping-metrics.component.ts\n\n\n    \n        Description\n    \n    \n        Shopping Metrics Component\nPlace for additional shopping cart metrics ...\neg.: Nutritional Information etc.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-metrics\n            \n\n            \n                styleUrls\n                ./shopping-metrics.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shopping-metrics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                showSum\n                            \n                            \n                                swapCahin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateSumOfItems\n                            \n                            \n                                    Async\n                                endTrial\n                            \n                            \n                                finalCheckOut\n                            \n                            \n                                iterateSwaps\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                optInDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currency\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, trialTreatmentService: TrialTreatmentService, eventsService: EventsService, trialSubjectService: TrialSubjectService, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/shopping-metrics/shopping-metrics.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialTreatmentService\n                                                  \n                                                        \n                                                                        TrialTreatmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialSubjectService\n                                                  \n                                                        \n                                                                        TrialSubjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateSumOfItems\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateSumOfItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-metrics/shopping-metrics.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Sum of Items in shopping cart\nFor html page\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            endTrial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    endTrial()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-metrics/shopping-metrics.component.ts:70\n                \n            \n\n\n            \n                \n                    OnClick Checkout Button for \"ending trial\".\nNow implemented to redirect to questionnaire part 2.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalCheckOut\n                        \n                        \n                    \n                \n            \n            \n                \nfinalCheckOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-metrics/shopping-metrics.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            iterateSwaps\n                        \n                        \n                    \n                \n            \n            \n                \niterateSwaps(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-metrics/shopping-metrics.component.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-metrics/shopping-metrics.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            optInDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    optInDialog(it: any | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/shopping-metrics/shopping-metrics.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    it\n                                    \n                                            any | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.shoppingCartService.getCart()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/shopping-metrics/shopping-metrics.component.ts:25\n                            \n                        \n\n                \n                    \n                        Holds all items currently in cart and amount of items. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSum\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/shopping-metrics/shopping-metrics.component.ts:27\n                            \n                        \n\n                \n                    \n                        Switch for displaying sum of items false if no items present. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swapCahin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/shopping-metrics/shopping-metrics.component.ts:30\n                            \n                        \n\n                \n                    \n                        Subject for iterating all items and possible swap options \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n\n                \n                    \n                        getcurrency()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/shopping-metrics/shopping-metrics.component.ts:51\n                                \n                            \n                    \n                        \n\n                                \n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ShoppingCartService } from '../shopping-cart/shopping-cart.service';\nimport { TrialTreatmentService } from '../trial-services/trial-treatment.service';\nimport { EventsService } from '../trial-services/events.service';\nimport { TrialSubjectService } from '../trial-services/trial-subject.service';\nimport { Router } from '@angular/router';\nimport { SwapDialogComponent } from '../swap-dialog/swap-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SwapOptDialogComponent } from '../swap-opt-dialog/swap-opt-dialog.component';\nimport { Subject } from 'rxjs';\n\n/**\n * Shopping Metrics Component\n * \n * Place for additional shopping cart metrics ...\n * eg.: Nutritional Information etc.\n */\n@Component({\n  selector: 'app-shopping-metrics',\n  templateUrl: './shopping-metrics.component.html',\n  styleUrls: ['./shopping-metrics.component.scss']\n})\nexport class ShoppingMetricsComponent implements OnInit {\n  /**Holds all items currently in cart and amount of items. */\n  items = this.shoppingCartService.getCart();\n  /**Switch for displaying sum of items false if no items present. */\n  showSum = true;\n\n  /** Subject for iterating all items and possible swap options */\n  swapCahin: Subject;\n\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private trialTreatmentService: TrialTreatmentService,\n    private eventsService: EventsService,\n    private trialSubjectService: TrialSubjectService,\n    private router: Router,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n    console.log(this.items);\n    if (this.items.length == 0) { return }\n    this.showSum = true;\n  }\n\n  /**\n   * @return {String} currreny e.g.: EUR... \n   * For the html page.\n   */\n  get currency() {\n    return this.trialTreatmentService.getCurrency();\n  }\n\n  /**\n   * \n   * @returns {Number} Sum of Items in shopping cart\n   * For html page\n   */\n  calculateSumOfItems() {\n    if (this.items.length == 0) {\n      return 0;\n    }\n    return this.shoppingCartService.calcSumPriceOfItems();\n  }\n  /**\n   * OnClick Checkout Button for \"ending trial\".\n   * Now implemented to redirect to questionnaire part 2.\n   */\n  async endTrial() {\n    const { showSwapEnd, showOptInEachTime, showOptInStart } = this.trialTreatmentService.getSwapConfig();\n    const items = [...this.items];\n    if (showSwapEnd) {\n      if (showOptInStart) {\n        const bool = await this.optInDialog(null);\n        if (bool) {\n          for (let it of items) {\n            await this.iterateSwaps(it);\n          }\n          this.finalCheckOut();\n        } else {\n          this.finalCheckOut();\n        }\n      } else if (showOptInEachTime) {\n        for (let it of items) {\n          console.log(it);\n          if (it.item.swaps.length == 0) {\n            continue;\n            // promiseArray.push(new Promise((resolve, reject) => { resolve() }));\n          }\n          let bool = !localStorage.getItem('remember') ? null : (localStorage.getItem('remember') == 'true' ? true : false);\n          if (bool == null) {\n            bool = await this.optInDialog(it)\n            if (bool) {\n              console.log('opted in');\n              await this.iterateSwaps(it);\n            } else {\n              // promiseArray.push(new Promise((resolve, reject) => { resolve() }));\n              console.log('opted out');\n              continue;\n            }\n          } else if (bool) {\n            console.log('opted in permanently');\n            await this.iterateSwaps(it);\n          } else if (bool == false) {\n            // promiseArray.push(new Promise((resolve, reject) => { resolve() }));\n            console.log('opted out permanently');\n            continue;\n          }\n        }\n        this.finalCheckOut();\n      } else {\n        // if no opt in Otion is selected\n        for (let it of items) {\n          if (it.item.swaps.length == 0) { continue }\n          await this.iterateSwaps(it);\n          // promiseArray.push(new Promise((resolve, reject) => { resolve() }));\n        }\n        this.finalCheckOut();\n      }\n    } else {\n      this.finalCheckOut();\n    }\n  }\n\n  // for ending trial\n  // this.eventsService.endTrial(this.shoppingCartService.getCart()).subscribe(\n  //   (trialData) => {\n  //     this.trialSubjectService.recording = false;\n  //     console.log(trialData);\n  //   },\n  //   (error) => {\n  //     this.trialSubjectService.recording = false;\n  //     console.log(error);\n  //   }\n  // );\n\n  finalCheckOut() {\n    const subjectID = sessionStorage.getItem('subjectID');\n    const treatmentID = sessionStorage.getItem('treatmentID');\n    console.log('proceeded after iterate Swaps')\n    // proceed to questionnaire\n    this.eventsService.endShoppingSession(this.shoppingCartService.getCart()).subscribe(\n      async (resp) => {\n        if (this.trialTreatmentService.treatmentData.questionnaire) {\n          this.trialSubjectService.recording = false;\n          this.router.navigate([`/t/${treatmentID}/s/${subjectID}/q2`])\n        } else {\n          const resp = await this.eventsService.endTrial().toPromise();\n          this.trialSubjectService.recording = false;\n          // route to end\n          this.router.navigate([`/t/${treatmentID}/s/${subjectID}/end`]);\n        }\n      },\n      (error) => {\n        console.log(this.trialTreatmentService.treatmentData);\n        this.router.navigate([`/t/${treatmentID}/s/${subjectID}/end`]);\n        this.trialSubjectService.recording = false;\n      }\n    )\n  }\n\n  async optInDialog(it: any | null): Promise {\n    return new Promise((resolve, reject) => {\n      const dialogRef = !it ?\n        this.dialog.open(SwapOptDialogComponent, {\n          data: { item: it.item },\n          maxHeight: '80%',\n          maxWidth: '80%',\n        })\n        : this.dialog.open(SwapOptDialogComponent, {\n          data: {},\n          maxHeight: '80%',\n          maxWidth: '80%',\n        })\n      dialogRef.afterClosed().subscribe(async (bool) => {\n        resolve(bool);\n      })\n    })\n  }\n\n  iterateSwaps(item) {\n    console.log('initiated swap iterate ', item);\n    return new Promise((resolve, reject) => {\n      if (!item.item.swaps) { resolve() } else {\n        if (item.item.swaps.length > 0) {\n          this.eventsService.$recordEvent.emit(\n            {\n              event: 'swapStarted',\n              data: {\n                originalItem: item.item._id,\n                originalAmount: item.amount,\n                swapOptions: item.item.swaps\n              }\n            }\n          )\n          const dialogRef = this.dialog.open(SwapDialogComponent, {\n            maxHeight: '80vh',\n            width: '80%',\n            data: {\n              originalItem: item.item._id,\n              items: item.item.swaps,\n              amount: item.amount\n            }\n          })\n\n          dialogRef.afterClosed().subscribe((result: any) => {\n            console.log(result);\n            if (!result) {\n              this.eventsService.$recordEvent.emit(\n                {\n                  event: 'swapEnded',\n                  data: {\n                    resultItem: item.item._id,\n                    resultAmount: item.amount,\n                    success: false\n                  }\n                }\n              )\n              this.shoppingCartService.addItemToCart(item, item.amount);\n              resolve();\n            } else {\n              this.eventsService.$recordEvent.emit(\n                {\n                  event: 'swapEnded',\n                  data: {\n                    resultItem: result.item._id,\n                    resultAmount: result.amount,\n                    success: true\n                  }\n                }\n              )\n              this.shoppingCartService.removeItemFromCart(item.item);\n              this.shoppingCartService.addItemToCart(result.item, result.amount);\n              resolve();\n            }\n          });\n        } else { resolve() }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Summe: {{calculateSumOfItems() | currency: currency}}\n  \n  \n    Zur Kasse\n  \n\n    \n\n    \n                \n                    ./shopping-metrics.component.scss\n                \n                .wrapper {\n  display: grid;\n  border-left: 1px solid #ccc;\n  height: 100%;\n  width: 100%;\n  padding: 0 15px;\n  grid-template-rows: 1fr;\n  row-gap: 10px;\n}\n\n.price-sum {\n  font-family: UnitRoundedOT, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-size: 18px;\n  color: #4a4a4a;\n  align-self: end;\n}\n\n.finish {\n  align-self: end;\n}\n\n.finish button {\n  //   margin-left: auto;\n  //   margin-right: auto;\n  //   display: block;\n  //   width: 90%;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Summe: {{calculateSumOfItems() | currency: currency}}        Zur Kasse  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingMetricsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubjectManageComponent.html":{"url":"components/SubjectManageComponent.html","title":"component - SubjectManageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SubjectManageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/subject-manage/subject-manage.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subject-manage\n            \n\n            \n                styleUrls\n                ./subject-manage.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./subject-manage.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/subject-manage/subject-manage.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/subject-manage/subject-manage.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBack\n                        \n                        \n                    \n                \n            \n            \n                \nonBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/subject-manage/subject-manage.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * @todo Alles\n */\n@Component({\n  selector: 'app-subject-manage',\n  templateUrl: './subject-manage.component.html',\n  styleUrls: ['./subject-manage.component.scss']\n})\nexport class SubjectManageComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onBack() {\n    this.router.navigate(['/admin']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      arrow_back\n    \n    Zurück\n  \n  \n\n    \n\n    \n                \n                    ./subject-manage.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            arrow_back        Zurück    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'SubjectManageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubjectSelectComponent.html":{"url":"components/SubjectSelectComponent.html","title":"component - SubjectSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SubjectSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/subject-select/subject-select.component.ts\n\n\n    \n        Description\n    \n    \n        Subject select comoponent\nUsed in trial config. Emits result for subject selection OR subject generation to parent element.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-subject-select\n            \n\n            \n                styleUrls\n                ./subject-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./subject-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                btnDisabled\n                            \n                            \n                                subjectForm\n                            \n                            \n                                treatmentID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateSubject\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tID\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trialSubjectService: TrialSubjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/subject-select/subject-select.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trialSubjectService\n                                                  \n                                                        \n                                                                        TrialSubjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tID\n                    \n                \n                        \n                            \n                                    Defined in src/app/trial/subject-select/subject-select.component.ts:27\n                            \n                        \n                \n                    \n                        Databinding for recieving treatmentID from parent. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/trial/subject-select/subject-select.component.ts:25\n                            \n                        \n                \n                    \n                        Databinding to parent for subjectID emission. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateSubject\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/subject-select/subject-select.component.ts:69\n                \n            \n\n\n            \n                \n                    OnClick listener for creating a subject.\nCalls service for generating subject, after success emits subjectID to parent.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/subject-select/subject-select.component.ts:37\n                \n            \n\n\n            \n                \n                    Not really needed anymore because component is hidden while treatmentID is not selected\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/subject-select/subject-select.component.ts:48\n                \n            \n\n\n            \n                \n                    OnClick Form submission.\nChecks if subject and treatment --> subject select fails if not subjectID is emited to parent\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            btnDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/subject-select/subject-select.component.ts:23\n                            \n                        \n\n                \n                    \n                        Submit Button disabled switch. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjectForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    subjectID: new FormControl('', Validators.required)\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/subject-select/subject-select.component.ts:19\n                            \n                        \n\n                \n                    \n                        Form for selecting subject by ID. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            treatmentID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/subject-select/subject-select.component.ts:17\n                            \n                        \n\n                \n                    \n                        Holds currently selected treatmentID, for use in checking if trial already exists. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tID\n                    \n                \n\n\n                \n                    \n                        settID(id)\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/subject-select/subject-select.component.ts:27\n                                \n                            \n                    \n                        \n                                Databinding for recieving treatmentID from parent. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TrialSubjectService } from '../trial-services/trial-subject.service';\n\n/**\n * Subject select comoponent\n * \n * Used in trial config. Emits result for subject selection OR subject generation to parent element.\n */\n@Component({\n  selector: 'app-subject-select',\n  templateUrl: './subject-select.component.html',\n  styleUrls: ['./subject-select.component.scss']\n})\nexport class SubjectSelectComponent implements OnInit {\n  /**Holds currently selected treatmentID, for use in checking if trial already exists. */\n  treatmentID: any;\n  /**Form for selecting subject by ID. */\n  subjectForm = new FormGroup({\n    subjectID: new FormControl('', Validators.required)\n  });\n  /**Submit Button disabled switch. */\n  btnDisabled = true;\n  /**Databinding to parent for subjectID emission. */\n  @Output() selected = new EventEmitter();\n  /**Databinding for recieving treatmentID from parent. */\n  @Input('tID') set tID(id) {\n    console.log(id);\n    this.btnDisabled = false;\n    this.treatmentID = id;\n  }\n\n  constructor(private trialSubjectService: TrialSubjectService) { }\n  /**\n   * Not really needed anymore because component is hidden while treatmentID is not selected\n   */\n  ngOnInit() {\n    if (!this.treatmentID) {\n      this.btnDisabled = true;\n      // this.subjectForm.invalid;\n    }\n  }\n  /**\n   * OnClick Form submission.\n   * Checks if subject and treatment --> subject select fails if not subjectID is emited to parent\n   * @emits subjectID\n   */\n  onSubmit() {\n    this.trialSubjectService.checkDataRecording(this.treatmentID, this.subjectForm.controls.subjectID.value)\n      .subscribe(\n        (val) => {\n          // already exists\n          this.subjectForm.controls.subjectID.setErrors({ trial: true })\n        },\n        (error) => {\n          //\n          if (error.error.noTrial) {\n            this.selected.emit(this.subjectForm.controls.subjectID.value)\n          }\n          console.log(error);\n        }\n      );\n  }\n  /**\n   * OnClick listener for creating a subject.\n   * Calls service for generating subject, after success emits subjectID to parent.\n   * @emits subjectID\n   */\n  generateSubject() {\n    if (!this.treatmentID) {\n      return;\n    }\n    this.trialSubjectService.generateNewSubject(this.treatmentID).subscribe((val: string) => {\n      this.selected.emit(val);\n    })\n  }\n}\n\n    \n\n    \n        Einstellungen\n\n  \n    Hier die Probanden ID eingeben, wenn das Subjekt den Test erneut durchführt.\n    \n      Subject ID\n      \n      Trial already started?\n    \n    Weiter\n  \n\n\n\n  Hiermit wird ein neuer Proband angelegt.\n  Neuen Probanten erstellen\n\n    \n\n    \n                \n                    ./subject-select.component.scss\n                \n                #overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    background-image: radial-gradient(#fff, rgba(0,0,0,0.5), #000);\n    z-index: 10;\n  }\n.form_card {\n    padding: 15px 25px;\n    max-width: 450px;\n    // height: 200px;\n    // line-height: 200px;\n    position: fixed;\n    top: 35%; \n    left: 50%;\n    margin-top: -100px;\n    margin-left: -225px;\n    background-color: #fff;\n    border-radius: 5px;\n    // text-align: center;\n    z-index: 11;\n}\n\nmat-form-field {\n    width: 100%;\n}\n\nbutton {\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Einstellungen      Hier die Probanden ID eingeben, wenn das Subjekt den Test erneut durchführt.          Subject ID            Trial already started?        Weiter    Hiermit wird ein neuer Proband angelegt.  Neuen Probanten erstellen'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'SubjectSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SwapDialogComponent.html":{"url":"components/SwapDialogComponent.html","title":"component - SwapDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SwapDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/swap-dialog/swap-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Swap Component\nMat Dialog that displays a swap option.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-swap-dialog\n            \n\n            \n                styleUrls\n                ./swap-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./swap-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                items\n                            \n                            \n                                originalItem\n                            \n                            \n                                showGrid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeItemAmount\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any, productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/swap-dialog/swap-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeItemAmount\n                        \n                        \n                    \n                \n            \n            \n                \nchangeItemAmount(item, delta, amount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/swap-dialog/swap-dialog.component.ts:60\n                \n            \n\n\n            \n                \n                    On Click listener that handles item amount changes in this.items.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delta\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/swap-dialog/swap-dialog.component.ts:35\n                \n            \n\n\n            \n                \n                    Set up the items array for displaying all swap options for an item.\nThe swap options are stored in an array on an item as itemID ref. \nBased on these the productService returns all items that are referenced.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(item, amount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/swap-dialog/swap-dialog.component.ts:81\n                \n            \n\n\n            \n                \n                    OnClick Function that propagetes the result of the swap option to \nthe components from where its called.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/swap-dialog/swap-dialog.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/swap-dialog/swap-dialog.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/swap-dialog/swap-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                        Holds all specified swap items displayed. Used for ngFor display each item. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            originalItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/swap-dialog/swap-dialog.component.ts:20\n                            \n                        \n\n                \n                    \n                        Holds reference for originally selected item \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showGrid\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/swap-dialog/swap-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                        Switch for displaying grid, only true after data is present. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ProductService } from '../trial-services/product.service';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Swap Component\n * \n * Mat Dialog that displays a swap option.\n */\n@Component({\n  selector: 'app-swap-dialog',\n  templateUrl: './swap-dialog.component.html',\n  styleUrls: ['./swap-dialog.component.scss']\n})\nexport class SwapDialogComponent implements OnInit {\n  /**Holds all specified swap items displayed. Used for ngFor display each item. */\n  items: any = [];\n  /**Holds reference for originally selected item */\n  originalItem: any;\n  /**Switch for displaying grid, only true after data is present. */\n  showGrid = false;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private productService: ProductService\n  ) { }\n\n  /**\n   * Set up the items array for displaying all swap options for an item.\n   * The swap options are stored in an array on an item as itemID ref. \n   * Based on these the productService returns all items that are referenced.\n   */\n  ngOnInit() {\n    this.originalItem = this.productService.getItemsBasedOnFilter([this.data.originalItem], 'filterTree');\n    let items = this.productService.getItemsBasedOnFilter(this.data.items, 'filterTree');\n    items.forEach(element => {\n      this.items.push({\n        item: element,\n        amount: this.data.amount\n      })\n    });\n    this.showGrid = true;\n  }\n\n  /**\n   * @ignore\n   */\n  get environment() {\n    return environment;\n  }\n\n  /**\n   * On Click listener that handles item amount changes in this.items.\n   * @param {Object} item \n   * @param {Number} delta \n   * @param {Number} amount \n   */\n  changeItemAmount(item, delta, amount) {\n    if (amount >= 1) {\n      if (amount + delta > 0) {\n        item.amount += delta;\n      }\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * OnClick Function that propagetes the result of the swap option to \n   * the components from where its called.\n   * @param item \n   * @param amount \n   */\n  onSubmit(item, amount): void {\n    this.dialogRef.close({ amount: amount, item: item });\n  }\n}\n\n    \n\n    \n        Tausch Option\nWollen Sie Ihre Auswahl des folgenden Produktes eintauschen gegen eine der folgenden Optionen?\n\n  \n    \n      \n    \n    \n      {{originalItem[0].name}}\n      {{originalItem[0].brand}}\n    \n    \n      \n        \n          remove\n        \n        \n          \n            {{data.amount}}\n          \n        \n        \n          add\n        \n      \n    \n    \n      {{data.amount * originalItem.netPrice * (1 + originalItem.vat) | currency:it.item.currency}}\n      Ja!\n     -->\n  \n  \n    \n      \n        Nein Danke!\n      \n    \n  \n  \n    \n  \n  Tausch Optionen:\n  \n    \n      \n    \n    \n      {{it.item.name}}\n      {{it.item.brand}}\n    \n    \n      \n        \n          remove\n        \n        \n          \n            {{it.amount}}\n          \n        \n        \n          add\n        \n      \n      \n    \n    \n      {{it.amount * it.item.netPrice * (1 + it.item.vat) | currency:it.item.currency}}\n      Ja!\n    \n    \n      \n    \n  \n\n\nCancel -->\nJa -->\n    \n\n    \n                \n                    ./swap-dialog.component.scss\n                \n                .cart-wrapper {\n  display: grid;\n  grid-template-columns: 155px auto auto;\n  grid-template-rows: 75px auto auto;\n  //   height: 150px;\n  grid-template-areas:\n    \"image description description\"\n    \"image amount price\"\n    \"divider divider divider\";\n  grid-column-gap: 15px;\n  // grid-auto-rows: 250px;\n}\n\n@media (min-width: 900px) {\n  .cart-wrapper {\n    grid-template-columns: 155px auto 102px 90px;\n    grid-template-rows: 150px auto;\n    //   height: 150px;\n    grid-template-areas:\n      \"image description amount price\"\n      \"divider divider divider divider\";\n  }\n}\n\n.image {\n  // grid-column-start: 1;\n  // grid-column-end: 1;\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n  grid-area: image;\n}\n\n.image img {\n  max-width: 155px;\n  max-height: 155px;\n}\n\n.description {\n  // grid-column-start: 2;\n  // grid-column-end: 2;\n  grid-area: description;\n}\n\n.divider {\n  //   grid-column-start: 1;\n  //   grid-column-end: 3;\n  grid-area: divider;\n}\n\n.divider hr {\n  display: block;\n  height: 1px;\n  border: 0;\n  border-top: 1px solid #ccc;\n  margin: 0.6em 0;\n  padding: 0;\n}\n\n.amount {\n  // grid-column-start: 3;\n  // grid-column-end: 3;\n  grid-area: amount;\n}\n\n.price {\n  text-align: end;\n  grid-area: price;\n  display: grid;\n}\n\n.amount button.change {\n  padding: 0 !important;\n  min-width: 32px;\n}\n\n.success {\n    // width: 100%;\n}\n\n.amount .counter {\n  height: 100%;\n  width: 34px;\n  display: inline-block;\n  line-height: 36px;\n  // vertical-align: middle;\n}\n\n.amount .number {\n  font-family: UnitRoundedOT, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-size: 18px;\n  color: #4a4a4a;\n  border-left: none;\n  border-right: none;\n  width: 35px;\n  height: 100%;\n  text-align: center;\n  display: inline-block;\n  vertical-align: middle;\n  background-color: #f6f6f6;\n  // padding-top: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Tausch OptionWollen Sie Ihre Auswahl des folgenden Produktes eintauschen gegen eine der folgenden Optionen?                          {{originalItem[0].name}}      {{originalItem[0].brand}}                                remove                                      {{data.amount}}                                    add                            {{data.amount * originalItem.netPrice * (1 + originalItem.vat) | currency:it.item.currency}}      Ja!     -->                      Nein Danke!                      Tausch Optionen:                          {{it.item.name}}      {{it.item.brand}}                                remove                                      {{it.amount}}                                    add                                  {{it.amount * it.item.netPrice * (1 + it.item.vat) | currency:it.item.currency}}      Ja!                    Cancel -->Ja -->'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'SwapDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SwapOptDialogComponent.html":{"url":"components/SwapOptDialogComponent.html","title":"component - SwapOptDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SwapOptDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/swap-opt-dialog/swap-opt-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-swap-opt-dialog\n            \n\n            \n                styleUrls\n                ./swap-opt-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./swap-opt-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                remember\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    swapConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, trialTreatmentService: TrialTreatmentService, data: any, eventsService: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/swap-opt-dialog/swap-opt-dialog.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialTreatmentService\n                                                  \n                                                        \n                                                                        TrialTreatmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/swap-opt-dialog/swap-opt-dialog.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(bol: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/swap-opt-dialog/swap-opt-dialog.component.ts:40\n                \n            \n\n\n            \n                \n                    Click listener activated by buttons in template \"Ja\", \"Nein\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bol\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/swap-opt-dialog/swap-opt-dialog.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/swap-opt-dialog/swap-opt-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remember\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/swap-opt-dialog/swap-opt-dialog.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/swap-opt-dialog/swap-opt-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        swapConfig\n                    \n                \n\n                \n                    \n                        getswapConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/swap-opt-dialog/swap-opt-dialog.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { TrialTreatmentService } from '../trial-services/trial-treatment.service';\nimport { EventsService } from '../trial-services/events.service';\n\n@Component({\n  selector: 'app-swap-opt-dialog',\n  templateUrl: './swap-opt-dialog.component.html',\n  styleUrls: ['./swap-opt-dialog.component.scss']\n})\nexport class SwapOptDialogComponent implements OnInit {\n\n  remember: FormGroup;\n  submitted: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private trialTreatmentService: TrialTreatmentService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private eventsService: EventsService\n  ) {\n    this.dialogRef.disableClose = true;\n  }\n\n  ngOnInit() {\n    this.remember = new FormGroup({\n      rememberMyAnswer: new FormControl(false)\n    })\n  }\n\n  get swapConfig() {\n    return this.trialTreatmentService.getSwapConfig();\n  }\n\n  /**\n   * Click listener activated by buttons in template \"Ja\", \"Nein\"\n   * @param bol \n   */\n  onSubmit(bol: boolean) {\n    this.dialogRef.disableClose = false;\n    this.submitted = true;\n    console.log(bol);\n    const { rememberMyAnswer } = this.remember.value;\n    const { showSwaps, showSwapEnd, showOptInStart, showOptInEachTime } = this.trialTreatmentService.getSwapConfig();\n    if (showSwaps && (showOptInStart && showSwapEnd) || showOptInStart) {\n      localStorage.setItem('rememberStart', bol.toString());\n    }\n    if (rememberMyAnswer && showOptInEachTime) {\n      localStorage.setItem('remember', bol.toString());\n    }\n    const data = {\n      sourceItem: !this.data.item ? '' : this.data.item._id,\n      rememberMyAnswer,\n      result: bol\n    }\n    this.eventsService.recordOptIn(data).subscribe(\n      () => {\n        this.onNoClick(bol);\n      }\n    )\n    // this.onNoClick(bol);\n    // handle recording of swap Opt events... \n  }\n\n  /**\n   * @ignore\n   */\n  onNoClick(bol): void {\n    this.dialogRef.close(bol);\n  }\n\n}\n\n    \n\n    \n        Tauschoptionen\n\n  Die von Ihnen gewählte Ware hat Tauschoptionen zur Auswahl, sollen diese angzeigt werden? Wenn Sie \"Meine Antwort\n    speichern\" bestätigen wird Ihre Antwort für die Dauer des einkaufes gespeichert.\n\n\n  Meine Antwort speichern\n\n\n\n  Nein\n  Ja\n\n\n\n  \n    Im Verlauf des Einkaufs können Ihnen zu bestimmten Waren Tauschoptionen vorgeschlagen werden. Möchten Sie\n    diese hinweise erhalten?\n  \n\n    \n\n    \n                \n                    ./swap-opt-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Tauschoptionen  Die von Ihnen gewählte Ware hat Tauschoptionen zur Auswahl, sollen diese angzeigt werden? Wenn Sie \"Meine Antwort    speichern\" bestätigen wird Ihre Antwort für die Dauer des einkaufes gespeichert.  Meine Antwort speichern  Nein  Ja      Im Verlauf des Einkaufs können Ihnen zu bestimmten Waren Tauschoptionen vorgeschlagen werden. Möchten Sie    diese hinweise erhalten?  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'SwapOptDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaxCreateComponent.html":{"url":"components/TaxCreateComponent.html","title":"component - TaxCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaxCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/tax-create/tax-create.component.ts\n\n\n    \n        Description\n    \n    \n        Component for handling tax creation and editing.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tax-create\n            \n\n            \n                styleUrls\n                ./tax-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tax-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayCols\n                            \n                            \n                                showCreate\n                            \n                            \n                                showTable\n                            \n                            \n                                tax\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTax\n                            \n                            \n                                editTax\n                            \n                            \n                                getTaxes\n                            \n                            \n                                newTax\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveTax\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTax\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTax()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tax-create/tax-create.component.ts:104\n                \n            \n\n\n            \n                \n                    OnClick listener for deleting base tax.\nNot implemented...\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editTax\n                        \n                        \n                    \n                \n            \n            \n                \neditTax(tax)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tax-create/tax-create.component.ts:57\n                \n            \n\n\n            \n                \n                    OnClick listener for editing a specific tax definition.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tax\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaxes\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaxes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tax-create/tax-create.component.ts:46\n                \n            \n\n\n            \n                \n                    Function for loading all base taxes.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newTax\n                        \n                        \n                    \n                \n            \n            \n                \nnewTax()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tax-create/tax-create.component.ts:69\n                \n            \n\n\n            \n                \n                    OnClick listener for adding new tax.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tax-create/tax-create.component.ts:40\n                \n            \n\n\n            \n                \n                    OnInit livecycle hook, initiates recieving tax data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTax\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTax()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tax-create/tax-create.component.ts:81\n                \n            \n\n\n            \n                \n                    OnClick listener for saving tax definition either new or edited tax.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/tax-create/tax-create.component.ts:22\n                            \n                        \n\n                \n                    \n                        Holds all created taxes, for display purposes in mat-table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayCols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['_id', 'header', 'description', 'edit']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/tax-create/tax-create.component.ts:28\n                            \n                        \n\n                \n                    \n                        Mat-table variable descriptions for column definition. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showCreate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/tax-create/tax-create.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/tax-create/tax-create.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tax\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/tax-create/tax-create.component.ts:18\n                            \n                        \n\n                \n                    \n                        Empty object for holding tax object.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TaxService } from '../services/tax.service';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n/**\n * Component for handling tax creation and editing.\n */\n@Component({\n  selector: 'app-tax-create',\n  templateUrl: './tax-create.component.html',\n  styleUrls: ['./tax-create.component.scss']\n})\nexport class TaxCreateComponent implements OnInit {\n  /**\n   * Empty object for holding tax object.\n   */\n  tax: any = {};\n  /**\n   * Holds all created taxes, for display purposes in mat-table.\n   */\n  dataSource = [];\n  /** */\n  showCreate = false;\n  /** */\n  showTable = false;\n  /**Mat-table variable descriptions for column definition. */\n  displayCols = ['_id', 'header', 'description', 'edit']\n\n  /**@ignore */\n  constructor(\n    private taxService: TaxService,\n    private fb: FormBuilder,\n    private router: Router\n  ) { }\n\n  /**\n   * OnInit livecycle hook, initiates recieving tax data.\n   */\n  ngOnInit() {\n    this.getTaxes();\n  }\n  /**\n   * Function for loading all base taxes.\n   */\n  getTaxes() {\n    this.taxService.getAllTaxes()\n      .subscribe((val: any) => {\n        this.dataSource = val;\n      });\n    this.showTable = true;\n  }\n  /**\n   * OnClick listener for editing a specific tax definition.\n   * @param tax \n   */\n  editTax(tax) {\n    this.tax.data = tax;\n    this.tax.form = this.fb.group({\n      header: [tax.header],\n      description: [tax.description],\n      shortDescription: [tax.shortDescription]\n    })\n    this.showCreate = true;\n  }\n  /**\n   * OnClick listener for adding new tax.\n   */\n  newTax() {\n    this.tax.data = {};\n    this.tax.form = this.fb.group({\n      header: [''],\n      description: [''],\n      shortDescription: ['']\n    })\n    this.showCreate = true;\n  }\n  /**\n   * OnClick listener for saving tax definition either new or edited tax.\n   */\n  saveTax() {\n    let taxData = this.tax.form.value;\n    if (Object.entries(this.tax.data).length === 0) {\n      Object.assign(this.tax.data, taxData);\n      this.taxService.saveNewTax(this.tax.data)\n        .subscribe((val) => {\n          this.getTaxes();\n          this.showCreate = false;\n        });\n    } else {\n      Object.assign(this.tax.data, taxData);\n      this.taxService.updateTaxInformation(this.tax.data).subscribe(\n        (tax) => {\n          this.getTaxes();\n          this.showCreate = false;\n        }\n      )\n    }\n  }\n  /**\n   * OnClick listener for deleting base tax.\n   * Not implemented...\n   */\n  deleteTax() {\n\n  }\n  /**@ignore */\n  onBack() {\n    this.router.navigate(['/admin']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      arrow_back\n    \n    Zurück\n  \n  \n    \n      \n         Item ID \n         {{element._id}} \n      \n\n      \n         Header \n         {{element.header}} \n      \n\n      \n         Description \n         {{element.description}} \n      \n\n      \n         Edit \n        \n          \n            more_vert\n          \n          \n            Delete\n            Edit Data\n            Add Image -->\n          \n        \n      \n      \n      \n    \n  \n\n  \n    \n      \n        \n          \n            Header\n            \n          \n        \n      \n      \n        \n          \n            Description\n            \n          \n        \n      \n      \n        \n          \n            Short name\n            \n            E.g. MwSt.\n          \n        \n      \n      Cancel\n      Save\n    \n  \n\n  \n    New Tax\n  \n\n    \n\n    \n                \n                    ./tax-create.component.scss\n                \n                .mat-form-field {\n  width: 100%;\n}\n\ntable {\n  width: 100%\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            arrow_back        Zurück                       Item ID          {{element._id}}                      Header          {{element.header}}                      Description          {{element.description}}                      Edit                               more_vert                                Delete            Edit Data            Add Image -->                                                                                    Header                                                                        Description                                                                        Short name                        E.g. MwSt.                              Cancel      Save            New Tax  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaxCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaxService.html":{"url":"injectables/TaxService.html","title":"injectable - TaxService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaxService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin/services/tax.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for CRUD for tax specificaitons.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllTaxes\n                            \n                            \n                                saveNewTax\n                            \n                            \n                                updateTaxInformation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllTaxes\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllTaxes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tax.service.ts:22\n                \n            \n\n\n            \n                \n                    Get function for all created taxes.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveNewTax\n                        \n                        \n                    \n                \n            \n            \n                \nsaveNewTax(body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tax.service.ts:31\n                \n            \n\n\n            \n                \n                    Function for saving new tax specification.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTaxInformation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTaxInformation(body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tax.service.ts:40\n                \n            \n\n\n            \n                \n                    Function for updating tax information. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Service for CRUD for tax specificaitons.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaxService {\n  /**\n   * @ignore\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Get function for all created taxes.\n   * @returns {Observable}\n   */\n  getAllTaxes() {\n    return this.http.get(`${environment.apiURI}/options/tax`);\n  }\n\n  /**\n   * Function for saving new tax specification.\n   * @param body \n   * @returns {Observable}\n   */\n  saveNewTax(body) {\n    return this.http.post(`${environment.apiURI}/options/tax`, body);\n  }\n\n  /**\n   * Function for updating tax information. \n   * @param body \n   * @returns {Observable}\n   */\n  updateTaxInformation(body) {\n    return this.http.put(`${environment.apiURI}/options/tax/${body._id}`, body)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreatmentCreateComponent.html":{"url":"components/TreatmentCreateComponent.html","title":"component - TreatmentCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreatmentCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/treatment-create/treatment-create.component.ts\n\n\n    \n        Description\n    \n    \n        Central Component for handling visual treatment editing.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-treatment-create\n            \n\n            \n                styleUrls\n                ./treatment-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./treatment-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                edited\n                            \n                            \n                                newT\n                            \n                            \n                                newTreatment\n                            \n                            \n                                show\n                            \n                            \n                                treatmentForm\n                            \n                            \n                                uploading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFilter\n                            \n                            \n                                addItems\n                            \n                            \n                                editData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refresh\n                            \n                            \n                                saveTreatment\n                            \n                            \n                                saveTreatmentData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addFilter\n                        \n                        \n                    \n                \n            \n            \n                \naddFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:164\n                \n            \n\n\n            \n                \n                    OnClick listener function for opening addition dialog type custom filter addition.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addItems\n                        \n                        \n                    \n                \n            \n            \n                \naddItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:138\n                \n            \n\n\n            \n                \n                    OnClick listener function for opening addition dialog type item addition.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editData\n                        \n                        \n                    \n                \n            \n            \n                \neditData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:199\n                \n            \n\n\n            \n                \n                    OnClick listener for enabling inputs for title and description form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:219\n                \n            \n\n\n            \n                \n                    Function for refresh UI components.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTreatment\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTreatment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:102\n                \n            \n\n\n            \n                \n                    OnClick listener function for saving changes on treatment specification.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTreatmentData\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTreatmentData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:119\n                \n            \n\n\n            \n                \n                    OnClick listener function for saving title and description for treatment.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edited\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:25\n                            \n                        \n\n                \n                    \n                        Switch for ? Not used yet\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:23\n                            \n                        \n\n                \n                    \n                        Switch for checking if new treatment is created or existing treatment edited. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTreatment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:29\n                            \n                        \n\n                \n                    \n                        Switch for visibility of treatmentEdit component, true after necessary data is present. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            treatmentForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:21\n                            \n                        \n\n                \n                    \n                        Base treatment data title and description form. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/treatment-create/treatment-create.component.ts:27\n                            \n                        \n\n                \n                    \n                        Switch for disabling save button on uploading new treament data. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { TreatmentService } from '../services/treatment.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ItemAllocateDialogComponent } from '../item-allocate-dialog/item-allocate-dialog.component';\nimport { FilterAllocateDialogComponent } from '../filter-allocate-dialog/filter-allocate-dialog.component';\n\n/**\n * Central Component for handling visual treatment editing.\n */\n@Component({\n  selector: 'app-treatment-create',\n  templateUrl: './treatment-create.component.html',\n  styleUrls: ['./treatment-create.component.scss']\n})\nexport class TreatmentCreateComponent implements OnInit {\n  /** */\n  newTreatment: any;\n  /**Base treatment data title and description form. */\n  treatmentForm: FormGroup;\n  /**Switch for checking if new treatment is created or existing treatment edited. */\n  newT = false;\n  /**Switch for ? Not used yet*/\n  edited = false;\n  /**Switch for disabling save button on uploading new treament data. */\n  uploading = false;\n  /**Switch for visibility of treatmentEdit component, true after necessary data is present. */\n  show = false;\n  /**@ignore */\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private treatmentService: TreatmentService,\n    private dialog: MatDialog\n  ) { }\n  /**\n   * \n   */\n  ngOnInit() {\n    if (this.activatedRoute.snapshot.data.treatment) {\n      this.newTreatment = this.activatedRoute.snapshot.data.treatment;\n      if (!this.newTreatment.items) {\n        this.newTreatment.items = [];\n      }\n      if (!this.newTreatment.filters) {\n        this.newTreatment.filters = [];\n      }\n      if (!this.newTreatment.subjectOptions) {\n        this.newTreatment.subjectOptions = {\n          money: 0,\n          restricted: false\n        }\n      }\n      this.treatmentForm = this.fb.group({\n        name: [''],\n        description: ['']\n      })\n      this.newT = true;\n      this.show = true;\n      console.log(this.newTreatment);\n    }\n    if (this.activatedRoute.snapshot.paramMap.get('id')) {\n      console.log(this.activatedRoute.snapshot.paramMap.get('id'));\n      this.treatmentService.getSpecificTreatment(this.activatedRoute.snapshot.paramMap.get('id')).subscribe(\n        (val: any[]) => {\n          // console.log(val);\n          this.newTreatment = val[0];\n          // console.log(this.newTreatment);\n          this.treatmentForm = this.fb.group({\n            name: [this.newTreatment.name],\n            description: [this.newTreatment.description]\n          });\n          this.treatmentForm.disable();\n          // console.log(this.treatmentForm.disable());\n          this.uploading = false;\n          if (!this.newTreatment.items) {\n            this.newTreatment.items = [];\n          }\n          if (!this.newTreatment.filters) {\n            this.newTreatment.filters = [];\n          }\n          if (!this.newTreatment.subjectOptions) {\n            this.newTreatment.subjectOptions = {\n              money: 0,\n              restricted: false\n            }\n          }\n          console.log(this.newTreatment);\n          this.show = true;\n        }\n      );\n      this.treatmentService.refreshUI.subscribe(() => {\n        this.refresh();\n      });\n    }\n  }\n  /**\n   * OnClick listener function for saving changes on treatment specification.\n   */\n  saveTreatment() {\n    this.uploading = true;\n    console.log(this.newTreatment.questionnaire);\n    this.treatmentService.updateSpecificTreatment(this.newTreatment).subscribe(\n      (val: any) => {\n        if (!this.newT) {\n          this.uploading = false;\n          return;\n        }\n        this.router.navigate(['/admin/treatmentEdit/' + val._id]);\n      }\n    );\n  }\n\n  /**\n   * OnClick listener function for saving title and description for treatment.\n   */\n  saveTreatmentData() {\n    this.uploading = true;\n    this.newTreatment.name = this.treatmentForm.controls.name.value;\n    this.newTreatment.description = this.treatmentForm.controls.description.value;\n    this.treatmentService.updateSpecificTreatment(this.newTreatment).subscribe(\n      (val: any) => {\n        if (!this.newT) {\n          this.uploading = false;\n          this.treatmentForm.disable();\n          return;\n        }\n        this.router.navigate(['/admin/treatmentEdit/' + val._id]);\n      }\n    );\n  }\n\n  /**\n   * OnClick listener function for opening addition dialog type item addition.\n   */\n  addItems() {\n    const dialogRef = this.dialog.open(ItemAllocateDialogComponent, {\n      width: '80%',\n      maxHeight: '90vh',\n      data: {\n        treatmentID: this.newTreatment._id,\n        items: this.newTreatment.items,\n        ref: 'treatment'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.treatmentService.addItemsToTreatment(this.newTreatment._id, result).subscribe(\n          (val) => {\n            this.treatmentService.replaceTreatment(val);\n            this.treatmentService.emitRefreshUI();\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * OnClick listener function for opening addition dialog type custom filter addition.\n   */\n  addFilter() {\n    const dialogRef = this.dialog.open(FilterAllocateDialogComponent, {\n      width: '80%',\n      data: { ref: 'treatment', filters: this.newTreatment.filters }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        let promises = [];\n        result.forEach((element) => {\n          promises.push(\n            new Promise((resolve, reject) => {\n              this.treatmentService.addFilterToTreatment(this.newTreatment._id, element._id).subscribe(\n                (val) => {\n                  resolve(val);\n                }),\n                (error) => { reject(error) }\n            })\n          );\n        });\n        Promise.all(promises)\n          .then((val: any[]) => {\n            val.forEach((element) => {\n              this.treatmentService.replaceTreatment(element);\n            });\n            this.treatmentService.emitRefreshUI();\n            this.show = true;\n          })\n          .catch((val) => { console.log(val) });\n      }\n    });\n  }\n  /**\n   * OnClick listener for enabling inputs for title and description form.\n   */\n  editData() {\n    this.treatmentForm.enable();\n  }\n  /**\n   * @ignore\n   */\n  onBack() {\n    if (!this.edited && this.newT) {\n      this.treatmentService.deleteSpecificTreatment(this.newTreatment._id).subscribe(\n        (val) => {\n          this.router.navigate(['/admin']);\n        }\n      );\n    } else {\n      this.router.navigate(['/admin']);\n    }\n  }\n  /**\n   * Function for refresh UI components.\n   */\n  refresh() {\n    this.treatmentService.getSpecificTreatment(this.activatedRoute.snapshot.paramMap.get('id')).subscribe(\n      (val: any[]) => {\n        this.newTreatment = val[0];\n        this.show = true;\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      arrow_back\n    \n    Back to administration\n  \n\n  \n    Create Treatment:\n    \n    \n      info\n    \n  \n  \n    \n      \n        The treatment edit screen gives you opportunity to configure the specificities of your individual\n        treatment needs. You can configure the selection of items to display in the shop, configure these items to\n        reflect changes, add filter options, and configure game and display options in the shop environment.\n        \n        Note: Always remember to save the treatment after making changes to persist the changes.\n      \n    \n  \n  \n    \n      \n        \n          Treatment data:\n          \n          \n            info\n          \n        \n        \n          \n            \n              Input name and description of your individual treatment. These are only relevant for your reference. They\n              will not be displayed during a trial.\n            \n          \n        \n      \n    \n    \n      \n        \n      \n      \n        \n      \n      Save\n    \n    Edit\n\n    \n\n    \n\n    \n\n    \n  \n  \n  \n    \n      Items:\n      \n      \n        info\n      \n    \n    \n      \n        \n          Here you can add and delete items from your treatment specification. If items are added a copy of the\n          current base item is appended to the treatment. These copies can be edited to reflect the desired changes.\n          the corresponding base items will not be updated based on these changes.  Note: Swap options, taxes,\n          and scores can be added to the individual items by editing these treatment items.\n        \n      \n    \n    Add Items\n     0\">\n      \n        Hallo\n      \n     -->\n    \n  \n  \n  \n\n    \n      Add filter to treatment\n      \n      \n        info\n      \n    \n    \n      \n        \n          Text.\n        \n      \n    \n    \n    Add filter\n    \n     -->\n  \n  \n  \n    \n      Display options\n      \n      \n        info\n      \n    \n    \n      \n        \n          Text.\n        \n      \n    \n    \n      Amount\n      \n      Amount of items visible on store page\n    \n    \n      \n        \n          Display cart sum\n          \n          \n          \n            info\n          \n        \n        \n          \n            \n              Choose this option to display the current sum of the shopping cart to the participants.\n            \n          \n        \n      \n      \n        \n          Display budget\n          \n          \n          \n            info\n          \n        \n        \n          \n            \n              Choose this option to display the current budget of the participants.\n            \n          \n        \n      \n    \n    \n      \n        \n          Display popover shopping cart\n          \n          \n          \n            info\n          \n        \n        \n          \n            \n              Choose this option to display the shopping cart in a popover on the item grid.\n            \n          \n        \n      \n    \n    \n      \n        \n          Display score\n          \n          \n            info\n          \n        \n        \n          \n            \n              Choose this option to display the score of an item in the shop.\n            \n          \n        \n      \n      \n        \n          Display taxes\n          \n          \n            info\n          \n        \n        \n          \n            \n              Choose this option to display the taxes of an item in the shop.\n            \n          \n        \n      \n    \n    \n      \n        \n          Show custom questionnaire\n          \n          \n          \n            info\n          \n        \n        \n          \n            \n              Before and after treatment navigate to q1 and q2\n            \n          \n        \n      \n    \n  \n  \n  Swap configuration options\n  \n    \n      \n        Show Swaps\n        \n        \n          info\n        \n      \n      \n        \n          \n            Choose this option to display the swap options of an item in the shop, when they are selected.\n          \n        \n      \n    \n    \n      \n        Show Swaps at the end of treatment\n        \n        \n        \n          info\n        \n      \n      \n        \n          \n            Choose this option to display the swaps specified on items when the treatment ends.\n          \n        \n      \n    \n  \n  \n    \n      \n        Opt-In once at the start\n        \n        \n          info\n        \n      \n      \n        \n          \n            Choose Opt-In option. Show opt in swap option at start. Based on when the swap options are displayed it is\n            either displayed when the treatment starts or when the subject ends the treatment.\n          \n        \n      \n    \n    \n      \n        Opt-In before each\n        \n        \n          info\n        \n      \n      \n        \n          \n            Opt in each time a swap option would be displayed. Also includes a remember my answer option for the\n            subjects.\n          \n        \n      \n    \n  \n  \n  \n    Game Options: -->\n    \n      Game options\n      \n      \n        info\n      \n    \n    \n      \n        \n          Text.\n        \n      \n    \n    \n      \n      Amount of money each subject can spent\n    \n    \n      \n        \n          Limit Budget\n          \n          \n            info\n          \n        \n        \n          \n            \n              Choose this option to limit the budget of each participant to a set number.\n            \n          \n        \n      \n    \n  \n  Save\n\n    \n\n    \n                \n                    ./treatment-create.component.scss\n                \n                .mini-nav {\n  display: flex;\n}\n\nform {\n  width: 100%;\n}\n\n.mat-form-field {\n  width: 100%;\n}\n\n.subform {\n  margin: 15px 0 30px 0;\n}\n\n// .example-tree-invisible {\n//     display: none;\n// }\n\n.example-tree ul,\n.example-tree li {\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style-type: none;\n}\n\nul {\n  padding-inline-start: 15px;\n}\n\n.mat-tree-node {\n  min-height: 34px !important;\n  cursor: pointer;\n}\n\ndiv.mat-tree-node {\n  font-weight: bold;\n}\n\n.info {\n  display: flex;\n  flex-direction: row;\n  height: 40px;\n  line-height: 40px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            arrow_back        Back to administration        Create Treatment:              info                          The treatment edit screen gives you opportunity to configure the specificities of your individual        treatment needs. You can configure the selection of items to display in the shop, configure these items to        reflect changes, add filter options, and configure game and display options in the shop environment.                Note: Always remember to save the treatment after making changes to persist the changes.                                          Treatment data:                                info                                                              Input name and description of your individual treatment. These are only relevant for your reference. They              will not be displayed during a trial.                                                                                          Save        Edit                                Items:                    info                                      Here you can add and delete items from your treatment specification. If items are added a copy of the          current base item is appended to the treatment. These copies can be edited to reflect the desired changes.          the corresponding base items will not be updated based on these changes.  Note: Swap options, taxes,          and scores can be added to the individual items by editing these treatment items.                      Add Items     0\">              Hallo           -->                    Add filter to treatment                    info                                      Text.                          Add filter         -->                Display options                    info                                      Text.                            Amount            Amount of items visible on store page                                Display cart sum                                          info                                                              Choose this option to display the current sum of the shopping cart to the participants.                                                            Display budget                                          info                                                              Choose this option to display the current budget of the participants.                                                                    Display popover shopping cart                                          info                                                              Choose this option to display the shopping cart in a popover on the item grid.                                                                    Display score                                info                                                              Choose this option to display the score of an item in the shop.                                                            Display taxes                                info                                                              Choose this option to display the taxes of an item in the shop.                                                                    Show custom questionnaire                                          info                                                              Before and after treatment navigate to q1 and q2                                              Swap configuration options                    Show Swaps                          info                                                  Choose this option to display the swap options of an item in the shop, when they are selected.                                              Show Swaps at the end of treatment                                  info                                                  Choose this option to display the swaps specified on items when the treatment ends.                                                  Opt-In once at the start                          info                                                  Choose Opt-In option. Show opt in swap option at start. Based on when the swap options are displayed it is            either displayed when the treatment starts or when the subject ends the treatment.                                              Opt-In before each                          info                                                  Opt in each time a swap option would be displayed. Also includes a remember my answer option for the            subjects.                                      Game Options: -->          Game options                    info                                      Text.                                  Amount of money each subject can spent                                Limit Budget                                info                                                              Choose this option to limit the budget of each participant to a set number.                                            Save'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreatmentCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreatmentSelectComponent.html":{"url":"components/TreatmentSelectComponent.html","title":"component - TreatmentSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreatmentSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/treatment-select/treatment-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-treatment-select\n            \n\n            \n                styleUrls\n                ./treatment-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./treatment-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                treatmentForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                treatmentID\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trialTreatmentService: TrialTreatmentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/treatment-select/treatment-select.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trialTreatmentService\n                                                  \n                                                        \n                                                                        TrialTreatmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        treatmentID\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/trial/treatment-select/treatment-select.component.ts:12\n                            \n                        \n                \n                    \n                        Databinding for emitting selected treatmentID to parent. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/treatment-select/treatment-select.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/treatment-select/treatment-select.component.ts:29\n                \n            \n\n\n            \n                \n                    OnClick listener that submits input string and checks if it exists.\nIf it exists \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            treatmentForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    treatment: new FormControl('', Validators.required),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/treatment-select/treatment-select.component.ts:14\n                            \n                        \n\n                \n                    \n                        Treatment selection form \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TrialTreatmentService } from '../trial-services/trial-treatment.service';\n\n@Component({\n  selector: 'app-treatment-select',\n  templateUrl: './treatment-select.component.html',\n  styleUrls: ['./treatment-select.component.scss']\n})\nexport class TreatmentSelectComponent implements OnInit {\n  /**Databinding for emitting selected treatmentID to parent. */\n  @Output() treatmentID: EventEmitter = new EventEmitter();\n  /**Treatment selection form */\n  treatmentForm = new FormGroup({\n    treatment: new FormControl('', Validators.required),\n  });\n\n  constructor(private trialTreatmentService: TrialTreatmentService) { }\n\n  ngOnInit() { }\n\n  /**\n   * OnClick listener that submits input string and checks if it exists.\n   * If it exists \n   * @emits treatmentID\n   * if not sets error to form to display, that there is no such treatment.\n   * Error also results in not treatment found. No error handling.\n   */\n  onSubmit() {\n    if (this.treatmentForm.valid) {\n      this.trialTreatmentService.getSpecificTreatmentData(this.treatmentForm.controls.treatment.value).subscribe(\n        (val) => {\n          if (!val) {\n            this.treatmentForm.controls.treatment.setErrors({ notFound: true });\n            return;\n          }\n          this.treatmentID.emit(val);\n        },\n        (error) => { this.treatmentForm.controls.treatment.setErrors({ notFound: true }) }\n      );\n    }\n  }\n\n}\n\n    \n\n    \n        \n   -->\nWähle das richtige Treatment\n\n  \n    Treatment ID\n    \n    Treatment ID nicht gefunden\n    \n      {{t}}\n     -->\n  \n  Get\n\n\n -->\n    \n\n    \n                \n                    ./treatment-select.component.scss\n                \n                mat-form-field {\n    width: 100%;\n}\n\nbutton {\n    width: 100%;\n}\n\n.c {\n    margin: 0 auto;\n    max-width: 420px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->Wähle das richtige Treatment      Treatment ID        Treatment ID nicht gefunden          {{t}}     -->    Get -->'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreatmentSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TreatmentService.html":{"url":"guards/TreatmentService.html","title":"guard - TreatmentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TreatmentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/admin/services/treatment.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshUI\n                            \n                            \n                                treatments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFilterToTreatment\n                            \n                            \n                                addItemsToTreatment\n                            \n                            \n                                deleteSpecificTreatment\n                            \n                            \n                                emitRefreshUI\n                            \n                            \n                                getAllDataOfTreatment\n                            \n                            \n                                getAllTreatments\n                            \n                            \n                                getItemsofTreatment\n                            \n                            \n                                getItemsOfTreatmentByArray\n                            \n                            \n                                getNewTreatmentID\n                            \n                            \n                                getSpecificTreatment\n                            \n                            \n                                removeItemFromTreatment\n                            \n                            \n                                replaceTreatment\n                            \n                            \n                                resolve\n                            \n                            \n                                updateInformationOfItemInTreatment\n                            \n                            \n                                updateSpecificTreatment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addFilterToTreatment\n                        \n                        \n                    \n                \n            \n            \n                \naddFilterToTreatment(id, filterID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:120\n                \n            \n\n\n            \n                \n                    Function for saving custom filter tree to treatment specification.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filterID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addItemsToTreatment\n                        \n                        \n                    \n                \n            \n            \n                \naddItemsToTreatment(id, items)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:91\n                \n            \n\n\n            \n                \n                    Function for adding items to treatment specification. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    items\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteSpecificTreatment\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteSpecificTreatment(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:110\n                \n            \n\n\n            \n                \n                    Function for deleting a whole treatment specification.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitRefreshUI\n                        \n                        \n                    \n                \n            \n            \n                \nemitRefreshUI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:154\n                \n            \n\n\n            \n                \n                    Function for emitting refresh UI components.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllDataOfTreatment\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllDataOfTreatment(treatmentID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:163\n                \n            \n\n\n            \n                \n                    Function for recieving trial data?\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treatmentID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllTreatments\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllTreatments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:128\n                \n            \n\n\n            \n                \n                    Function for fetching all treatments specified by authenticated user.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsofTreatment\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsofTreatment(treatmentID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:27\n                \n            \n\n\n            \n                \n                    Get items of specific treatment that is already loaded into memory. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treatmentID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        of items.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsOfTreatmentByArray\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsOfTreatmentByArray(treatmentID, items)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:36\n                \n            \n\n\n            \n                \n                    ???\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treatmentID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    items\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNewTreatmentID\n                        \n                        \n                    \n                \n            \n            \n                \ngetNewTreatmentID()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:62\n                \n            \n\n\n            \n                \n                    Function for instatiating a new treatment. Called when navigating to treatment create component.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpecificTreatment\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpecificTreatment(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:143\n                \n            \n\n\n            \n                \n                    Function for fetching a specific treatment associated to a treatment.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeItemFromTreatment\n                        \n                        \n                    \n                \n            \n            \n                \nremoveItemFromTreatment(treatmentID, itemID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:101\n                \n            \n\n\n            \n                \n                    Function for removing allocated items from treatment.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treatmentID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            replaceTreatment\n                        \n                        \n                    \n                \n            \n            \n                \nreplaceTreatment(treatment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:71\n                \n            \n\n\n            \n                \n                    Replacing treatment information after an updated treatment is available.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treatment\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:172\n                \n            \n\n\n            \n                \n                    Function for router resolver, when navigating to treatment create and it should be a new treamtent.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateInformationOfItemInTreatment\n                        \n                        \n                    \n                \n            \n            \n                \nupdateInformationOfItemInTreatment(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:54\n                \n            \n\n\n            \n                \n                    Function for updating item on treatment.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSpecificTreatment\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSpecificTreatment(body)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/treatment.service.ts:81\n                \n            \n\n\n            \n                \n                    Function for updating whole treatment information.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreatmentService implements Resolve>{\n  /**Variable for holding all treatments loaded from API. */\n  treatments: any[];\n  /**EventEmitter for notifying all components that need to update if values are changed. */\n  refreshUI = new EventEmitter();\n  /**@ignore */\n  constructor(private http: HttpClient) { }\n\n  // getter\n  /**\n   *Get items of specific treatment that is already loaded into memory. \n   * @param treatmentID \n   * @returns {Array} of items.\n   */\n  getItemsofTreatment(treatmentID) {\n    return this.treatments[this.treatments.findIndex(x => x._id == treatmentID)].items;\n  }\n\n  /**\n   * ???\n   * @param treatmentID \n   * @param items \n   */\n  getItemsOfTreatmentByArray(treatmentID, items) {\n    const treatment = this.treatments[this.treatments.findIndex(x => x._id == treatmentID)];\n    let result = [];\n    items.forEach(element => {\n      const ind = treatment.items.findIndex(x => x._id == element);\n      if (ind == -1) {\n        return;\n      }\n      result.push(treatment.items[ind]);\n    });\n    return result;\n  }\n\n  /**\n   * Function for updating item on treatment.\n   * @param item \n   * @returns {Observable}\n   */\n  updateInformationOfItemInTreatment(item) {\n    return this.http.put(environment.apiURI + '/treatment/item', item);\n  }\n\n  /**\n   * Function for instatiating a new treatment. Called when navigating to treatment create component.\n   * @returns {Observable}\n   */\n  getNewTreatmentID() {\n    return this.http.post(environment.apiURI + '/treatment', {});\n  }\n\n  // setter\n  /**\n   * Replacing treatment information after an updated treatment is available.\n   * @param treatment \n   */\n  replaceTreatment(treatment) {\n    const ind = this.treatments.findIndex(x => x._id == treatment._id);\n    this.treatments.splice(ind, 1, treatment);\n  }\n\n  /**\n   * Function for updating whole treatment information.\n   * @param body \n   * @returns {Observable}\n   */\n  updateSpecificTreatment(body) {\n    return this.http.put(environment.apiURI + '/treatment/', body);\n  }\n\n  /**\n   * Function for adding items to treatment specification. \n   * @param id \n   * @param items \n   * @returns {Observable}\n   */\n  addItemsToTreatment(id, items) {\n    return this.http.put(environment.apiURI + '/treatment/items/' + id, { items: items })\n  }\n\n  /**\n   * Function for removing allocated items from treatment.\n   * @param treatmentID \n   * @param itemID \n   * @returns {Observable}\n   */\n  removeItemFromTreatment(treatmentID, itemID) {\n    return this.http.delete(environment.apiURI + '/deleteItem/' + treatmentID + '/' + itemID);\n  }\n\n  /**\n   * Function for deleting a whole treatment specification.\n   * @param id \n   * @returns {Observable}\n   */\n  deleteSpecificTreatment(id) {\n    return this.http.delete(environment.apiURI + '/treatment/' + id);\n  }\n\n  /**\n   * Function for saving custom filter tree to treatment specification.\n   * @param id \n   * @param filterID \n   * @returns {Observable}\n   */\n  addFilterToTreatment(id, filterID) {\n    return this.http.put(environment.apiURI + '/treatment/tree/' + id, { filter: filterID });\n  }\n\n  /**\n   * Function for fetching all treatments specified by authenticated user.\n   * @returns {Observable}\n   */\n  getAllTreatments() {\n    return new Observable((sub) => {\n      this.http.get(environment.apiURI + '/treatment').subscribe((val: any[]) => {\n        console.log(val);\n        this.treatments = val;\n        sub.next(this.treatments);\n      });\n    });\n  }\n\n  /**\n   * Function for fetching a specific treatment associated to a treatment.\n   * @param id \n   * @returns {Observable}\n   */\n  getSpecificTreatment(id) {\n    return new Observable((sub) => {\n      this.getAllTreatments().subscribe((val: any[]) => {\n        sub.next(this.treatments.filter((x) => { return x._id == id }));\n      })\n    });\n  }\n  /**\n   * Function for emitting refresh UI components.\n   * @emits\n   */\n  emitRefreshUI() {\n    this.refreshUI.emit();\n  }\n\n  /**\n   * Function for recieving trial data?\n   * @param treatmentID \n   * @returns {Observable}\n   */\n  getAllDataOfTreatment(treatmentID) {\n    return this.http.get(environment.apiURI + '/download/data/' + treatmentID);\n  }\n\n  // for new Treatement information before editing it\n  /**\n   * Function for router resolver, when navigating to treatment create and it should be a new treamtent.\n   * @returns {Observable}\n   */\n  resolve() {\n    return this.getNewTreatmentID();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeManageComponent.html":{"url":"components/TreeManageComponent.html","title":"component - TreeManageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeManageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/tree-manage/tree-manage.component.ts\n\n\n    \n        Description\n    \n    \n        Handles the allocation of filter trees to the treatment specification.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tree-manage\n            \n\n            \n                styleUrls\n                ./tree-manage.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-manage.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayCols\n                            \n                            \n                                show\n                            \n                            \n                                showNav\n                            \n                            \n                                treatmentEdit\n                            \n                            \n                                trees\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTree\n                            \n                            \n                                editTree\n                            \n                            \n                                getTrees\n                            \n                            \n                                newTree\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTree\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTree(element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tree-manage/tree-manage.component.ts:90\n                \n            \n\n\n            \n                \n                    OnClick listener for handling tree deletion. \nEither base tree deletion or deleting filter tree from treatment.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editTree\n                        \n                        \n                    \n                \n            \n            \n                \neditTree(element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tree-manage/tree-manage.component.ts:78\n                \n            \n\n\n            \n                \n                    OnClick listener for starting data edit of a filter tree, \nnavigates based on if treamentEdit true or false.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrees\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrees()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tree-manage/tree-manage.component.ts:64\n                \n            \n\n\n            \n                \n                    Function for loading filter-trees from API.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newTree\n                        \n                        \n                    \n                \n            \n            \n                \nnewTree()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tree-manage/tree-manage.component.ts:110\n                \n            \n\n\n            \n                \n                    OnClick listener for creating a new tree.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tree-manage/tree-manage.component.ts:38\n                \n            \n\n\n            \n                \n                    OnInit Livecycle hook, start subsciptions for databinding.\nChecks if treatment edit view is displayed or base edit view. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/tree-manage/tree-manage.component.ts:120\n                \n            \n\n\n            \n                \n                    Function for refreshing the ui elements.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayCols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['_id', 'name', 'description', 'edit']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/tree-manage/tree-manage.component.ts:17\n                            \n                        \n\n                \n                    \n                        Mat-table column variable names. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/tree-manage/tree-manage.component.ts:25\n                            \n                        \n\n                \n                    \n                        Trigger visibility after data load. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showNav\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/tree-manage/tree-manage.component.ts:23\n                            \n                        \n\n                \n                    \n                        Weitch for showing back button on base tree creation view. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            treatmentEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/tree-manage/tree-manage.component.ts:21\n                            \n                        \n\n                \n                    \n                        Switch checks if this component is used in the treatment edit view or the base creation view. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trees\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/tree-manage/tree-manage.component.ts:19\n                            \n                        \n\n                \n                    \n                        Variable for holding all baseTrees that can be allocated to a treatment. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TreatmentService } from '../services/treatment.service';\nimport { TreeService } from '../services/tree.service';\n\n/**\n * Handles the allocation of filter trees to the treatment specification.\n */\n@Component({\n  selector: 'app-tree-manage',\n  templateUrl: './tree-manage.component.html',\n  styleUrls: ['./tree-manage.component.scss']\n})\nexport class TreeManageComponent implements OnInit {\n\n  /**Mat-table column variable names. */\n  displayCols = ['_id', 'name', 'description', 'edit'];\n  /**Variable for holding all baseTrees that can be allocated to a treatment. */\n  trees: any[];\n  /**Switch checks if this component is used in the treatment edit view or the base creation view. */\n  treatmentEdit = false;\n  /**Weitch for showing back button on base tree creation view. */\n  showNav = true;\n  /**Trigger visibility after data load. */\n  show = false;\n\n  /**@ignore */\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private treatementService: TreatmentService,\n    private treeService: TreeService\n  ) { }\n  /**\n   * OnInit Livecycle hook, start subsciptions for databinding.\n   * Checks if treatment edit view is displayed or base edit view. \n   */\n  ngOnInit() {\n    this.treeService.closeEdit.subscribe(() => {\n      this.router.navigate([{ outlets: { treeOutlet: null } }], { relativeTo: this.route });\n    });\n    this.treeService.updateFilterList.subscribe(() => {\n      this.getTrees();\n      this.router.navigate([{ outlets: { treeOutlet: null } }], { relativeTo: this.route });\n    })\n    if (this.route.snapshot.url[0].path == 'treatmentEdit') {\n      this.showNav = false;\n      this.treatmentEdit = true;\n      this.treatementService.getSpecificTreatment(this.route.snapshot.url[1].path)\n        .subscribe((val: any) => {\n          this.trees = val[0].filters;\n          this.show = true;\n        });\n      this.treatementService.refreshUI.subscribe(() => {\n        this.refresh();\n      })\n      return;\n    }\n    this.getTrees();\n  }\n  /**\n   * Function for loading filter-trees from API.\n   */\n  getTrees() {\n    this.show = false;\n    this.treeService.getAllTrees().subscribe(\n      (val: any[]) => {\n        this.trees = val;\n        this.show = true;\n      }\n    )\n  }\n  /**\n   * OnClick listener for starting data edit of a filter tree, \n   * navigates based on if treamentEdit true or false.\n   * @param element \n   */\n  editTree(element) {\n    if (this.treatmentEdit) {\n      this.router.navigate([{ outlets: { treeOutlet: 'editFilter/' + element._id } }], { relativeTo: this.route });\n      return;\n    }\n    this.router.navigate([{ outlets: { treeOutlet: 'edit/' + element._id } }], { relativeTo: this.route });\n  }\n  /**\n   * OnClick listener for handling tree deletion. \n   * Either base tree deletion or deleting filter tree from treatment.\n   * @param element \n   */\n  deleteTree(element) {\n    if (this.treatmentEdit) {\n      this.treeService.removeFilterFromTreatment(this.route.snapshot.url[1].path, element._id).subscribe(\n        (val) => {\n          this.treatementService.replaceTreatment(val);\n          this.refresh();\n        },\n        (error) => { console.error(error) }\n      );\n    } else {\n      this.treeService.deleteBaseFilter(element._id).subscribe(\n        (val) => {\n          this.getTrees();\n        }\n      )\n    }\n  }\n  /**\n   * OnClick listener for creating a new tree.\n   */\n  newTree() {\n    this.router.navigate([{ outlets: { treeOutlet: 'new' } }], { relativeTo: this.route });\n  }\n  /**@ignore */\n  onBack() {\n    this.router.navigate(['/admin']);\n  }\n  /**\n   * Function for refreshing the ui elements.\n   */\n  refresh() {\n    if (this.treatmentEdit) {\n      this.treatementService.getSpecificTreatment(this.route.snapshot.url[1].path)\n        .subscribe((val: any) => {\n          if (val[0].filters == undefined) {\n\n          } else {\n            this.trees = val[0].filters;\n          }\n          this.show = true;\n        });\n    } else {\n      this.getTrees();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      arrow_back\n    \n    Zurück\n  \n  \n    \n       Tree ID \n       {{element._id}} \n    \n\n    \n       Name \n       {{element.name}} \n    \n\n    \n       Beschreibung \n       {{element.description}} \n    \n\n    \n       Edit \n      \n        \n          more_vert\n        \n        \n          Edit\n          Delete\n        \n      \n    \n\n    \n    \n  \n\n  \n    New Filter\n  \n\n  \n\n    \n\n    \n                \n                    ./tree-manage.component.scss\n                \n                .mini-nav {\n  display: flex;\n}\ntable {\n  width: 100%;\n}\ntd {\n  max-width: 100px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  // cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            arrow_back        Zurück               Tree ID        {{element._id}}                Name        {{element.name}}                Beschreibung        {{element.description}}                Edit                         more_vert                          Edit          Delete                                  New Filter    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeManageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TreeService.html":{"url":"injectables/TreeService.html","title":"injectable - TreeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TreeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin/services/tree.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeEdit\n                            \n                            \n                                trees\n                            \n                            \n                                updateFilterList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteBaseFilter\n                            \n                            \n                                emitCloseEdit\n                            \n                            \n                                emitUpdateFilterList\n                            \n                            \n                                getAllTrees\n                            \n                            \n                                getSpecificTree\n                            \n                            \n                                removeFilterFromTreatment\n                            \n                            \n                                saveNewFilterTree\n                            \n                            \n                                updateFilterOnTreatment\n                            \n                            \n                                updateFilterTree\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBaseFilter\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBaseFilter(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tree.service.ts:122\n                \n            \n\n\n            \n                \n                    Function for deleting base filter tree information.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitCloseEdit\n                        \n                        \n                    \n                \n            \n            \n                \nemitCloseEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tree.service.ts:130\n                \n            \n\n\n            \n                \n                    Function for emitting close editing view.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitUpdateFilterList\n                        \n                        \n                    \n                \n            \n            \n                \nemitUpdateFilterList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tree.service.ts:137\n                \n            \n\n\n            \n                \n                    Function for emitting update filter list, for databinding purposes.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllTrees\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllTrees()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tree.service.ts:24\n                \n            \n\n\n            \n                \n                    Function for loading all trees from API.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpecificTree\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpecificTree(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tree.service.ts:53\n                \n            \n\n\n            \n                \n                    Function for loading a specific tree based on id string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFilterFromTreatment\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFilterFromTreatment(treatmentID, treeID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tree.service.ts:113\n                \n            \n\n\n            \n                \n                    Function for propagating filter tree deletion on treatment specification.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treatmentID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    treeID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveNewFilterTree\n                        \n                        \n                    \n                \n            \n            \n                \nsaveNewFilterTree(tree)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tree.service.ts:38\n                \n            \n\n\n            \n                \n                    Function for saving filter tree to databse (API).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilterOnTreatment\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilterOnTreatment(treatmentID, tree)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tree.service.ts:97\n                \n            \n\n\n            \n                \n                    Function specific for updating filter tree definition on a treatment specification.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treatmentID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilterTree\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilterTree(tree)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/services/tree.service.ts:80\n                \n            \n\n\n            \n                \n                    Function for updating specific tree. Putting changes to tree data to database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tree\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/services/tree.service.ts:16\n                            \n                        \n\n                \n                    \n                        Emitter for databinding to propagate close edit event. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trees\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/services/tree.service.ts:14\n                            \n                        \n\n                \n                    \n                        Variable for holding all trees recieved from the API. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateFilterList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/admin/services/tree.service.ts:18\n                            \n                        \n\n                \n                    \n                        Emitter for databinding to propagate update event. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n/**\n * \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TreeService {\n  /**Variable for holding all trees recieved from the API. */\n  trees = [];\n  /**Emitter for databinding to propagate close edit event. */\n  closeEdit: EventEmitter = new EventEmitter();\n  /**Emitter for databinding to propagate update event. */\n  updateFilterList = new EventEmitter();\n  /**@ignore */\n  constructor(private http: HttpClient) { }\n  /**\n   * Function for loading all trees from API.\n   */\n  getAllTrees() {\n    return new Observable((sub) => {\n      this.http.get(environment.apiURI + '/options/groups/allMyTrees').subscribe(\n        (val: any[]) => {\n          this.trees = val;\n          sub.next(this.trees);\n        }\n      );\n    })\n  }\n  /**\n   * Function for saving filter tree to databse (API).\n   * @param tree \n   */\n  saveNewFilterTree(tree) {\n    return new Observable((sub) => {\n      this.http.post(environment.apiURI + '/options/groups/tree', tree).subscribe(\n        (val) => {\n          this.trees.push(val);\n          sub.next(val);\n        }\n      );\n    });\n  }\n\n  /**\n   * Function for loading a specific tree based on id string.\n   * @param {String} id \n   */\n  getSpecificTree(id) {\n    const ind = this.trees.findIndex(x => x._id == id);\n    console.log(ind);\n    return new Observable((sub) => {\n      if (this.trees.length == 0 || ind == -1) {\n        this.getAllTrees().subscribe(\n          () => {\n            const newInd = this.trees.findIndex(x => x._id == id);\n            if (newInd != -1) {\n              sub.next(this.trees[newInd]);\n            } else {\n              sub.error('no matching tree found');\n            }\n          }\n        )\n      } else {\n        sub.next(this.trees[ind]);\n      }\n    });\n  }\n\n  // only for base trees not in treatment\n  /**\n   * Function for updating specific tree. Putting changes to tree data to database.\n   * @param tree \n   * @returns {Observable}\n   */\n  updateFilterTree(tree) {\n    // console.log(tree);\n    return new Observable((sub) => {\n      this.http.put(environment.apiURI + '/options/groups/tree/' + tree._id, tree).subscribe(\n        (val: any) => {\n          console.log(val);\n          sub.next(val);\n        }\n      );\n    });\n  }\n  /**\n   * Function specific for updating filter tree definition on a treatment specification.\n   * @param treatmentID \n   * @param tree \n   * @returns {Observable}\n   */\n  updateFilterOnTreatment(treatmentID, tree) {\n    return new Observable((sub) => {\n      this.http.put(environment.apiURI + '/treatment/' + treatmentID + '/' + tree._id, tree).subscribe(\n        (val) => {\n          sub.next(val);\n        }\n      );\n    });\n  }\n\n  /**\n   * Function for propagating filter tree deletion on treatment specification.\n   * @param treatmentID \n   * @param treeID \n   * @return {Observable}\n   */\n  removeFilterFromTreatment(treatmentID, treeID) {\n    return this.http.delete(environment.apiURI + '/tree/' + treatmentID + '/' + treeID);\n  }\n\n  /**\n   * Function for deleting base filter tree information.\n   * @param id \n   * @returns {Observable}\n   */\n  deleteBaseFilter(id) {\n    return this.http.delete(environment.apiURI + '/options/groups/tree/' + id);\n  }\n\n  /**\n   * Function for emitting close editing view.\n   * @emits \n   */\n  emitCloseEdit() {\n    this.closeEdit.emit(true);\n  }\n  /**\n   * Function for emitting update filter list, for databinding purposes.\n   * @emits\n   */\n  emitUpdateFilterList() {\n    this.updateFilterList.emit();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrialComponent.html":{"url":"components/TrialComponent.html","title":"component - TrialComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrialComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/trial.component.ts\n\n\n    \n        Description\n    \n    \n        Trial component\nThis is the first component that is loaded if any routes with /t//s//...\nis loaded. Here data for the subject and treatment are initialized and reinitilized if the subject\nreloads the page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trial\n            \n\n            \n                styleUrls\n                ./trial.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trial.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                innerWidth\n                            \n                            \n                                searchForm\n                            \n                            \n                                show\n                            \n                            \n                                showBack\n                            \n                            \n                                showRemainder\n                            \n                            \n                                showSearchIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelSearch\n                            \n                            \n                                navBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                            \n                                routeShoppingCart\n                            \n                            \n                                setDataOnReload\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sumCart\n                                \n                                \n                                    currency\n                                \n                                \n                                    numberOfItems\n                                \n                                \n                                    showSum\n                                \n                                \n                                    showBudget\n                                \n                                \n                                    budget\n                                \n                                \n                                    remainder\n                                \n                                \n                                    showPopOverCart\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, trialTreatmentService: TrialTreatmentService, shoppingCartService: ShoppingCartService, router: Router, eventsService: EventsService, location: Location, filterService: FilterService, trialSubjectService: TrialSubjectService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialTreatmentService\n                                                  \n                                                        \n                                                                        TrialTreatmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialSubjectService\n                                                  \n                                                        \n                                                                        TrialSubjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial.component.ts:29\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancelSearch\n                        \n                        \n                    \n                \n            \n            \n                \ncancelSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial.component.ts:202\n                \n            \n\n\n            \n                \n                    OnClick listener for cancel search free text search field. \nDeletes user input, emits \nreset filter event,\nand switches icon displayed from close to search.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navBack\n                        \n                        \n                    \n                \n            \n            \n                \nnavBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial.component.ts:232\n                \n            \n\n\n            \n                \n                    Onclick listener for back arrow, navigates back using location back.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial.component.ts:71\n                \n            \n\n\n            \n                \n                    On Init retrieves the treatment data from router resolver, \nsets subjectID using service, \nsets treatment data on first load and reload in trialTreatmentService and session store,\nchecks if subject is subjectID = 0, in which case no recording, else check if trial has already ended\nand then sets the visibility of the shop accordingly,\nsubscribes to shoping show remainder calculation to update display.  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSearch\n                        \n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial.component.ts:186\n                \n            \n\n\n            \n                \n                    OnClick listner for free text search bar. \nSwitches diplayed icon from search to close, \nemits filter event,\nif not already on products page navigates there.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeShoppingCart\n                        \n                        \n                    \n                \n            \n            \n                \nrouteShoppingCart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial.component.ts:222\n                \n            \n\n\n            \n                \n                    OnClick listener for route to shopping cart button. \nEmits show back event, for displaying arrow back for navigation, \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDataOnReload\n                        \n                        \n                    \n                \n            \n            \n                \nsetDataOnReload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial.component.ts:212\n                \n            \n\n\n            \n                \n                    Handels treamtment data set up before page is displayed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            innerWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : window.innerWidth\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    search: new FormControl('', Validators.required)\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial.component.ts:47\n                            \n                        \n\n                \n                    \n                        FormGroup for free text search \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial.component.ts:38\n                            \n                        \n\n                \n                    \n                        Switch for displaying the entire trial component.\nCan be false if trial already ended.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial.component.ts:42\n                            \n                        \n\n                \n                    \n                        switch for diplaying nav button back. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRemainder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial.component.ts:40\n                            \n                        \n\n                \n                    \n                        Switch for diplaying remainder of budget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSearchIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial.component.ts:44\n                            \n                        \n\n                \n                    \n                        Switch for displaying either search or close button on free text search. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sumCart\n                    \n                \n\n                \n                    \n                        getsumCart()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/trial.component.ts:104\n                                \n                            \n                    \n                        \n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n\n                \n                    \n                        getcurrency()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/trial.component.ts:111\n                                \n                            \n                    \n                        \n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        numberOfItems\n                    \n                \n\n                \n                    \n                        getnumberOfItems()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/trial.component.ts:118\n                                \n                            \n                    \n                        \n                                Provides length of cart array to button badge on shopping cart button.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        showSum\n                    \n                \n\n                \n                    \n                        getshowSum()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/trial.component.ts:125\n                                \n                            \n                    \n                        \n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        showBudget\n                    \n                \n\n                \n                    \n                        getshowBudget()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/trial.component.ts:132\n                                \n                            \n                    \n                        \n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        budget\n                    \n                \n\n                \n                    \n                        getbudget()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/trial.component.ts:139\n                                \n                            \n                    \n                        \n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        remainder\n                    \n                \n\n                \n                    \n                        getremainder()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/trial.component.ts:146\n                                \n                            \n                    \n                        \n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        showPopOverCart\n                    \n                \n\n                \n                    \n                        getshowPopOverCart()\n                    \n                \n                            \n                                \n                                    Defined in src/app/trial/trial.component.ts:153\n                                \n                            \n                    \n                        \n                                returns if a popover shopping cart should be displayed\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, AfterContentChecked, HostListener, Inject } from '@angular/core';\nimport { ActivatedRoute, Router, RouterStateSnapshot } from '@angular/router';\nimport { TrialTreatmentService } from './trial-services/trial-treatment.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { EventsService } from './trial-services/events.service';\nimport { Location } from '@angular/common';\nimport { ShoppingCartService } from './shopping-cart/shopping-cart.service';\nimport { FilterService } from './trial-services/filter.service';\nimport { TrialSubjectService } from './trial-services/trial-subject.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SwapOptDialogComponent } from './swap-opt-dialog/swap-opt-dialog.component';\n\n/**\n * Trial component\n * \n * This is the first component that is loaded if any routes with /t//s//...\n * is loaded. Here data for the subject and treatment are initialized and reinitilized if the subject\n * reloads the page.\n */\n\n@Component({\n  selector: 'app-trial',\n  templateUrl: './trial.component.html',\n  styleUrls: ['./trial.component.scss']\n})\nexport class TrialComponent implements OnInit, AfterViewInit {\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.innerWidth = window.innerWidth;\n  }\n  innerWidth: any = window.innerWidth;\n\n  /**\n   * Switch for displaying the entire trial component.\n   * Can be false if trial already ended.  \n   */\n  show = false;\n  /**Switch for diplaying remainder of budget */\n  showRemainder = false;\n  /**switch for diplaying nav button back. */\n  showBack: boolean;\n  /**Switch for displaying either search or close button on free text search. */\n  showSearchIcon: boolean = true;\n\n  /**FormGroup for free text search */\n  searchForm: FormGroup = new FormGroup({\n    search: new FormControl('', Validators.required)\n  })\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private trialTreatmentService: TrialTreatmentService,\n    private shoppingCartService: ShoppingCartService,\n    private router: Router,\n    private eventsService: EventsService,\n    private location: Location,\n    private filterService: FilterService,\n    private trialSubjectService: TrialSubjectService,\n    private dialog: MatDialog,\n  ) { }\n\n  /**\n   * On Init retrieves the treatment data from router resolver, \n   * sets subjectID using service, \n   * sets treatment data on first load and reload in trialTreatmentService and session store,\n   * checks if subject is subjectID = 0, in which case no recording, else check if trial has already ended\n   * and then sets the visibility of the shop accordingly,\n   * subscribes to shoping show remainder calculation to update display.  \n   */\n  ngOnInit() {\n    // console.log(this.activatedRoute.snapshot.data.treatment);\n    let t = this.activatedRoute.snapshot.data.treatment;\n    this.trialSubjectService.setSubjectID(this.activatedRoute.snapshot.paramMap.get('subjectID'))\n    // sessionStorage.setItem('subjectID', );\n    if (t) {\n      sessionStorage.setItem('treatmentID', t._id);\n      this.setDataOnReload();\n    }\n    if (this.trialSubjectService.getSubjectID() == '0') {\n      this.show = true;\n    } else {\n      this.trialSubjectService.checkDataRecording(t._id, this.trialSubjectService.getSubjectID()).subscribe((val: boolean) => {\n        this.show = val;\n      })\n    }\n    this.shoppingCartService.showRemainder.subscribe((val) => {\n      this.showRemainder = val;\n    })\n    this.filterService.resetFilter.subscribe(() => {\n      this.searchForm.reset();\n      this.showSearchIcon = true;\n      this.eventsService.recordFilterEvents({ filter: 'reset', type: 'general' });\n    })\n    this.filterService.filtered.subscribe((filter) => {\n      this.eventsService.recordFilterEvents(filter);\n    })\n    console.log('loaded');\n  }\n\n  /**\n   * @returns {number} The Sum of all items in the shopping cart\n   */\n  get sumCart() {\n    return this.shoppingCartService.calcSumPriceOfItems();\n  }\n\n  /**\n   * @returns {string} The currency specified in the treatment\n   */\n  get currency() {\n    return this.trialTreatmentService.getCurrency();\n  }\n\n  /**Provides length of cart array to button badge on shopping cart button.\n   * @returns {Number}\n   */\n  get numberOfItems() {\n    return !this.shoppingCartService.cart ? 0 : this.shoppingCartService.cart.length;\n  }\n\n  /**\n   * @returns {boolean} The specified display option for show shopping cart sum\n   */\n  get showSum() {\n    return this.trialTreatmentService.getDisplayOptions().showSum;\n  }\n\n  /**\n   * @returns {boolean} The specified display option for show budget of subject\n   */\n  get showBudget() {\n    return this.trialTreatmentService.getDisplayOptions().showBudget;\n  }\n\n  /**\n   * @returns {number} The specified budget amount, specified in the treatment configurations\n   */\n  get budget() {\n    return this.trialTreatmentService.treatmentData.subjectOptions.money;\n  }\n\n  /**\n   * @returns {number} The remaining budget (budget - cart sum)\n   */\n  get remainder() {\n    return this.trialTreatmentService.treatmentData.subjectOptions.money - this.shoppingCartService.calcSumPriceOfItems();\n  }\n\n  /**\n   * returns if a popover shopping cart should be displayed\n   */\n  get showPopOverCart() {\n    // return true;\n    const url: string = this.router.url;\n    return this.trialTreatmentService.getDisplayOptions().showPopOverCart && !url.includes('/cart') && this.numberOfItems > 0;\n  }\n\n  /**\n   * @ignore\n   */\n  ngAfterViewInit() {\n    // console.log('After View Init');\n    this.eventsService.showBack.subscribe((bool) => {\n      console.log(bool);\n      window.setTimeout(() => {\n        this.showBack = bool;\n      });\n    });\n    const { showSwaps, showOptInStart } = this.trialTreatmentService.getSwapConfig();\n    if (showSwaps && showOptInStart && !localStorage.getItem('rememberStart')) {\n      this.dialog.open(SwapOptDialogComponent, {\n        data: {},\n        maxHeight: '80%',\n        maxWidth: '80%',\n      })\n    }\n  }\n\n  /**\n   * OnClick listner for free text search bar. \n   * Switches diplayed icon from search to close, \n   * emits filter event,\n   * if not already on products page navigates there.\n   */\n  onSearch() {\n    if (!this.searchForm.controls.search.value) { return }\n    this.showSearchIcon = false;\n    this.filterService.filterItems(this.searchForm.controls.search.value, 'notFilterTree')\n    // when not on products page navigate there?\n    if (!this.router.routerState.snapshot.url.includes('products')) {\n      this.router.navigate(['products'], { relativeTo: this.activatedRoute })\n    };\n  }\n\n  /**\n   * OnClick listener for cancel search free text search field. \n   * Deletes user input, emits \n   * reset filter event,\n   * and switches icon displayed from close to search.\n   */\n  cancelSearch() {\n    // this.searchForm.reset();\n    // const filter = { filter: 'reset', type: 'general' }\n    // this.eventsService.recordSorting(filter);\n    this.filterService.resetFilterEmit();\n  }\n\n  /**\n   * Handels treamtment data set up before page is displayed.\n   */\n  setDataOnReload() {\n    console.log(this.activatedRoute.snapshot.data.treatment);\n    this.trialTreatmentService.setTreatmentDataOnReload(this.activatedRoute.snapshot.data.treatment);\n  }\n\n  /**\n   * OnClick listener for route to shopping cart button. \n   * Emits show back event, for displaying arrow back for navigation, \n   * \n   */\n  routeShoppingCart() {\n    this.eventsService.emitShowBack(true);\n    this.router.navigate(['/t/' + this.trialTreatmentService.getTreatmentID() + '/s/' + this.trialSubjectService.getSubjectID() + '/shop/cart']);\n    return;\n\n  }\n\n  /**\n   * Onclick listener for back arrow, navigates back using location back.\n   */\n  navBack() {\n    this.eventsService.emitShowBack(false);\n    this.location.back();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n       -->\n      \n        arrow_back\n      \n       -->\n      \n        \n        \n          \n            search\n          \n          \n            close\n          \n        \n      \n    \n     520; else dropdown\">\n      \n        \n          \n            shopping_cart\n            Warenkorb\n          \n          \n            \n              Ihr Warenkorb\n            \n            \n              \n            \n          \n        \n        \n          \n            Sum: {{sumCart | currency: currency}}\n          \n        \n        \n          \n            \n              Remaining: {{remainder | currency: currency}}\n              Budget: {{budget | currency: currency}}\n            \n          \n        \n      \n    \n  \n  \n    \n  \n\n\n\n  \n    \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n\n\n\n  \n    shopping_cart\n  \n\n    \n\n    \n                \n                    ./trial.component.scss\n                \n                .wrapper {\n  display: grid;\n  grid-template-rows: 64px auto auto;\n}\n\n.header {\n  grid-row-start: 1;\n  grid-row-end: 1;\n}\n\n.body {\n  grid-row-start: 3;\n  grid-row-end: 3;\n}\n\n.info-bar {\n  grid-row-start: 2;\n  grid-row-end: 2;\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  margin: 15px;\n}\n\n.search {\n  grid-column-start: 1;\n  grid-column-end: 1;\n  border: 1px solid #dcdcdc;\n  // border-left: none;\n}\n.info {\n  grid-column-start: 2;\n  grid-column-end: 2;\n  // border-top: 1px solid #DCDCDC;\n  // border-bottom: 1px solid #DCDCDC;\n  // display: grid;\n  // grid-template-columns: 3;\n  // justify-items: end;\n  //   border-right: 1px solid #DCDCDC;\n}\n\n@media (max-width: 520px) {\n  .info-bar {\n    grid-template-columns: 3fr 1fr;\n    column-gap: 1rem;\n  }\n  \n  .search {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    border: 1px solid #dcdcdc;\n  }\n\n  .info {\n    grid-column-start: 2;\n    grid-column-end: 3;\n  }\n}\n\n.shopping-cart.budget {\n  // display: flex;\n  // flex-direction: column;\n}\n\n.shopping-cart button {\n  height: 50px;\n  float: right;\n  margin-left: 15px;\n}\n\n.shopping-cart .info {\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n  height: 50px;\n  float: right;\n  margin-left: 15px;\n  line-height: 50px;\n  text-align: center;\n  padding: 0 15px;\n}\n\n.shopping-cart .b-expanded {\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n  height: 50px;\n  float: right;\n  margin-left: 15px;\n  line-height: 30px;\n  text-align: end;\n  padding: 0 15px;\n}\n\n.shrink {\n  color: grey;\n  font-size: 0.95rem;\n  margin-top: -10px;\n}\n\n.test {\n  display: flex;\n  flex-direction: column;\n}\n\nform {\n  height: 100%;\n}\n\nform.example input[type=\"text\"] {\n  padding: 5px 0 0 24px;\n  font-size: 18px;\n  //   height: 100%;\n  height: 51px;\n  float: left;\n  border-right: 1px solid #dcdcdc;\n}\n\nform.example input[type=\"text\"].test {\n  max-width: calc(100% - 49px);\n}\n\nform.example input[type=\"text\"].test1 {\n  max-width: calc(100% - 98px);\n  // float: left;\n  // border-right: 1px solid #dcdcdc;\n  border-left: 1px solid #dcdcdc;\n}\n\nform.example button {\n  padding-top: 5px;\n  padding-bottom: 5px;\n  //   height: 100%;\n  height: 50px;\n  width: 49px;\n  float: left;\n  font-size: 24px;\n  //   border: 1px solid #DCDCDC;\n  //   border-left: 1px solid #DCDCDC;\n  cursor: pointer;\n}\n\n.btn-back {\n  padding-top: 5px;\n  padding-bottom: 5px;\n  //   height: 100%;\n  height: 50px;\n  width: 49px;\n  float: left;\n  font-size: 24px;\n  //   border: 1px solid #DCDCDC;\n  //   border-left: 1px solid #DCDCDC;\n  cursor: pointer;\n}\n\n.wrapper-spinner {\n  position: absolute;\n  top: calc(50% - 40px);\n  left: calc(50%-40px);\n}\n\n.lds-spinner {\n  color: official;\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n.lds-spinner div {\n  transform-origin: 40px 40px;\n  animation: lds-spinner 1.2s linear infinite;\n}\n.lds-spinner div:after {\n  content: \" \";\n  display: block;\n  position: absolute;\n  top: 3px;\n  left: 37px;\n  width: 6px;\n  height: 18px;\n  border-radius: 20%;\n  background: #000;\n}\n.lds-spinner div:nth-child(1) {\n  transform: rotate(0deg);\n  animation-delay: -1.1s;\n}\n.lds-spinner div:nth-child(2) {\n  transform: rotate(30deg);\n  animation-delay: -1s;\n}\n.lds-spinner div:nth-child(3) {\n  transform: rotate(60deg);\n  animation-delay: -0.9s;\n}\n.lds-spinner div:nth-child(4) {\n  transform: rotate(90deg);\n  animation-delay: -0.8s;\n}\n.lds-spinner div:nth-child(5) {\n  transform: rotate(120deg);\n  animation-delay: -0.7s;\n}\n.lds-spinner div:nth-child(6) {\n  transform: rotate(150deg);\n  animation-delay: -0.6s;\n}\n.lds-spinner div:nth-child(7) {\n  transform: rotate(180deg);\n  animation-delay: -0.5s;\n}\n.lds-spinner div:nth-child(8) {\n  transform: rotate(210deg);\n  animation-delay: -0.4s;\n}\n.lds-spinner div:nth-child(9) {\n  transform: rotate(240deg);\n  animation-delay: -0.3s;\n}\n.lds-spinner div:nth-child(10) {\n  transform: rotate(270deg);\n  animation-delay: -0.2s;\n}\n.lds-spinner div:nth-child(11) {\n  transform: rotate(300deg);\n  animation-delay: -0.1s;\n}\n.lds-spinner div:nth-child(12) {\n  transform: rotate(330deg);\n  animation-delay: 0s;\n}\n@keyframes lds-spinner {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n\n// a {\n//   text-decoration: none;\n// }\n\n.popover__title {\n  font-size: 24px;\n  line-height: 36px;\n  text-decoration: none;\n  color: rgb(228, 68, 68);\n  text-align: center;\n  padding: 15px 0;\n}\n\n.popover__wrapper {\n  position: relative;\n  // margin-top: 1.5rem;\n  // display: inline-block;\n}\n.popover__content {\n  opacity: 0;\n  visibility: hidden;\n  position: absolute;\n  // left: -150px;\n  right: 0;\n  top: 70px;\n  transform: translate(0, 10px);\n  background-color: #fff;\n  padding: 0;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n  width: auto;\n}\n.popover__wrapper:hover .popover__content {\n  z-index: 10;\n  opacity: 1;\n  visibility: visible;\n  transform: translate(0, -20px);\n  transition: all 0.5s cubic-bezier(0.75, -0.02, 0.2, 0.97);\n}\n.popover__message {\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     -->              arrow_back             -->                                            search                                close                                 520; else dropdown\">                                    shopping_cart            Warenkorb                                              Ihr Warenkorb                                                                                                  Sum: {{sumCart | currency: currency}}                                                              Remaining: {{remainder | currency: currency}}              Budget: {{budget | currency: currency}}                                                                                                                                            shopping_cart  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'TrialComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrialConfigComponent.html":{"url":"components/TrialConfigComponent.html","title":"component - TrialConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrialConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/trial-config/trial-config.component.ts\n\n\n    \n        Description\n    \n    \n        Trial Config Component\nHere trials can be manually or automatically configured.\nIcorporates components that handle treatment selection and subject selection / or generation.\nAutomatic treatment configuration can be done by provding a Link in form of \n              /t/?genSubject=yes\nWith this the subject is automatically generated and the treatment is started. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trial-config\n            \n\n            \n                styleUrls\n                ./trial-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trial-config.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deviceHeight\n                            \n                            \n                                deviceWidth\n                            \n                            \n                                id\n                            \n                            \n                                idLater\n                            \n                            \n                                show\n                            \n                            \n                                showSelectForm\n                            \n                            \n                                showSubjectSelect\n                            \n                            \n                                subjectID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                selected\n                            \n                            \n                                setUpTreatment\n                            \n                            \n                                    Async\n                                startTrial\n                            \n                            \n                                startTrialQuestionnaire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, trialTreatmentService: TrialTreatmentService, trialSubjectService: TrialSubjectService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial-config/trial-config.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialTreatmentService\n                                                  \n                                                        \n                                                                        TrialTreatmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trialSubjectService\n                                                  \n                                                        \n                                                                        TrialSubjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-config/trial-config.component.ts:53\n                \n            \n\n\n            \n                \n                    Checks if treatment id was already specified in URL, if not display app-treatment-select, \nif yes only display app-subject-select component.\nIf QueryString \"genSubject=yes\" is present Subject is automatically generated and redirected to questionnaire start.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-config/trial-config.component.ts:87\n                \n            \n\n\n            \n                \n                    Output event listener from app-subject-select\nrecieves the subjectID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUpTreatment\n                        \n                        \n                    \n                \n            \n            \n                \nsetUpTreatment(treatmentData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-config/trial-config.component.ts:118\n                \n            \n\n\n            \n                \n                    Event listener for data binding to app-treatment-select component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treatmentData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startTrial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTrial()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-config/trial-config.component.ts:97\n                \n            \n\n\n            \n                \n                    Routes to waiting screen where button is displayed for starting the trial.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startTrialQuestionnaire\n                        \n                        \n                    \n                \n            \n            \n                \nstartTrialQuestionnaire()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-config/trial-config.component.ts:110\n                \n            \n\n\n            \n                \n                    Only implemented to start a trial with preceeding questionnaire.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deviceHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-config/trial-config.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deviceWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-config/trial-config.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-config/trial-config.component.ts:23\n                            \n                        \n\n                \n                    \n                        Holds current treatmentID \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idLater\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-config/trial-config.component.ts:27\n                            \n                        \n\n                \n                    \n                        Not sure if needed! \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-config/trial-config.component.ts:33\n                            \n                        \n\n                \n                    \n                        Switch for disabling display while auto gen subject \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSelectForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-config/trial-config.component.ts:29\n                            \n                        \n\n                \n                    \n                        Switch for displaying treatment selection form (treatment-select.component) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSubjectSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-config/trial-config.component.ts:31\n                            \n                        \n\n                \n                    \n                        Switch for displaying subject select form (subject-select.component) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjectID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-config/trial-config.component.ts:25\n                            \n                        \n\n                \n                    \n                        Holds current subjectID \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TrialTreatmentService } from '../trial-services/trial-treatment.service';\nimport { TrialSubjectService } from '../trial-services/trial-subject.service';\n\n/**\n * Trial Config Component\n * \n * Here trials can be manually or automatically configured.\n * Icorporates components that handle treatment selection and subject selection / or generation.\n * \n * Automatic treatment configuration can be done by provding a Link in form of \n *              /t/?genSubject=yes\n * With this the subject is automatically generated and the treatment is started. \n */\n@Component({\n  selector: 'app-trial-config',\n  templateUrl: './trial-config.component.html',\n  styleUrls: ['./trial-config.component.scss']\n})\nexport class TrialConfigComponent implements OnInit {\n  /**Holds current treatmentID */\n  id: string;\n  /**Holds current subjectID */\n  subjectID: string;\n  /**Not sure if needed! */\n  idLater = false;\n  /**Switch for displaying treatment selection form (treatment-select.component) */\n  showSelectForm = false;\n  /**Switch for displaying subject select form (subject-select.component) */\n  showSubjectSelect = false;\n  /**Switch for disabling display while auto gen subject */\n  show = false;\n  deviceHeight: number;\n  deviceWidth: number;\n\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private trialTreatmentService: TrialTreatmentService,\n    private trialSubjectService: TrialSubjectService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  /**\n   * Checks if treatment id was already specified in URL, if not display app-treatment-select, \n   * if yes only display app-subject-select component.\n   * \n   * If QueryString \"genSubject=yes\" is present Subject is automatically generated and redirected to questionnaire start.\n   */\n  ngOnInit() {\n    if (this.route.snapshot.queryParamMap.get('genSubject') == null) { this.show = true }\n    const id = this.activatedRoute.snapshot.paramMap.get('treatmentID');\n    if (!id) {\n      this.idLater = true;\n      this.showSelectForm = true;\n      return;\n    }\n    this.deviceWidth = window.innerWidth; \n    this.deviceHeight = window.innerHeight;\n    this.id = id;\n    this.showSelectForm = false;\n    this.showSubjectSelect = true;\n    this.activatedRoute.queryParams.subscribe(async (params) => {\n      console.log(params);\n      if (params.genSubject == 'yes') {\n        this.subjectID = await this.trialSubjectService.generateNewSubject(this.id).toPromise();\n        // let trial = await this.trialTreatmentService.startTreatment(this.id, this.subjectID).toPromise();\n        // console.log(trial);\n        this.startTrial();\n      } else if (params.genSubject == 'swap') {\n        this.subjectID = await this.trialSubjectService.generateNewSubject(this.id).toPromise();\n        // console.log(trial);\n        this.startTrial();\n        // this.startTrialQuestionnaire();\n      }\n    });\n  }\n\n  /**\n   * Output event listener from app-subject-select\n   * recieves the subjectID\n   * @param {string} event \n   */\n  selected(event) {\n    console.log(event);\n    this.subjectID = event;\n    this.idLater = false;\n    this.showSubjectSelect = false;\n  }\n\n  /**\n   * Routes to waiting screen where button is displayed for starting the trial.\n   */\n  async startTrial() {\n    // start trial with treatment id and subject id\n    let trial = await this.trialTreatmentService.startTreatment(this.id, this.subjectID, {deviceHeight: this.deviceHeight, deviceWidth: this.deviceWidth}).toPromise();\n    console.log(this.activatedRoute.snapshot.queryParamMap.has('quest'))\n    if (this.activatedRoute.snapshot.queryParamMap.has('quest')) {\n      this.router.navigate([`/t/${this.id}/s/${this.subjectID}/q1`]);\n    } else {\n      this.router.navigate(['/t/' + this.id + '/s/' + this.subjectID + '/shop/products']);\n    }\n  }\n  /**\n   * Only implemented to start a trial with preceeding questionnaire.\n   */\n  startTrialQuestionnaire() {\n    // create trial\n  }\n\n  /**\n   * Event listener for data binding to app-treatment-select component\n   * @param treatmentData \n   */\n  setUpTreatment(treatmentData) {\n    // you could cache the treatment data... \n    this.id = treatmentData._id;\n    // this.idLater = false;\n    this.showSelectForm = false; \n    this.showSubjectSelect = true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n        \n          \n        \n      \n    \n    \n      \n        Test Starten\n         -->\n      \n    \n  \n\n    \n\n    \n                \n                    ./trial-config.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                              Test Starten         -->            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'TrialConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrialLabelService.html":{"url":"injectables/TrialLabelService.html","title":"injectable - TrialLabelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TrialLabelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/trial/trial-services/trial-label.service.ts\n        \n\n            \n                Description\n            \n            \n                Trial label service, serves multiple components and provides label information from \nthe API \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLabelByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial-services/trial-label.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabelByID\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabelByID(labelID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-label.service.ts:21\n                \n            \n\n\n            \n                \n                    Return a label data object referenced in a treatment item.\nSee laebl.mode.js in api_store.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    labelID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Trial label service, serves multiple components and provides label information from \n * the API \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrialLabelService {\n\n  constructor(private http: HttpClient) { }\n  /**\n   * Return a label data object referenced in a treatment item.\n   * See laebl.mode.js in api_store.\n   * @param {string} labelID\n   * @returns {Observable} \n   */\n  getLabelByID(labelID) {\n    return this.http.get(environment.apiURI + '/label/' + labelID);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrialLandingComponent.html":{"url":"components/TrialLandingComponent.html","title":"component - TrialLandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrialLandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/trial-landing/trial-landing.component.ts\n\n\n    \n        Description\n    \n    \n        Trial Landing Component\nRedirect target after trial is started. \nTrialLandingTodo\ncategories selection \nfeatured items display \ninfor at bottom... \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trial-landing\n            \n\n            \n                styleUrls\n                ./trial-landing.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trial-landing.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                routeToProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trialTreatmentService: TrialTreatmentService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial-landing/trial-landing.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trialTreatmentService\n                                                  \n                                                        \n                                                                        TrialTreatmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeToProducts\n                        \n                        \n                    \n                \n            \n            \n                \nrouteToProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-landing/trial-landing.component.ts:33\n                \n            \n\n\n            \n                \n                    OnClick listener for routing to products page.\nPerforms sanity check if all information is present before routing.\ndeprecated\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TrialTreatmentService } from '../trial-services/trial-treatment.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n/**\n * Trial Landing Component\n * \n * Redirect target after trial is started. \n * \n * {@link TrialLandingTodo}\n * categories selection \n * featured items display \n * infor at bottom... \n */\n@Component({\n  selector: 'app-trial-landing',\n  templateUrl: './trial-landing.component.html',\n  styleUrls: ['./trial-landing.component.scss']\n})\nexport class TrialLandingComponent {\n\n  constructor(\n    private trialTreatmentService: TrialTreatmentService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  /**\n   * OnClick listener for routing to products page.\n   * Performs sanity check if all information is present before routing.\n   * [deprecated]{@link deprecated}\n   */\n  routeToProducts() {\n    if (!this.trialTreatmentService.checkRoute()) {\n      this.router.navigate(['products'], { relativeTo: this.route });\n      console.log('somthing went wrong');\n      return;\n    }\n    this.router.navigate(['products'], { relativeTo: this.route });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         Willkommen beim Online Lebensmittelhandel\n      \n      \n        Kaufen Sie bei alle Produkte ein, die Sie für sich brauchen!\n      \n    \n    \n      Alle Produkte\n    \n  \n  \n\n  \n  \n\n  \n  \n\n  \n\n    \n\n    \n                \n                    ./trial-landing.component.scss\n                \n                .wrapper {\n  display: grid;\n  grid-template-rows: 210px auto 400px 250px;\n  grid-template-columns: 10fr;\n  height: 100%;\n}\n\n.welcome {\n  grid-row-start: 1;\n  grid-row-end: 1;\n  grid-column-start: 1;\n  grid-column-end: 10;\n  background-image: url(\"../../../assets/placeholder/landing/shop-banner.jpg\");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  padding: 0 15px;\n}\n\n.caption-banner {\n  font-size: 1.5em;\n  font-weight: 400;\n  //   line-height: 48px;\n  margin: 0;\n  margin-bottom: 10px;\n  padding: 0;\n}\n\n.subtitle-banner {\n  font-size: 1em;\n  font-weight: 400;\n  line-height: 1.5;\n  margin: 0;\n  padding: 0;\n}\n\nspan {\n  background: #fff;\n  display: inline;\n  padding: 4px 8px;\n}\n\n.categories {\n  grid-row-start: 2;\n  grid-row-end: 2;\n  grid-column-start: 1;\n  grid-column-end: 10;\n}\n\n.featured {\n  grid-row-start: 3;\n  grid-row-end: 3;\n  grid-column-start: 1;\n  grid-column-end: 10;\n}\n\n.info {\n  grid-row-start: 4;\n  grid-row-end: 4;\n  grid-column-start: 1;\n  grid-column-end: 10;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Willkommen beim Online Lebensmittelhandel                    Kaufen Sie bei alle Produkte ein, die Sie für sich brauchen!                    Alle Produkte                  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'TrialLandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrialModule.html":{"url":"modules/TrialModule.html","title":"module - TrialModule","body":"\n                   \n\n\n\n\n    Modules\n    TrialModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrialModule\n\n\n\ncluster_TrialModule_declarations\n\n\n\ncluster_TrialModule_imports\n\n\n\ncluster_TrialModule_providers\n\n\n\n\nFilterComponent\n\nFilterComponent\n\n\n\nTrialModule\n\nTrialModule\n\nTrialModule -->\n\nFilterComponent->TrialModule\n\n\n\n\n\nFixedNavDirective\n\nFixedNavDirective\n\nTrialModule -->\n\nFixedNavDirective->TrialModule\n\n\n\n\n\nFoodCardComponent\n\nFoodCardComponent\n\nTrialModule -->\n\nFoodCardComponent->TrialModule\n\n\n\n\n\nFoodDetailsComponent\n\nFoodDetailsComponent\n\nTrialModule -->\n\nFoodDetailsComponent->TrialModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nTrialModule -->\n\nInfoDialogComponent->TrialModule\n\n\n\n\n\nItemGridComponent\n\nItemGridComponent\n\nTrialModule -->\n\nItemGridComponent->TrialModule\n\n\n\n\n\nScoreDirective\n\nScoreDirective\n\nTrialModule -->\n\nScoreDirective->TrialModule\n\n\n\n\n\nShoppingCartComponent\n\nShoppingCartComponent\n\nTrialModule -->\n\nShoppingCartComponent->TrialModule\n\n\n\n\n\nShoppingMetricsComponent\n\nShoppingMetricsComponent\n\nTrialModule -->\n\nShoppingMetricsComponent->TrialModule\n\n\n\n\n\nSubjectSelectComponent\n\nSubjectSelectComponent\n\nTrialModule -->\n\nSubjectSelectComponent->TrialModule\n\n\n\n\n\nSwapDialogComponent\n\nSwapDialogComponent\n\nTrialModule -->\n\nSwapDialogComponent->TrialModule\n\n\n\n\n\nSwapOptDialogComponent\n\nSwapOptDialogComponent\n\nTrialModule -->\n\nSwapOptDialogComponent->TrialModule\n\n\n\n\n\nTreatmentSelectComponent\n\nTreatmentSelectComponent\n\nTrialModule -->\n\nTreatmentSelectComponent->TrialModule\n\n\n\n\n\nTrialComponent\n\nTrialComponent\n\nTrialModule -->\n\nTrialComponent->TrialModule\n\n\n\n\n\nTrialConfigComponent\n\nTrialConfigComponent\n\nTrialModule -->\n\nTrialConfigComponent->TrialModule\n\n\n\n\n\nTrialLandingComponent\n\nTrialLandingComponent\n\nTrialModule -->\n\nTrialLandingComponent->TrialModule\n\n\n\n\n\nTrialShopComponent\n\nTrialShopComponent\n\nTrialModule -->\n\nTrialShopComponent->TrialModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrialModule -->\n\nSharedModule->TrialModule\n\n\n\n\n\nTrialRoutingModule\n\nTrialRoutingModule\n\nTrialModule -->\n\nTrialRoutingModule->TrialModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nTrialModule -->\n\nFilterService->TrialModule\n\n\n\n\n\nProductService\n\nProductService\n\nTrialModule -->\n\nProductService->TrialModule\n\n\n\n\n\nShoppingCartService\n\nShoppingCartService\n\nTrialModule -->\n\nShoppingCartService->TrialModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/trial/trial.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FilterComponent\n                        \n                        \n                            FixedNavDirective\n                        \n                        \n                            FoodCardComponent\n                        \n                        \n                            FoodDetailsComponent\n                        \n                        \n                            InfoDialogComponent\n                        \n                        \n                            ItemGridComponent\n                        \n                        \n                            ScoreDirective\n                        \n                        \n                            ShoppingCartComponent\n                        \n                        \n                            ShoppingMetricsComponent\n                        \n                        \n                            SubjectSelectComponent\n                        \n                        \n                            SwapDialogComponent\n                        \n                        \n                            SwapOptDialogComponent\n                        \n                        \n                            TreatmentSelectComponent\n                        \n                        \n                            TrialComponent\n                        \n                        \n                            TrialConfigComponent\n                        \n                        \n                            TrialLandingComponent\n                        \n                        \n                            TrialShopComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            InfoDialogComponent\n                        \n                        \n                            SwapDialogComponent\n                        \n                        \n                            SwapOptDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FilterService\n                        \n                        \n                            ProductService\n                        \n                        \n                            ShoppingCartService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TrialRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TrialRoutingModule } from './trial-routing.module';\nimport { TrialComponent } from './trial.component';\nimport { FoodCardComponent } from './food-card/food-card.component';\nimport { FoodDetailsComponent } from './food-details/food-details.component';\nimport { ItemGridComponent } from './item-grid/item-grid.component';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { ProductService } from './trial-services/product.service';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { FilterComponent } from './filter/filter.component';\nimport { SubjectSelectComponent } from './subject-select/subject-select.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { TreatmentSelectComponent } from './treatment-select/treatment-select.component';\nimport { ShoppingCartService } from './shopping-cart/shopping-cart.service';\nimport { TrialConfigComponent } from './trial-config/trial-config.component';\n// import { HeaderComponent } from '../shared/header/header.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FilterService } from './trial-services/filter.service';\nimport { TrialLandingComponent } from './trial-landing/trial-landing.component';\nimport { TrialShopComponent } from './trial-shop/trial-shop.component';\nimport { TrialTreatmentService } from './trial-services/trial-treatment.service';\nimport { ShoppingMetricsComponent } from './shopping-metrics/shopping-metrics.component';\nimport { InfoDialogComponent } from './info-dialog/info-dialog.component';\nimport { SwapDialogComponent } from './swap-dialog/swap-dialog.component';\nimport { StartTrialComponent } from './start-trial/start-trial.component';\nimport { ScoreDirective } from './food-card/score.directive';\nimport { FixedNavDirective } from './trial-shop/fixed-nav.directive';\nimport { Q1Component } from './q1/q1.component';\nimport { Q2Component } from './q2/q2.component';\nimport { SwapOptDialogComponent } from './swap-opt-dialog/swap-opt-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    TrialComponent,\n    FoodCardComponent,\n    FoodDetailsComponent,\n    ItemGridComponent,\n    ShoppingCartComponent,\n    FilterComponent,\n    SubjectSelectComponent,\n    TreatmentSelectComponent,\n    TrialConfigComponent,\n    TrialLandingComponent,\n    TrialShopComponent,\n    ShoppingMetricsComponent,\n    InfoDialogComponent,\n    SwapDialogComponent,\n    StartTrialComponent,\n    ScoreDirective,\n    FixedNavDirective,\n    Q1Component,\n    Q2Component,\n    SwapOptDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    TrialRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDividerModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatDividerModule,\n    MatListModule,\n    MatTreeModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatBadgeModule,\n    MatToolbarModule\n  ],\n  providers: [\n    ProductService,\n    ShoppingCartService,\n    FilterService,\n    TrialTreatmentService,\n  ],\n  entryComponents: [InfoDialogComponent, SwapDialogComponent, SwapOptDialogComponent]\n})\nexport class TrialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrialRoutingModule.html":{"url":"modules/TrialRoutingModule.html","title":"module - TrialRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TrialRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/trial/trial-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrialComponent } from './trial.component';\nimport { FoodDetailsComponent } from './food-details/food-details.component';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { TrialConfigComponent } from './trial-config/trial-config.component';\nimport { TrialLandingComponent } from './trial-landing/trial-landing.component';\nimport { TrialShopComponent } from './trial-shop/trial-shop.component';\nimport { TrialTreatmentService } from './trial-services/trial-treatment.service';\nimport { StartTrialComponent } from './start-trial/start-trial.component';\nimport { Q1Component } from './q1/q1.component';\nimport { Q2Component } from './q2/q2.component';\n\nconst routes: Routes = [\n  {\n    path: 't/:treatmentID/s/:subjectID/shop',\n    component: TrialComponent,\n    resolve: { treatment: TrialTreatmentService },\n    children: [\n      { path: '', component: TrialLandingComponent },\n      { path: 'cart', component: ShoppingCartComponent },\n      { path: 'products', component: TrialShopComponent },\n      { path: 'products/:id', component: FoodDetailsComponent },\n    ]\n  },\n  { path: 't', component: TrialConfigComponent },\n  { path: 't/:treatmentID', component: TrialConfigComponent },\n  { path: 't/:treatmentID/s/:subjectID/start', component: StartTrialComponent },\n  { path: 't/:treatmentID/s/:subjectID/q1', component: Q1Component },\n  { path: 't/:treatmentID/s/:subjectID/q2', component: Q2Component },\n  { path: 't/:treatmentID/s/:subjectID/end', loadChildren: './end-trial/end-trial.module#EndTrialModule' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TrialRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrialShopComponent.html":{"url":"components/TrialShopComponent.html","title":"component - TrialShopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrialShopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/trial/trial-shop/trial-shop.component.ts\n\n\n    \n        Description\n    \n    \n        Trial shop component primarily layout purposes,\ncombines app filter and app itemgrid in css grid.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trial-shop\n            \n\n            \n                styleUrls\n                ./trial-shop.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trial-shop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                innerWidth\n                            \n                            \n                                isFirefox\n                            \n                            \n                                nav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeNav\n                            \n                            \n                                fixed\n                            \n                            \n                                openNav\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial-shop/trial-shop.component.ts:25\n                            \n                        \n\n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-shop/trial-shop.component.ts:14\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeNav\n                        \n                        \n                    \n                \n            \n            \n                \ncloseNav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-shop/trial-shop.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fixed\n                        \n                        \n                    \n                \n            \n            \n                \nfixed($event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-shop/trial-shop.component.ts:21\n                \n            \n\n\n            \n                \n                    Databinding for fixed nav directive on filter component. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openNav\n                        \n                        \n                    \n                \n            \n            \n                \nopenNav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-shop/trial-shop.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            innerWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : window.innerWidth\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-shop/trial-shop.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirefox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-shop/trial-shop.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { fixed: false, width: '0px' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-shop/trial-shop.component.ts:25\n                            \n                        \n\n                \n                    \n                        Data for determining fixed status and width of filter component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\n\n/**\n * Trial shop component primarily layout purposes,\n * combines app filter and app itemgrid in css grid.\n */\n@Component({\n  selector: 'app-trial-shop',\n  templateUrl: './trial-shop.component.html',\n  styleUrls: ['./trial-shop.component.scss']\n})\nexport class TrialShopComponent {\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.innerWidth = window.innerWidth;\n  }\n  innerWidth: any = window.innerWidth;\n  isFirefox: boolean;\n\n  /**Databinding for fixed nav directive on filter component. */\n  fixed($event) {\n    this.nav = $event;\n  }\n  /**Data for determining fixed status and width of filter component. */\n  nav = { fixed: false, width: '0px' };\n\n  constructor() {\n    this.isFirefox = navigator.userAgent.indexOf('Firefox') > -1 ? true : false;\n  }\n\n  openNav() {\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n  }\n\n  closeNav() {\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n  }\n\n}\n\n    \n\n    \n        \n   520; else popover\">\n    \n      \n    \n    Placeholder\n  \n  \n     -->\n    \n  \n\n\n\n  \n    &times;\n    \n  \n  \n    &#9776;\n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./trial-shop.component.scss\n                \n                .cont {\n  display: grid;\n  // grid-template-rows: 50px auto;\n  grid-template-columns: 1.25fr 6fr;\n  height: 100%;\n}\n\n// .search {\n//     grid-row-start: 1;\n//     grid-row-end: 1;\n//     grid-column-start: 1;\n//     grid-column-end: 7;\n//     background-color: aqua;\n// }\n\nnav {\n  // background-color: aqua;\n  // grid-row-start: 1;\n  // grid-row-end: 1;\n  grid-column-start: 1;\n  grid-column-end: 1;\n}\n\nmain {\n  // background-color: tomato;\n  // grid-row-start: 2;\n  // grid-row-end: 2;\n  grid-column-start: 2;\n  grid-column-end: 7;\n}\n\n.fixed {\n  top: 0;\n  position: fixed;\n  width: 262px;\n}\n\n@media (max-width: 520px) {\n  nav {\n    // display: none;\n    // grid-column-start: 1;\n    // grid-column-end: 1;\n  }\n\n  main {\n    grid-column-start: 1;\n    grid-column-end: 7;\n  }\n}\n\n.flt-btn {\n  position: sticky;\n  top: 90%;\n  left: 15px;\n  z-index: 100;\n}\n\n.b-sh {\n  display: block;\n  padding-left: 7px;\n  box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12);\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  background-color: #fff;\n}\n\n.sidenav {\n  height: 100%;\n  width: 0;\n  position: fixed;\n  z-index: 101;\n  top: 0;\n  left: 0;\n  background-color: #3f51b5;\n  overflow-x: hidden;\n  transition: 0.5s;\n  padding-top: 60px;\n}\n\n.sidenav .closebtn {\n  color: #fff;\n  position: absolute;\n  top: 0;\n  right: 25px;\n  font-size: 36px;\n  margin-left: 50px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   520; else popover\">                  Placeholder         -->            ×            ☰    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AdminHeaderComponent', 'selector': 'app-admin-header'},{'name': 'AdminLandingComponent', 'selector': 'app-admin-landing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EndTrialComponent', 'selector': 'app-end-trial'},{'name': 'FilterAllocateDialogComponent', 'selector': 'app-filter-allocate-dialog'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FoodCardComponent', 'selector': 'app-food-card'},{'name': 'FoodDetailsComponent', 'selector': 'app-food-details'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImageDialogComponent', 'selector': 'app-image-dialog'},{'name': 'InfoDialogComponent', 'selector': 'app-info-dialog'},{'name': 'ItemAllocateDialogComponent', 'selector': 'app-item-allocate-dialog'},{'name': 'ItemCreateComponent', 'selector': 'app-item-create'},{'name': 'ItemGridComponent', 'selector': 'app-item-grid'},{'name': 'ItemManageComponent', 'selector': 'app-item-manage'},{'name': 'LabelAllocateDialogComponent', 'selector': 'app-label-allocate-dialog'},{'name': 'LabelCreateComponent', 'selector': 'app-label-create'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreCreateComponent', 'selector': 'app-score-create'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'ShoppingMetricsComponent', 'selector': 'app-shopping-metrics'},{'name': 'SubjectManageComponent', 'selector': 'app-subject-manage'},{'name': 'SubjectSelectComponent', 'selector': 'app-subject-select'},{'name': 'SwapDialogComponent', 'selector': 'app-swap-dialog'},{'name': 'SwapOptDialogComponent', 'selector': 'app-swap-opt-dialog'},{'name': 'TaxCreateComponent', 'selector': 'app-tax-create'},{'name': 'TreatmentCreateComponent', 'selector': 'app-treatment-create'},{'name': 'TreatmentSelectComponent', 'selector': 'app-treatment-select'},{'name': 'TreeCreateComponent', 'selector': 'app-tree-create'},{'name': 'TreeManageComponent', 'selector': 'app-tree-manage'},{'name': 'TrialComponent', 'selector': 'app-trial'},{'name': 'TrialConfigComponent', 'selector': 'app-trial-config'},{'name': 'TrialLandingComponent', 'selector': 'app-trial-landing'},{'name': 'TrialShopComponent', 'selector': 'app-trial-shop'}];\n    var DIRECTIVES = [{'name': 'FixedNavDirective', 'selector': '[appFixedNav]'},{'name': 'ScoreDirective', 'selector': '[appScore]'}];\n    var ACTUAL_COMPONENT = {'name': 'TrialShopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrialSubjectService.html":{"url":"injectables/TrialSubjectService.html","title":"injectable - TrialSubjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TrialSubjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/trial/trial-services/trial-subject.service.ts\n        \n\n            \n                Description\n            \n            \n                Trial subject service delivers subject specific information.\nUsed by multiple components.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                recording\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkDataRecording\n                            \n                            \n                                generateNewSubject\n                            \n                            \n                                getSubjectID\n                            \n                            \n                                setSubjectID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial-services/trial-subject.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkDataRecording\n                        \n                        \n                    \n                \n            \n            \n                \ncheckDataRecording(treatmentID, subjectID)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-subject.service.ts:53\n                \n            \n\n\n            \n                \n                    Checks if trial data is recording (flag on trial model). If has not already ended sets\nflag to recording true.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treatmentID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subjectID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateNewSubject\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateNewSubject(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-subject.service.ts:75\n                \n            \n\n\n            \n                \n                    Generates a one-of subject for starting a trial.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        treatmentID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        subject Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSubjectID\n                        \n                        \n                    \n                \n            \n            \n                \ngetSubjectID()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-subject.service.ts:38\n                \n            \n\n\n            \n                \n                    Checks if id is in memory if not returns id from session storage.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        subjectID\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSubjectID\n                        \n                        \n                    \n                \n            \n            \n                \nsetSubjectID(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-subject.service.ts:28\n                \n            \n\n\n            \n                \n                    Sets subjectID in memory and in session store.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/trial-subject.service.ts:16\n                            \n                        \n\n                \n                    \n                        SubjectID of current subject performing test. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recording\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/trial/trial-services/trial-subject.service.ts:18\n                            \n                        \n\n                \n                    \n                        Switch for determining if the data generated should be recorded (saved to database). \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Trial subject service delivers subject specific information.\n * Used by multiple components.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrialSubjectService {\n  /**SubjectID of current subject performing test. */\n  id: any;\n  /**Switch for determining if the data generated should be recorded (saved to database). */\n  recording: boolean = false;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Sets subjectID in memory and in session store.\n   * @param {string} id \n   */\n  setSubjectID(id) {\n    console.log('Subject: ' + id);\n    this.id = id;\n    sessionStorage.setItem('subjectID', id);\n  }\n\n  /**\n   * Checks if id is in memory if not returns id from session storage.\n   * @returns {string} subjectID\n   */\n  getSubjectID(): string {\n    if (!this.id) {\n      // error subject reference lost or not provided? get from route\n      this.setSubjectID(sessionStorage.getItem('subjectID'));\n    }\n    return this.id;\n  }\n\n  /**\n   * Checks if trial data is recording (flag on trial model). If has not already ended sets\n   * flag to recording true.\n   * @param treatmentID \n   * @param subjectID \n   * @returns {Observable}\n   */\n  checkDataRecording(treatmentID, subjectID) {\n    return new Observable((sub) => {\n      this.http.get(environment.apiURI + '/check/trial/' + treatmentID + '/' + subjectID)\n        .subscribe(\n          (val) => {\n            console.log(val);\n            this.recording = true;\n            sub.next(val);\n          },\n          (error) => {\n            sub.error(error);\n            this.recording = false;\n          }\n        );\n    });\n  }\n\n  /**\n   * Generates a one-of subject for starting a trial.\n   * @param {string} id treatmentID\n   * @returns {Observable} subject Object\n   */\n  generateNewSubject(id) {\n    // this.http.get()\n    return this.http.post(environment.apiURI + '/subject/create/' + id, { name: 'N/A', reusable: false });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TrialTreatmentService.html":{"url":"guards/TrialTreatmentService.html","title":"guard - TrialTreatmentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TrialTreatmentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/trial/trial-services/trial-treatment.service.ts\n            \n\n                \n                Description\n                \n                \n                    Service for providing data in connection to the treatment specification.\nServes multiple components.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                treatmentData\n                            \n                            \n                                treatmentID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkRoute\n                            \n                            \n                                getCurrency\n                            \n                            \n                                getDisplayOptions\n                            \n                            \n                                getSpecificTreatmentData\n                            \n                            \n                                getSwapConfig\n                            \n                            \n                                getTreatmentID\n                            \n                            \n                                resolve\n                            \n                            \n                                setTreatmentDataOnReload\n                            \n                            \n                                setTreatmentID\n                            \n                            \n                                startTreatment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, productService: ProductService, filterService: FilterService, shoppingCartService: ShoppingCartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/trial/trial-services/trial-treatment.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkRoute\n                        \n                        \n                    \n                \n            \n            \n                \ncheckRoute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-treatment.service.ts:48\n                \n            \n\n\n            \n                \n                    Sanity check for routing from shop landing to products page.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrency\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrency()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-treatment.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        currency specification in first treamtent item\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDisplayOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetDisplayOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-treatment.service.ts:126\n                \n            \n\n\n            \n                \n                    Return only showOptions from specified treatment.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        display options\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpecificTreatmentData\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpecificTreatmentData(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-treatment.service.ts:72\n                \n            \n\n\n            \n                \n                    For retrieving specific treatment data, selection process during \ntrial config. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSwapConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetSwapConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-treatment.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreatmentID\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreatmentID()\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-treatment.service.ts:34\n                \n            \n\n\n            \n                \n                    checks if treatmentID is still in memory if not gets it from the session store.\n\n\n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        treatmentID\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-treatment.service.ts:102\n                \n            \n\n\n            \n                \n                    Used for router resolver, delivers treatment Data. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTreatmentDataOnReload\n                        \n                        \n                    \n                \n            \n            \n                \nsetTreatmentDataOnReload(treatmentData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-treatment.service.ts:57\n                \n            \n\n\n            \n                \n                    Resets all data lost when treatemet is reloaded by user. \nSets \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treatmentData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTreatmentID\n                        \n                        \n                    \n                \n            \n            \n                \nsetTreatmentID(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-treatment.service.ts:92\n                \n            \n\n\n            \n                \n                    Sets treatmentID in memory and in session storage.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startTreatment\n                        \n                        \n                    \n                \n            \n            \n                \nstartTreatment(treatmentID, subjectID, device)\n                \n            \n\n\n            \n                \n                    Defined in src/app/trial/trial-services/trial-treatment.service.ts:143\n                \n            \n\n\n            \n                \n                    Post to start treatment data recording. Called after trial config step is done.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treatmentID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subjectID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    device\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { ProductService } from './product.service';\nimport { FilterService } from './filter.service';\nimport { ShoppingCartService } from '../shopping-cart/shopping-cart.service';\n\n/**\n * Service for providing data in connection to the treatment specification.\n * Serves multiple components.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrialTreatmentService implements Resolve> {\n  /**Holds the db index of current treatment. */\n  treatmentID: String;\n  /**Holds the treatment data of current treatment. */\n  treatmentData: any;\n\n  constructor(\n    private http: HttpClient,\n    private productService: ProductService,\n    private filterService: FilterService,\n    private shoppingCartService: ShoppingCartService\n  ) { }\n\n  /**\n   * checks if treatmentID is still in memory if not gets it from the session store.\n   * @returns {string} treatmentID\n   */\n  getTreatmentID(): String {\n    console.log(this.treatmentID);\n    if (!this.treatmentID) {\n      this.setTreatmentID(sessionStorage.getItem('treatmentID'));\n      // console.log(sessionStorage.getItem('treatmentID'));\n      // return sessionStorage.getItem('treatmentID');\n    }\n    return this.treatmentID;\n  }\n\n  /**\n   * Sanity check for routing from shop landing to products page.\n   * @returns {boolean} \n   */\n  checkRoute(): boolean {\n    return this.treatmentData != undefined;\n  }\n\n  /**\n   * Resets all data lost when treatemet is reloaded by user. \n   * Sets \n   * @param treatmentData \n   */\n  setTreatmentDataOnReload(treatmentData) {\n    this.setTreatmentID(treatmentData._id);\n    this.treatmentData = treatmentData;\n    this.shoppingCartService.getAndSetCart();\n    this.productService.resetProducts(treatmentData.items);\n    this.filterService.setData(treatmentData.filters);\n  }\n\n  // for selecting \n  /**\n   * For retrieving specific treatment data, selection process during \n   * trial config. \n   * @param {string} id \n   * @returns {Observable} \n   */\n  getSpecificTreatmentData(id): Observable {\n    this.setTreatmentID(id);\n    return new Observable((sub) => {\n      this.http.get(environment.apiURI + '/t/' + id).subscribe(\n        (val) => {\n          this.treatmentData = val;\n          // console.log(val);\n          sub.next(val);\n          sub.complete();\n        },\n        (error) => {\n          sub.error(error);\n        }\n      );\n    });\n  }\n  /**\n   * Sets treatmentID in memory and in session storage.\n   * @param {string} id \n   */\n  setTreatmentID(id): void {\n    sessionStorage.setItem('treatmentID', id);\n    this.treatmentID = id;\n  }\n\n  /**\n   * Used for router resolver, delivers treatment Data. \n   * @param {ActivatedRouteSnapshot} route \n   * @returns {Observable}\n   */\n  resolve(route: ActivatedRouteSnapshot) {\n    let id = route.paramMap.get('treatmentID');\n    return new Observable((sub) => {\n      this.getSpecificTreatmentData(id).subscribe(\n        (val) => {\n          console.log(val);\n          sub.next(val);\n          sub.complete();\n        }\n      );\n    });\n  }\n\n  /**\n   * @returns {string} currency specification in first treamtent item\n   */\n  getCurrency() {\n    return this.treatmentData.items[0].currency;\n  }\n\n  /**\n   * Return only showOptions from specified treatment.\n   * @returns {Object} display options\n   */\n  getDisplayOptions() {\n    if (!this.treatmentData.showOptions) {\n      return { showSum: true, numOfItems: 10 };\n    }\n    return this.treatmentData.showOptions;\n  }\n\n  getSwapConfig() {\n    return this.treatmentData.swapConfig;\n  }\n\n  /**\n   * Post to start treatment data recording. Called after trial config step is done.\n   * @param treatmentID \n   * @param subjectID \n   * @returns {Observalble}\n   */\n  startTreatment(treatmentID, subjectID, device) {\n    return this.http.post(`${environment.apiURI}/start/trial/${treatmentID}/${subjectID}`, device);\n  }\n\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/admin/admin-header/admin-header.component.ts\n            \n            component\n            AdminHeaderComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/admin/admin-landing/admin-landing.component.ts\n            \n            component\n            AdminLandingComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/admin/filter-allocate-dialog/filter-allocate-dialog.component.ts\n            \n            component\n            FilterAllocateDialogComponent\n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                src/app/admin/item-allocate-dialog/item-allocate-dialog.component.ts\n            \n            component\n            ItemAllocateDialogComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/admin/item-create/item-create.component.ts\n            \n            component\n            ItemCreateComponent\n            \n                100 %\n                (53/53)\n            \n        \n        \n            \n                \n                src/app/admin/item-manage/item-manage.component.ts\n            \n            component\n            ItemManageComponent\n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                src/app/admin/label-allocate-dialog/label-allocate-dialog.component.ts\n            \n            component\n            LabelAllocateDialogComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/admin/label-create/label-create.component.ts\n            \n            component\n            LabelCreateComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/admin/score-create/score-create.component.ts\n            \n            component\n            ScoreCreateComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/admin/services/admin-user.service.ts\n            \n            injectable\n            AdminUserService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/admin/services/item-resolver.service.ts\n            \n            guard\n            ItemResolverService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/admin/services/item.service.ts\n            \n            injectable\n            ItemService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/admin/services/label.service.ts\n            \n            injectable\n            LabelService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/admin/services/score.service.ts\n            \n            injectable\n            ScoreService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/admin/services/tax.service.ts\n            \n            injectable\n            TaxService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/admin/services/treatment.service.ts\n            \n            guard\n            TreatmentService\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/app/admin/services/tree.service.ts\n            \n            injectable\n            TreeService\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/admin/subject-manage/subject-manage.component.ts\n            \n            component\n            SubjectManageComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/admin/tax-create/tax-create.component.ts\n            \n            component\n            TaxCreateComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/admin/treatment-create/treatment-create.component.ts\n            \n            component\n            TreatmentCreateComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/admin/tree-create/tree-create.component.ts\n            \n            component\n            TreeCreateComponent\n            \n                92 %\n                (25/27)\n            \n        \n        \n            \n                \n                src/app/admin/tree-manage/tree-manage.component.ts\n            \n            component\n            TreeManageComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/auth/_models/user.model.ts\n            \n            interface\n            LoginData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/auth/_models/user.model.ts\n            \n            interface\n            LoginResp\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/auth/_models/user.model.ts\n            \n            interface\n            RegisterData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/auth/_models/user.model.ts\n            \n            interface\n            RegisterResp\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/register/register.component.ts\n            \n            function\n            passwordMatchValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/landing/landing.component.ts\n            \n            component\n            LandingComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/notfound/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/image-dialog/image-dialog.component.ts\n            \n            component\n            ImageDialogComponent\n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                src/app/shared/services/image.service.ts\n            \n            injectable\n            ImageService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/trial/end-trial/end-trial.component.ts\n            \n            component\n            EndTrialComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/trial/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/trial/filter/filter.component.ts\n            \n            interface\n            ExampleFlatNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/trial/food-card/food-card.component.ts\n            \n            component\n            FoodCardComponent\n            \n                75 %\n                (12/16)\n            \n        \n        \n            \n                \n                src/app/trial/food-card/score.directive.ts\n            \n            directive\n            ScoreDirective\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/trial/food-details/food-details.component.ts\n            \n            component\n            FoodDetailsComponent\n            \n                52 %\n                (9/17)\n            \n        \n        \n            \n                \n                src/app/trial/info-dialog/info-dialog.component.ts\n            \n            component\n            InfoDialogComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/trial/item-grid/item-grid.component.ts\n            \n            component\n            ItemGridComponent\n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                src/app/trial/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/trial/shopping-cart/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/trial/shopping-metrics/shopping-metrics.component.ts\n            \n            component\n            ShoppingMetricsComponent\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/trial/subject-select/subject-select.component.ts\n            \n            component\n            SubjectSelectComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/trial/swap-dialog/swap-dialog.component.ts\n            \n            component\n            SwapDialogComponent\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/trial/swap-opt-dialog/swap-opt-dialog.component.ts\n            \n            component\n            SwapOptDialogComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/trial/treatment-select/treatment-select.component.ts\n            \n            component\n            TreatmentSelectComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/trial/trial-config/trial-config.component.ts\n            \n            component\n            TrialConfigComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/trial/trial-landing/trial-landing.component.ts\n            \n            component\n            TrialLandingComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/trial/trial-services/events.service.ts\n            \n            injectable\n            EventsService\n            \n                71 %\n                (10/14)\n            \n        \n        \n            \n                \n                src/app/trial/trial-services/filter.service.ts\n            \n            injectable\n            FilterService\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/trial/trial-services/product.service.ts\n            \n            injectable\n            ProductService\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/trial/trial-services/routing-tracker.service.ts\n            \n            injectable\n            RoutingTrackerService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/trial/trial-services/trial-label.service.ts\n            \n            injectable\n            TrialLabelService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/trial/trial-services/trial-subject.service.ts\n            \n            injectable\n            TrialSubjectService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/trial/trial-services/trial-treatment.service.ts\n            \n            guard\n            TrialTreatmentService\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                src/app/trial/trial-shop/fixed-nav.directive.ts\n            \n            directive\n            FixedNavDirective\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/trial/trial-shop/trial-shop.component.ts\n            \n            component\n            TrialShopComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/trial/trial.component.ts\n            \n            component\n            TrialComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            bootstrap : ^4.4.1\n        \n            core-js : ^2.6.11\n        \n            fs : 0.0.1-security\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.4.1\n        \n            material-design-icons : ^3.0.1\n        \n            popper : ^1.0.1\n        \n            rxjs : ^6.5.3\n        \n            tslib : ^1.10.0\n        \n            underscore : ^1.9.1\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            passwordMatchValidator   (src/.../register.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/register/register.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            passwordMatchValidator\n                        \n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(g)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nStorefront\nThis project was generated with Angular CLI version 7.3.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EndTrialModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrialModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrialRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_EndTrialModule\n\n\n\ncluster_EndTrialModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_TrialModule\n\n\n\ncluster_TrialModule_declarations\n\n\n\ncluster_TrialModule_imports\n\n\n\ncluster_TrialModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHeaderComponent\n\nAdminHeaderComponent\n\nAdminModule -->\n\nAdminHeaderComponent->AdminModule\n\n\n\n\n\nAdminLandingComponent\n\nAdminLandingComponent\n\nAdminModule -->\n\nAdminLandingComponent->AdminModule\n\n\n\n\n\nFilterAllocateDialogComponent\n\nFilterAllocateDialogComponent\n\nAdminModule -->\n\nFilterAllocateDialogComponent->AdminModule\n\n\n\n\n\nItemAllocateDialogComponent\n\nItemAllocateDialogComponent\n\nAdminModule -->\n\nItemAllocateDialogComponent->AdminModule\n\n\n\n\n\nItemCreateComponent\n\nItemCreateComponent\n\nAdminModule -->\n\nItemCreateComponent->AdminModule\n\n\n\n\n\nItemManageComponent\n\nItemManageComponent\n\nAdminModule -->\n\nItemManageComponent->AdminModule\n\n\n\n\n\nLabelAllocateDialogComponent\n\nLabelAllocateDialogComponent\n\nAdminModule -->\n\nLabelAllocateDialogComponent->AdminModule\n\n\n\n\n\nLabelCreateComponent\n\nLabelCreateComponent\n\nAdminModule -->\n\nLabelCreateComponent->AdminModule\n\n\n\n\n\nScoreCreateComponent\n\nScoreCreateComponent\n\nAdminModule -->\n\nScoreCreateComponent->AdminModule\n\n\n\n\n\nSubjectManageComponent\n\nSubjectManageComponent\n\nAdminModule -->\n\nSubjectManageComponent->AdminModule\n\n\n\n\n\nTaxCreateComponent\n\nTaxCreateComponent\n\nAdminModule -->\n\nTaxCreateComponent->AdminModule\n\n\n\n\n\nTreatmentCreateComponent\n\nTreatmentCreateComponent\n\nAdminModule -->\n\nTreatmentCreateComponent->AdminModule\n\n\n\n\n\nTreeCreateComponent\n\nTreeCreateComponent\n\nAdminModule -->\n\nTreeCreateComponent->AdminModule\n\n\n\n\n\nTreeManageComponent\n\nTreeManageComponent\n\nAdminModule -->\n\nTreeManageComponent->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nItemService\n\nItemService\n\nAdminModule -->\n\nItemService->AdminModule\n\n\n\n\n\nTreeService\n\nTreeService\n\nAdminModule -->\n\nTreeService->AdminModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nNotfoundComponent\n\nNotfoundComponent\n\nAppModule -->\n\nNotfoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTrialModule\n\nTrialModule\n\nTrialModule -->\n\nSharedModule->TrialModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nImageDialogComponent \n\nImageDialogComponent \n\nImageDialogComponent  -->\n\nSharedModule->ImageDialogComponent \n\n\n\nAppModule -->\n\nTrialModule->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nAuthModule->RegisterComponent \n\n\n\n\n\nEndTrialComponent\n\nEndTrialComponent\n\n\n\nEndTrialModule\n\nEndTrialModule\n\nEndTrialModule -->\n\nEndTrialComponent->EndTrialModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nImageDialogComponent\n\nImageDialogComponent\n\nSharedModule -->\n\nImageDialogComponent->SharedModule\n\n\n\n\n\nImageService\n\nImageService\n\nSharedModule -->\n\nImageService->SharedModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nTrialModule -->\n\nFilterComponent->TrialModule\n\n\n\n\n\nFixedNavDirective\n\nFixedNavDirective\n\nTrialModule -->\n\nFixedNavDirective->TrialModule\n\n\n\n\n\nFoodCardComponent\n\nFoodCardComponent\n\nTrialModule -->\n\nFoodCardComponent->TrialModule\n\n\n\n\n\nFoodDetailsComponent\n\nFoodDetailsComponent\n\nTrialModule -->\n\nFoodDetailsComponent->TrialModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nTrialModule -->\n\nInfoDialogComponent->TrialModule\n\n\n\n\n\nItemGridComponent\n\nItemGridComponent\n\nTrialModule -->\n\nItemGridComponent->TrialModule\n\n\n\n\n\nScoreDirective\n\nScoreDirective\n\nTrialModule -->\n\nScoreDirective->TrialModule\n\n\n\n\n\nShoppingCartComponent\n\nShoppingCartComponent\n\nTrialModule -->\n\nShoppingCartComponent->TrialModule\n\n\n\n\n\nShoppingMetricsComponent\n\nShoppingMetricsComponent\n\nTrialModule -->\n\nShoppingMetricsComponent->TrialModule\n\n\n\n\n\nSubjectSelectComponent\n\nSubjectSelectComponent\n\nTrialModule -->\n\nSubjectSelectComponent->TrialModule\n\n\n\n\n\nSwapDialogComponent\n\nSwapDialogComponent\n\nTrialModule -->\n\nSwapDialogComponent->TrialModule\n\n\n\n\n\nSwapOptDialogComponent\n\nSwapOptDialogComponent\n\nTrialModule -->\n\nSwapOptDialogComponent->TrialModule\n\n\n\n\n\nTreatmentSelectComponent\n\nTreatmentSelectComponent\n\nTrialModule -->\n\nTreatmentSelectComponent->TrialModule\n\n\n\n\n\nTrialComponent\n\nTrialComponent\n\nTrialModule -->\n\nTrialComponent->TrialModule\n\n\n\n\n\nTrialConfigComponent\n\nTrialConfigComponent\n\nTrialModule -->\n\nTrialConfigComponent->TrialModule\n\n\n\n\n\nTrialLandingComponent\n\nTrialLandingComponent\n\nTrialModule -->\n\nTrialLandingComponent->TrialModule\n\n\n\n\n\nTrialShopComponent\n\nTrialShopComponent\n\nTrialModule -->\n\nTrialShopComponent->TrialModule\n\n\n\n\n\nTrialRoutingModule\n\nTrialRoutingModule\n\nTrialModule -->\n\nTrialRoutingModule->TrialModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nTrialModule -->\n\nFilterService->TrialModule\n\n\n\n\n\nProductService\n\nProductService\n\nTrialModule -->\n\nProductService->TrialModule\n\n\n\n\n\nShoppingCartService\n\nShoppingCartService\n\nTrialModule -->\n\nShoppingCartService->TrialModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        36 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /**@ignore */\n  production: false,\n  /**environment variable referencing the redirect url segment defined in proxy.config.json */\n  apiURI: '/api',\n  /**Dev max filesize for image upload. */\n  maxFileSizeBits: 5000000,\n  /**Display value for max filesize used in error messages. */\n  maxFileSize: '5MB'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
